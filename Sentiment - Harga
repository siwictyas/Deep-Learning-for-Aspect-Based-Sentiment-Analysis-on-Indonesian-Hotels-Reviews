{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Sentiment - Harga","provenance":[],"collapsed_sections":["jCh20tTkBoF-","Wq6wLNiOSfP3","Jkk7TrKBAous","cBwwrNpv-0_2","DHTDUWbYA2wP","uroMA0JNBNT1","EJ64PtWnBddd","xW7-NdCC9dl4","6hT6gKM48NOn"],"mount_file_id":"1di4PwQatAxCQyFCW2pv5lXsbNd9hdEP2","authorship_tag":"ABX9TyPZ7TBqrrSvHYN+ls8Ol9lw"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"2-qyyxYZSMyF","executionInfo":{"status":"ok","timestamp":1632298715127,"user_tz":-420,"elapsed":491,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["import keras\n","import numpy as np\n","import pandas as pd\n","import openpyxl\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","from keras.models import load_model\n","from nltk.corpus import stopwords\n","from nltk.tokenize import word_tokenize\n","import unicodedata\n","from collections import Counter\n","from imblearn.under_sampling import RandomUnderSampler\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","import warnings\n","import tensorflow as tf\n","warnings.simplefilter(action='ignore', category=FutureWarning)\n","np.random.seed(0)"],"execution_count":87,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jCh20tTkBoF-"},"source":["# Data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"N7fAJvKISNR2","executionInfo":{"status":"ok","timestamp":1632298991346,"user_tz":-420,"elapsed":3035,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"b8b9381c-06fb-4866-8b8f-0e6a32d2af61"},"source":["df = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/data_training.xlsx', usecols=[\"clean text\",\"clean text 2\", \"aspect\",\"sentiment\"])\n","df.head()"],"execution_count":115,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>clean text 2</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 clean text              clean text 2 aspect sentiment\n","0  shuttle gratis malioboro  shuttle gratis malioboro  harga  positive\n","1  dapat gratis course golf  dapat gratis course golf  harga  positive\n","2    gratis andong keliling    gratis andong keliling  harga  positive\n","3              sesuai harga              sesuai harga  harga  positive\n","4          harga terjangkau          harga terjangkau  harga  positive"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","metadata":{"id":"wLSH6SnfSUsk","executionInfo":{"status":"ok","timestamp":1632298991348,"user_tz":-420,"elapsed":32,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df = df.drop_duplicates()"],"execution_count":116,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"KQ-Ft7mQSXwt","executionInfo":{"status":"ok","timestamp":1632298991349,"user_tz":-420,"elapsed":31,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"589cd36e-3ff5-4d26-eac9-37d6e27b9f8a"},"source":["df = df.dropna()\n","df.reset_index(drop=True)"],"execution_count":117,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>clean text 2</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5653</th>\n","      <td>staff jutek bentak_bentak marah</td>\n","      <td>staff jutek bentak bentak marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5654</th>\n","      <td>staff mengatur parkir marah_marah</td>\n","      <td>staff mengatur parkir marah marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5655</th>\n","      <td>sajian sarapan lambat refill</td>\n","      <td>sajian sarapan lambat refill</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5656</th>\n","      <td>tidak_ada prokes terjaga tidak_ada social_dist...</td>\n","      <td>tidak ada prokes terjaga tidak ada social dist...</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5657</th>\n","      <td>staff tidak_ramah tidak_paham sop</td>\n","      <td>staff tidak ramah tidak paham sop</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5658 rows Ã— 4 columns</p>\n","</div>"],"text/plain":["                                             clean text  ... sentiment\n","0                              shuttle gratis malioboro  ...  positive\n","1                              dapat gratis course golf  ...  positive\n","2                                gratis andong keliling  ...  positive\n","3                                          sesuai harga  ...  positive\n","4                                      harga terjangkau  ...  positive\n","...                                                 ...  ...       ...\n","5653                    staff jutek bentak_bentak marah  ...  negative\n","5654                  staff mengatur parkir marah_marah  ...  negative\n","5655                       sajian sarapan lambat refill  ...  negative\n","5656  tidak_ada prokes terjaga tidak_ada social_dist...  ...  negative\n","5657                  staff tidak_ramah tidak_paham sop  ...  negative\n","\n","[5658 rows x 4 columns]"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6DUF0jjkSZa4","executionInfo":{"status":"ok","timestamp":1632298991352,"user_tz":-420,"elapsed":32,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"7a9eefef-3910-40c1-bb8d-cfcc90a28434"},"source":["df.sentiment.value_counts()"],"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["positive    2905\n","negative    2753\n","Name: sentiment, dtype: int64"]},"metadata":{},"execution_count":118}]},{"cell_type":"code","metadata":{"id":"SmH2XLrJSa6a","executionInfo":{"status":"ok","timestamp":1632298991354,"user_tz":-420,"elapsed":32,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_train = df.sample(frac = 1) #shuffle"],"execution_count":119,"outputs":[]},{"cell_type":"code","metadata":{"id":"Hk9ggR7JScx9","executionInfo":{"status":"ok","timestamp":1632298991355,"user_tz":-420,"elapsed":31,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# clean_text = df_train[[\"clean text\",\"aspect\",\"sentiment\"]]\n","# wo_punc_text = df_train[\"text_wo_punc\"]\n","# wo_neg_text = df_train[\"text_wo_neg\"]\n","# stemming = df_train[\"stemming\"]\n","# label = df_train[\"sentiment\"]"],"execution_count":120,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I2cy3RgtKHi4","executionInfo":{"status":"ok","timestamp":1632298991357,"user_tz":-420,"elapsed":32,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0ba1e19b-3b24-4644-8709-2cdc95275d5a"},"source":["t = df_train[df_train[\"aspect\"]==\"harga\"]\n","text = t[\"clean text 2\"] \n","label = t[\"sentiment\"]\n","print(t)"],"execution_count":121,"outputs":[{"output_type":"stream","name":"stdout","text":["                                             clean text  ... sentiment\n","3006                          tidak_nyaman harga segitu  ...  negative\n","299                     dapat harga murah pakai voucher  ...  positive\n","65                                       gratis makanan  ...  positive\n","3231  penghuni menggunakan fasilitas dikenakan tamba...  ...  negative\n","3155              hotel lain harga fasilitas lebih_baik  ...  negative\n","...                                                 ...  ...       ...\n","3011                      checkin tidak_bisa bayar cash  ...  negative\n","3004                                 tidak_sesuai harga  ...  negative\n","114                                         harga wajar  ...  positive\n","3120    harga lebih_mahal hotel bintang_lima sekitarnya  ...  negative\n","3345                         harga tertera cukup tinggi  ...  negative\n","\n","[825 rows x 4 columns]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"mh1FMUtc2o5M","executionInfo":{"status":"ok","timestamp":1632298991359,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"5cd483c8-c3c9-4643-cf24-6d772a762d4b"},"source":["t.sentiment.value_counts().plot(kind='bar', title='Count (target)');\n","print(t.sentiment.value_counts())"],"execution_count":122,"outputs":[{"output_type":"stream","name":"stdout","text":["positive    422\n","negative    403\n","Name: sentiment, dtype: int64\n"]},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"Wq6wLNiOSfP3"},"source":["# Modelling"]},{"cell_type":"markdown","metadata":{"id":"Jkk7TrKBAous"},"source":["## Neural Network"]},{"cell_type":"markdown","metadata":{"id":"cBwwrNpv-0_2"},"source":["### Var"]},{"cell_type":"code","metadata":{"id":"7Iqx73ywSepp","executionInfo":{"status":"ok","timestamp":1632298991362,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from tensorflow.keras.models import Sequential, Model\n","from tensorflow.keras.layers import Activation, GlobalAveragePooling1D, GlobalMaxPooling1D, BatchNormalization, Concatenate, Input, Embedding\n","from tensorflow.keras.layers import SimpleRNN, GRU, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, SpatialDropout1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras import initializers, regularizers, constraints, optimizers, layers\n","from tensorflow.keras.regularizers import l2\n","import keras.backend as K\n","import os\n","from keras import callbacks"],"execution_count":123,"outputs":[]},{"cell_type":"code","metadata":{"id":"HcLH7XqdG9pA","executionInfo":{"status":"ok","timestamp":1632298991363,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["earlystopping = callbacks.EarlyStopping(monitor =\"val_loss\", \n","                                        mode =\"min\", patience = 5, \n","                                        restore_best_weights = True)"],"execution_count":124,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_BOmSXv1TEG2","executionInfo":{"status":"ok","timestamp":1632298994440,"user_tz":-420,"elapsed":3109,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"97eb5a87-370d-4e0c-f984-f40c73d7ffd1"},"source":["pip install keras_self_attention"],"execution_count":125,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: keras_self_attention in /usr/local/lib/python3.7/dist-packages (0.50.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (1.19.5)\n","Requirement already satisfied: Keras in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (2.6.0)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1A0quJ_fTGeY","executionInfo":{"status":"ok","timestamp":1632298994442,"user_tz":-420,"elapsed":31,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"cb654419-a7cc-4f28-a563-02a3bd2dbb47"},"source":["max_features =20000\n","tokenizer = Tokenizer() \n","tokenizer.fit_on_texts(text.values) \n","max_seq_len = max([len(i.split()) for i in text])\n","\n","X = tokenizer.texts_to_sequences(text.values)\n","X = pad_sequences(X, maxlen=max_seq_len)\n","Y = pd.get_dummies(label).values\n","print(\"Shape of data tensor:\", X.shape)\n","print(\"Shape of label tensor:\",Y.shape)"],"execution_count":126,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of data tensor: (825, 12)\n","Shape of label tensor: (825, 2)\n"]}]},{"cell_type":"code","metadata":{"id":"Q6s50objTIlr","executionInfo":{"status":"ok","timestamp":1632298994444,"user_tz":-420,"elapsed":26,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.33, random_state = 0)"],"execution_count":127,"outputs":[]},{"cell_type":"code","metadata":{"id":"q9WgthpgNToG","executionInfo":{"status":"ok","timestamp":1632298994446,"user_tz":-420,"elapsed":23,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["unit = 100\n","dropout = 0.3\n","batch = 32\n","epoch = 100\n","output = 100\n","kernel = 3\n","filter = 32\n","opt=\"Adam\""],"execution_count":128,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DcM4p2ImTLdL"},"source":["### RNN"]},{"cell_type":"code","metadata":{"id":"oBV6f8FETKtp","executionInfo":{"status":"ok","timestamp":1632298994448,"user_tz":-420,"elapsed":23,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_rnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_rnn = Sequential()\n","  model_rnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_rnn.add(Dense(32, activation='relu'))\n","  model_rnn.add(SpatialDropout1D(dropout))\n","  model_rnn.add(SimpleRNN(unit))\n","  model_rnn.add(Dense(2, activation='sigmoid'))\n","  model_rnn.compile(optimizer=\"adam\", loss='binary_crossentropy', metrics=['acc'])\n","  print(model_rnn.summary())\n","\n","  return model_rnn"],"execution_count":129,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fiBDUCglTQJn","executionInfo":{"status":"ok","timestamp":1632298998048,"user_tz":-420,"elapsed":3621,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c3288799-cf71-4ffe-9845-b5992d18fe79"},"source":["m_rnn = get_model_rnn(X_train, Y_train)\n","history_RNN = m_rnn.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":130,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_8\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_8 (Embedding)      (None, 12, 100)           53900     \n","_________________________________________________________________\n","spatial_dropout1d_8 (Spatial (None, 12, 100)           0         \n","_________________________________________________________________\n","simple_rnn_1 (SimpleRNN)     (None, 100)               20100     \n","_________________________________________________________________\n","dense_8 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 74,202\n","Trainable params: 74,202\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","14/14 [==============================] - 2s 30ms/step - loss: 0.6820 - acc: 0.5624 - val_loss: 0.6581 - val_acc: 0.5856\n","Epoch 2/100\n","14/14 [==============================] - 0s 10ms/step - loss: 0.6105 - acc: 0.7256 - val_loss: 0.6253 - val_acc: 0.6216\n","Epoch 3/100\n","14/14 [==============================] - 0s 10ms/step - loss: 0.4873 - acc: 0.8571 - val_loss: 0.5306 - val_acc: 0.7117\n","Epoch 4/100\n","14/14 [==============================] - 0s 10ms/step - loss: 0.3270 - acc: 0.8844 - val_loss: 0.4530 - val_acc: 0.8288\n","Epoch 5/100\n","14/14 [==============================] - 0s 9ms/step - loss: 0.2312 - acc: 0.9274 - val_loss: 0.4881 - val_acc: 0.7387\n","Epoch 6/100\n","14/14 [==============================] - 0s 10ms/step - loss: 0.2065 - acc: 0.9478 - val_loss: 0.4134 - val_acc: 0.8198\n","Epoch 7/100\n","14/14 [==============================] - 0s 9ms/step - loss: 0.1400 - acc: 0.9728 - val_loss: 0.3537 - val_acc: 0.8649\n","Epoch 8/100\n","14/14 [==============================] - 0s 11ms/step - loss: 0.1076 - acc: 0.9796 - val_loss: 0.4465 - val_acc: 0.8288\n","Epoch 9/100\n","14/14 [==============================] - 0s 10ms/step - loss: 0.0856 - acc: 0.9864 - val_loss: 0.4159 - val_acc: 0.8559\n","Epoch 10/100\n","14/14 [==============================] - 0s 9ms/step - loss: 0.0763 - acc: 0.9796 - val_loss: 0.3906 - val_acc: 0.8559\n","Epoch 11/100\n","14/14 [==============================] - 0s 10ms/step - loss: 0.0616 - acc: 0.9887 - val_loss: 0.4309 - val_acc: 0.8288\n","Epoch 12/100\n","14/14 [==============================] - 0s 9ms/step - loss: 0.0518 - acc: 0.9864 - val_loss: 0.4214 - val_acc: 0.8288\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rc0j9TxoTR-A","executionInfo":{"status":"ok","timestamp":1632298998050,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"19bdf562-470f-4a28-a3a6-2ebbcb8fadbd"},"source":["score,acc_rnn = m_rnn.evaluate(X_test, Y_test)"],"execution_count":131,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 3ms/step - loss: 0.3562 - acc: 0.8864\n"]}]},{"cell_type":"code","metadata":{"id":"jWN9Q8QuTVXR","executionInfo":{"status":"ok","timestamp":1632298998050,"user_tz":-420,"elapsed":26,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_rnn.save('/content/drive/My Drive/Thesis/Code/Model/rnn_sentiment_model.h5')"],"execution_count":132,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"f_XeLWSjTX9o"},"source":["### GRU"]},{"cell_type":"code","metadata":{"id":"2zuM2gB8TXN8","executionInfo":{"status":"ok","timestamp":1632298998051,"user_tz":-420,"elapsed":26,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_gru(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_gru = Sequential()\n","  model_gru.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_gru.add(Dense(32, activation='relu'))\n","  model_gru.add(SpatialDropout1D(dropout))\n","  model_gru.add(GRU(unit))\n","  model_gru.add(Dense(2, activation='sigmoid'))\n","  model_gru.compile(optimizer=\"adam\", loss='binary_crossentropy', metrics=['acc'])\n","  print(model_gru.summary())\n","\n","  return model_gru"],"execution_count":133,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iYLfLwNYTehH","executionInfo":{"status":"ok","timestamp":1632299003780,"user_tz":-420,"elapsed":5754,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"279a0789-ffc1-41d5-f570-760901e4ff0d"},"source":["m_gru = get_model_gru(X_train, Y_train)\n","history_GRU = m_gru.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":134,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_9\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_9 (Embedding)      (None, 12, 100)           53900     \n","_________________________________________________________________\n","spatial_dropout1d_9 (Spatial (None, 12, 100)           0         \n","_________________________________________________________________\n","gru_1 (GRU)                  (None, 100)               60600     \n","_________________________________________________________________\n","dense_9 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 114,702\n","Trainable params: 114,702\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","14/14 [==============================] - 3s 51ms/step - loss: 0.6831 - acc: 0.6825 - val_loss: 0.6710 - val_acc: 0.6486\n","Epoch 2/100\n","14/14 [==============================] - 0s 16ms/step - loss: 0.6306 - acc: 0.7098 - val_loss: 0.6136 - val_acc: 0.6216\n","Epoch 3/100\n","14/14 [==============================] - 0s 17ms/step - loss: 0.4834 - acc: 0.8209 - val_loss: 0.4674 - val_acc: 0.8649\n","Epoch 4/100\n","14/14 [==============================] - 0s 17ms/step - loss: 0.3009 - acc: 0.8844 - val_loss: 0.3877 - val_acc: 0.8739\n","Epoch 5/100\n","14/14 [==============================] - 0s 16ms/step - loss: 0.2249 - acc: 0.9138 - val_loss: 0.3726 - val_acc: 0.8649\n","Epoch 6/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.1860 - acc: 0.9433 - val_loss: 0.3715 - val_acc: 0.8829\n","Epoch 7/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.1496 - acc: 0.9478 - val_loss: 0.3435 - val_acc: 0.8829\n","Epoch 8/100\n","14/14 [==============================] - 0s 16ms/step - loss: 0.1227 - acc: 0.9637 - val_loss: 0.3320 - val_acc: 0.8919\n","Epoch 9/100\n","14/14 [==============================] - 0s 17ms/step - loss: 0.1011 - acc: 0.9728 - val_loss: 0.3547 - val_acc: 0.9009\n","Epoch 10/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.0926 - acc: 0.9728 - val_loss: 0.3724 - val_acc: 0.8919\n","Epoch 11/100\n","14/14 [==============================] - 0s 17ms/step - loss: 0.0884 - acc: 0.9751 - val_loss: 0.4021 - val_acc: 0.8739\n","Epoch 12/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.0678 - acc: 0.9864 - val_loss: 0.4670 - val_acc: 0.8829\n","Epoch 13/100\n","14/14 [==============================] - 0s 17ms/step - loss: 0.0556 - acc: 0.9864 - val_loss: 0.4002 - val_acc: 0.8559\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l9uQanamTf88","executionInfo":{"status":"ok","timestamp":1632299005174,"user_tz":-420,"elapsed":1417,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"3baf5fcb-7424-435c-eb16-477d6d6da06b"},"source":["score,acc_gru = m_gru.evaluate(X_test, Y_test)"],"execution_count":135,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 4ms/step - loss: 0.3231 - acc: 0.8755\n"]}]},{"cell_type":"code","metadata":{"id":"cOS5Ff2ZTkEX","executionInfo":{"status":"ok","timestamp":1632299005175,"user_tz":-420,"elapsed":11,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_gru.save('/content/drive/My Drive/Thesis/Code/FixModel/gru_sentiment_harga_9048.h5')"],"execution_count":136,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hcWT_dKBTmvQ"},"source":["### LSTM"]},{"cell_type":"code","metadata":{"id":"3wX4AVxuTo4H","executionInfo":{"status":"ok","timestamp":1632299005176,"user_tz":-420,"elapsed":9,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_LSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_LSTM = Sequential()\n","  model_LSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_LSTM.add(Dense(32, activation='relu'))\n","  model_LSTM.add(SpatialDropout1D(dropout))\n","  model_LSTM.add(LSTM(unit))\n","  model_LSTM.add(Dense(2, activation='sigmoid'))\n","  model_LSTM.compile(optimizer=\"adam\", loss='binary_crossentropy', metrics=['acc'])\n","  print(model_LSTM.summary())\n","  \n","  return model_LSTM"],"execution_count":137,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GN-idepNTrNu","executionInfo":{"status":"ok","timestamp":1632299012272,"user_tz":-420,"elapsed":7103,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"4def3390-5909-4af0-faf8-cdcdce95e321"},"source":["m_lstm = get_model_LSTM(X_train, Y_train)\n","history_LSTM = m_lstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":138,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_10\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_10 (Embedding)     (None, 12, 100)           53900     \n","_________________________________________________________________\n","spatial_dropout1d_10 (Spatia (None, 12, 100)           0         \n","_________________________________________________________________\n","lstm_5 (LSTM)                (None, 100)               80400     \n","_________________________________________________________________\n","dense_10 (Dense)             (None, 2)                 202       \n","=================================================================\n","Total params: 134,502\n","Trainable params: 134,502\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","14/14 [==============================] - 3s 54ms/step - loss: 0.6872 - acc: 0.5850 - val_loss: 0.6799 - val_acc: 0.5766\n","Epoch 2/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.6553 - acc: 0.6054 - val_loss: 0.6433 - val_acc: 0.5766\n","Epoch 3/100\n","14/14 [==============================] - 0s 20ms/step - loss: 0.5659 - acc: 0.7347 - val_loss: 0.5462 - val_acc: 0.7568\n","Epoch 4/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.4344 - acc: 0.8821 - val_loss: 0.4264 - val_acc: 0.8468\n","Epoch 5/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.3097 - acc: 0.8957 - val_loss: 0.3717 - val_acc: 0.8468\n","Epoch 6/100\n","14/14 [==============================] - 0s 19ms/step - loss: 0.2150 - acc: 0.9252 - val_loss: 0.3658 - val_acc: 0.8739\n","Epoch 7/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.1627 - acc: 0.9478 - val_loss: 0.3634 - val_acc: 0.8649\n","Epoch 8/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.1446 - acc: 0.9569 - val_loss: 0.3260 - val_acc: 0.9009\n","Epoch 9/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.1250 - acc: 0.9637 - val_loss: 0.3631 - val_acc: 0.8919\n","Epoch 10/100\n","14/14 [==============================] - 0s 21ms/step - loss: 0.1013 - acc: 0.9751 - val_loss: 0.3487 - val_acc: 0.8919\n","Epoch 11/100\n","14/14 [==============================] - 0s 17ms/step - loss: 0.0879 - acc: 0.9773 - val_loss: 0.3947 - val_acc: 0.8739\n","Epoch 12/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.0909 - acc: 0.9773 - val_loss: 0.3586 - val_acc: 0.8739\n","Epoch 13/100\n","14/14 [==============================] - 0s 18ms/step - loss: 0.0832 - acc: 0.9796 - val_loss: 0.3414 - val_acc: 0.8649\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GFNUlAeVTsiT","executionInfo":{"status":"ok","timestamp":1632299013683,"user_tz":-420,"elapsed":1436,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"b1d612f5-69a2-46d0-8d2d-064af9b5b161"},"source":["score,acc_lstm = m_lstm.evaluate(X_test, Y_test)"],"execution_count":139,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 5ms/step - loss: 0.3262 - acc: 0.8828\n"]}]},{"cell_type":"code","metadata":{"id":"DNaWHiB8Tuva","executionInfo":{"status":"ok","timestamp":1632299013683,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_lstm.save('/content/drive/My Drive/Thesis/Code/Model26Aug/lstm_sentiment_harga_8959.h5')"],"execution_count":140,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xTG40dBOAxrH"},"source":["### CNN"]},{"cell_type":"code","metadata":{"id":"qrk04_vWTwcj","executionInfo":{"status":"ok","timestamp":1632299013684,"user_tz":-420,"elapsed":12,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras import layers\n","from tensorflow.keras.layers import Concatenate, Input, Embedding, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, GlobalAveragePooling1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras.models import Model\n","import matplotlib.pyplot as plt\n","import os"],"execution_count":141,"outputs":[]},{"cell_type":"code","metadata":{"id":"V_JQTnXqT2fA","executionInfo":{"status":"ok","timestamp":1632299013685,"user_tz":-420,"elapsed":11,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_cnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cnn = Sequential()\n","  model_cnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cnn.add(Conv1D(filters=filter, kernel_size=kernel, padding='same', strides=1, activation='relu'))\n","  model_cnn.add(MaxPool1D(pool_size=2))\n","  # model_cnn.add(Dense(32, activation='relu'))\n","  model_cnn.add(SpatialDropout1D(dropout))\n","  model_cnn.add(Flatten())\n","  model_cnn.add(Dense(2, activation='sigmoid'))\n","  model_cnn.compile(optimizer=opt, loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cnn.summary())\n","\n","  return model_cnn"],"execution_count":142,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kiHoXRfxT3-t","executionInfo":{"status":"ok","timestamp":1632299015989,"user_tz":-420,"elapsed":2314,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"e3c1e4eb-bbea-4c9f-ccc6-4fec71b5cb2b"},"source":["m_cnn = get_model_cnn(X_train, Y_train)\n","history_cnn = m_cnn.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":143,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_11\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_11 (Embedding)     (None, 12, 100)           53900     \n","_________________________________________________________________\n","conv1d_3 (Conv1D)            (None, 12, 32)            9632      \n","_________________________________________________________________\n","max_pooling1d_3 (MaxPooling1 (None, 6, 32)             0         \n","_________________________________________________________________\n","spatial_dropout1d_11 (Spatia (None, 6, 32)             0         \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 192)               0         \n","_________________________________________________________________\n","dense_11 (Dense)             (None, 2)                 386       \n","=================================================================\n","Total params: 63,918\n","Trainable params: 63,918\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","14/14 [==============================] - 1s 18ms/step - loss: 0.6888 - acc: 0.5533 - val_loss: 0.6869 - val_acc: 0.5766\n","Epoch 2/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.6698 - acc: 0.7483 - val_loss: 0.6769 - val_acc: 0.6036\n","Epoch 3/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.6431 - acc: 0.7800 - val_loss: 0.6571 - val_acc: 0.6757\n","Epoch 4/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.5959 - acc: 0.8209 - val_loss: 0.6191 - val_acc: 0.7117\n","Epoch 5/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.5206 - acc: 0.8776 - val_loss: 0.5618 - val_acc: 0.7838\n","Epoch 6/100\n","14/14 [==============================] - 0s 8ms/step - loss: 0.4247 - acc: 0.8957 - val_loss: 0.4925 - val_acc: 0.8018\n","Epoch 7/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.3300 - acc: 0.9229 - val_loss: 0.4376 - val_acc: 0.8288\n","Epoch 8/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.2562 - acc: 0.9342 - val_loss: 0.4010 - val_acc: 0.8829\n","Epoch 9/100\n","14/14 [==============================] - 0s 8ms/step - loss: 0.2054 - acc: 0.9501 - val_loss: 0.3794 - val_acc: 0.9189\n","Epoch 10/100\n","14/14 [==============================] - 0s 8ms/step - loss: 0.1682 - acc: 0.9592 - val_loss: 0.3617 - val_acc: 0.9099\n","Epoch 11/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.1416 - acc: 0.9728 - val_loss: 0.3515 - val_acc: 0.9099\n","Epoch 12/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.1146 - acc: 0.9751 - val_loss: 0.3551 - val_acc: 0.9189\n","Epoch 13/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.0955 - acc: 0.9819 - val_loss: 0.3515 - val_acc: 0.9189\n","Epoch 14/100\n","14/14 [==============================] - 0s 6ms/step - loss: 0.0846 - acc: 0.9864 - val_loss: 0.3576 - val_acc: 0.9009\n","Epoch 15/100\n","14/14 [==============================] - 0s 7ms/step - loss: 0.0804 - acc: 0.9819 - val_loss: 0.3589 - val_acc: 0.8919\n","Epoch 16/100\n","14/14 [==============================] - 0s 6ms/step - loss: 0.0724 - acc: 0.9887 - val_loss: 0.3699 - val_acc: 0.8919\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R8lCvNZcT5nt","executionInfo":{"status":"ok","timestamp":1632299015990,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"4b51c9b1-17b5-47de-e34e-9df039c5d784"},"source":["score,acc_cnn = m_cnn.evaluate(X_test, Y_test)"],"execution_count":144,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 2ms/step - loss: 0.3108 - acc: 0.8901\n"]}]},{"cell_type":"code","metadata":{"id":"uISwQfIKT7c-","executionInfo":{"status":"ok","timestamp":1632299015991,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["m_cnn.save('/content/drive/My Drive/Thesis/Code/FixModel2/cnn_sentiment_harga_0.904.h5')"],"execution_count":145,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DHTDUWbYA2wP"},"source":["### BLSTM"]},{"cell_type":"code","metadata":{"id":"V4juzmHFT9aI","executionInfo":{"status":"ok","timestamp":1632299015991,"user_tz":-420,"elapsed":27,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_BLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_BLSTM = Sequential()\n","  model_BLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_BLSTM.add(Dense(dense, activation='relu'))\n","  model_BLSTM.add((SpatialDropout1D(dropout)))\n","  model_BLSTM.add(Bidirectional(LSTM(unit)))\n","  model_BLSTM.add(Dense(2, activation='sigmoid'))\n","  model_BLSTM.compile(optimizer=opt, loss='binary_crossentropy', metrics=['acc'])\n","  print(model_BLSTM.summary())\n","  return model_BLSTM"],"execution_count":146,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jkcOCbDXUAzq","executionInfo":{"status":"ok","timestamp":1632299026028,"user_tz":-420,"elapsed":10062,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"9fe1b73b-8990-406a-c20e-142ba5d4431b"},"source":["m_blstm = get_model_BLSTM(X_train, Y_train)\n","history_BLSTM = m_blstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":147,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_12\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_12 (Embedding)     (None, 12, 100)           53900     \n","_________________________________________________________________\n","spatial_dropout1d_12 (Spatia (None, 12, 100)           0         \n","_________________________________________________________________\n","bidirectional_3 (Bidirection (None, 200)               160800    \n","_________________________________________________________________\n","dense_12 (Dense)             (None, 2)                 402       \n","=================================================================\n","Total params: 215,102\n","Trainable params: 215,102\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","14/14 [==============================] - 5s 92ms/step - loss: 0.6900 - acc: 0.5510 - val_loss: 0.6806 - val_acc: 0.5676\n","Epoch 2/100\n","14/14 [==============================] - 0s 32ms/step - loss: 0.6599 - acc: 0.5714 - val_loss: 0.6400 - val_acc: 0.6126\n","Epoch 3/100\n","14/14 [==============================] - 0s 27ms/step - loss: 0.4739 - acc: 0.8186 - val_loss: 0.4110 - val_acc: 0.8108\n","Epoch 4/100\n","14/14 [==============================] - 0s 28ms/step - loss: 0.2544 - acc: 0.9252 - val_loss: 0.4622 - val_acc: 0.8018\n","Epoch 5/100\n","14/14 [==============================] - 0s 28ms/step - loss: 0.1867 - acc: 0.9388 - val_loss: 0.3472 - val_acc: 0.8649\n","Epoch 6/100\n","14/14 [==============================] - 0s 29ms/step - loss: 0.1350 - acc: 0.9592 - val_loss: 0.3431 - val_acc: 0.8649\n","Epoch 7/100\n","14/14 [==============================] - 0s 28ms/step - loss: 0.1085 - acc: 0.9683 - val_loss: 0.4134 - val_acc: 0.8559\n","Epoch 8/100\n","14/14 [==============================] - 0s 28ms/step - loss: 0.0864 - acc: 0.9796 - val_loss: 0.3988 - val_acc: 0.8739\n","Epoch 9/100\n","14/14 [==============================] - 0s 29ms/step - loss: 0.0747 - acc: 0.9796 - val_loss: 0.5266 - val_acc: 0.8649\n","Epoch 10/100\n","14/14 [==============================] - 0s 29ms/step - loss: 0.0683 - acc: 0.9841 - val_loss: 0.4508 - val_acc: 0.8649\n","Epoch 11/100\n","14/14 [==============================] - 0s 31ms/step - loss: 0.0519 - acc: 0.9887 - val_loss: 0.5525 - val_acc: 0.8559\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fwpOGPOoUCc5","executionInfo":{"status":"ok","timestamp":1632299026030,"user_tz":-420,"elapsed":32,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d5eb13f3-38c5-4292-c300-50aeb9830cea"},"source":["score,acc_blstm = m_blstm.evaluate(X_test, Y_test)"],"execution_count":148,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 7ms/step - loss: 0.3526 - acc: 0.8645\n"]}]},{"cell_type":"code","metadata":{"id":"W3fxKXCwUEm6","executionInfo":{"status":"ok","timestamp":1632299026031,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_blstm.save('/content/drive/My Drive/Thesis/Code/Model/blstm_aspect_model.h5')"],"execution_count":149,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4cvyCrSDA7al"},"source":["### ABLSTM"]},{"cell_type":"code","metadata":{"id":"rzMIDKo1UGGq","executionInfo":{"status":"ok","timestamp":1632299026031,"user_tz":-420,"elapsed":27,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from keras.models import Sequential\n","from keras.layers import Embedding, LSTM, Dense, Dropout, Bidirectional, Flatten\n","import matplotlib.pyplot as plt\n","from keras_self_attention import SeqSelfAttention, SeqWeightedAttention\n","from keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","def get_model_ABLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_ABLSTM = Sequential()\n","  model_ABLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_ABLSTM.add(Dense(32, activation='tanh'))\n","  model_ABLSTM.add(SpatialDropout1D(dropout))\n","  model_ABLSTM.add(Bidirectional(LSTM(unit, return_sequences=True)))\n","  model_ABLSTM.add(SeqWeightedAttention())\n","  model_ABLSTM.add(Dense(2, activation='sigmoid'))\n","  model_ABLSTM.compile(optimizer=opt, loss='binary_crossentropy', metrics=['acc'])\n","  print(model_ABLSTM.summary())\n","  \n","  return model_ABLSTM"],"execution_count":150,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kefMlp8EUIPr","executionInfo":{"status":"ok","timestamp":1632299035443,"user_tz":-420,"elapsed":9438,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"88edccda-759d-4a15-c762-c94022c8fe97"},"source":["m_ablstm = get_model_ABLSTM(X_train, Y_train)\n","history_ABLSTM = m_ablstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":151,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_13\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_13 (Embedding)     (None, 12, 100)           53900     \n","_________________________________________________________________\n","spatial_dropout1d_13 (Spatia (None, 12, 100)           0         \n","_________________________________________________________________\n","bidirectional_4 (Bidirection (None, 12, 200)           160800    \n","_________________________________________________________________\n","seq_weighted_attention_1 (Se (None, 200)               201       \n","_________________________________________________________________\n","dense_13 (Dense)             (None, 2)                 402       \n","=================================================================\n","Total params: 215,303\n","Trainable params: 215,303\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","14/14 [==============================] - 5s 96ms/step - loss: 0.6872 - acc: 0.5238 - val_loss: 0.6829 - val_acc: 0.5135\n","Epoch 2/100\n","14/14 [==============================] - 0s 29ms/step - loss: 0.6230 - acc: 0.6304 - val_loss: 0.5296 - val_acc: 0.7027\n","Epoch 3/100\n","14/14 [==============================] - 0s 32ms/step - loss: 0.3436 - acc: 0.8753 - val_loss: 0.3940 - val_acc: 0.8468\n","Epoch 4/100\n","14/14 [==============================] - 0s 30ms/step - loss: 0.2523 - acc: 0.9002 - val_loss: 0.3860 - val_acc: 0.8378\n","Epoch 5/100\n","14/14 [==============================] - 0s 28ms/step - loss: 0.1883 - acc: 0.9410 - val_loss: 0.3781 - val_acc: 0.8468\n","Epoch 6/100\n","14/14 [==============================] - 0s 29ms/step - loss: 0.1436 - acc: 0.9615 - val_loss: 0.4108 - val_acc: 0.8649\n","Epoch 7/100\n","14/14 [==============================] - 0s 28ms/step - loss: 0.1221 - acc: 0.9637 - val_loss: 0.4529 - val_acc: 0.8559\n","Epoch 8/100\n","14/14 [==============================] - 0s 29ms/step - loss: 0.0998 - acc: 0.9751 - val_loss: 0.5099 - val_acc: 0.8559\n","Epoch 9/100\n","14/14 [==============================] - 0s 29ms/step - loss: 0.0919 - acc: 0.9751 - val_loss: 0.5582 - val_acc: 0.8559\n","Epoch 10/100\n","14/14 [==============================] - 0s 29ms/step - loss: 0.0711 - acc: 0.9841 - val_loss: 0.6378 - val_acc: 0.8468\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WbpASkA7UKHi","executionInfo":{"status":"ok","timestamp":1632299040664,"user_tz":-420,"elapsed":5246,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"42e525de-0581-424b-c75d-cce09183df17"},"source":["score,acc_ablstm = m_ablstm.evaluate(X_test, Y_test)"],"execution_count":152,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 9ms/step - loss: 0.3703 - acc: 0.8462\n"]}]},{"cell_type":"code","metadata":{"id":"6za6cclSULso","executionInfo":{"status":"ok","timestamp":1632299040665,"user_tz":-420,"elapsed":25,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_ablstm.save('/content/drive/My Drive/Thesis/Code/Model/ablstm_sentiment_model.h5')"],"execution_count":153,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CNQOwZDkBB2R"},"source":["### CNNLSTM"]},{"cell_type":"code","metadata":{"id":"LdijuuFWUO9E","executionInfo":{"status":"ok","timestamp":1632299040666,"user_tz":-420,"elapsed":24,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_clstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_clstm = Sequential()\n","  model_clstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_clstm.add(Conv1D(filters=filter, kernel_size=kernel, padding='same', activation='relu'))\n","  model_clstm.add(MaxPool1D(pool_size=3))\n","  # model_clstm.add(Dense(32, activation='relu'))\n","  model_clstm.add(SpatialDropout1D(dropout))\n","  model_clstm.add(LSTM(unit))\n","  model_clstm.add(Dense(2, activation='sigmoid'))\n","  model_clstm.compile(optimizer=opt, loss='binary_crossentropy', metrics=['acc'])\n","  print(model_clstm.summary())\n","  return model_clstm"],"execution_count":154,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c1zoXGvgUQ3A","executionInfo":{"status":"ok","timestamp":1632299045686,"user_tz":-420,"elapsed":5043,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"2df13c11-6cf2-42a5-e9e1-9fd83f99c0bc"},"source":["m_clstm = get_model_clstm(X_train, Y_train)\n","history_CLSTM = m_clstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":155,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_14\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_14 (Embedding)     (None, 12, 100)           53900     \n","_________________________________________________________________\n","conv1d_4 (Conv1D)            (None, 12, 32)            9632      \n","_________________________________________________________________\n","max_pooling1d_4 (MaxPooling1 (None, 4, 32)             0         \n","_________________________________________________________________\n","spatial_dropout1d_14 (Spatia (None, 4, 32)             0         \n","_________________________________________________________________\n","lstm_8 (LSTM)                (None, 100)               53200     \n","_________________________________________________________________\n","dense_14 (Dense)             (None, 2)                 202       \n","=================================================================\n","Total params: 116,934\n","Trainable params: 116,934\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","14/14 [==============================] - 3s 51ms/step - loss: 0.6905 - acc: 0.5488 - val_loss: 0.6872 - val_acc: 0.5135\n","Epoch 2/100\n","14/14 [==============================] - 0s 12ms/step - loss: 0.6726 - acc: 0.7211 - val_loss: 0.6626 - val_acc: 0.7387\n","Epoch 3/100\n","14/14 [==============================] - 0s 12ms/step - loss: 0.6041 - acc: 0.7732 - val_loss: 0.5725 - val_acc: 0.7568\n","Epoch 4/100\n","14/14 [==============================] - 0s 13ms/step - loss: 0.4237 - acc: 0.8685 - val_loss: 0.4211 - val_acc: 0.7928\n","Epoch 5/100\n","14/14 [==============================] - 0s 11ms/step - loss: 0.2614 - acc: 0.9048 - val_loss: 0.3666 - val_acc: 0.8919\n","Epoch 6/100\n","14/14 [==============================] - 0s 12ms/step - loss: 0.1937 - acc: 0.9388 - val_loss: 0.3177 - val_acc: 0.9099\n","Epoch 7/100\n","14/14 [==============================] - 0s 13ms/step - loss: 0.1505 - acc: 0.9637 - val_loss: 0.3042 - val_acc: 0.9099\n","Epoch 8/100\n","14/14 [==============================] - 0s 13ms/step - loss: 0.1218 - acc: 0.9615 - val_loss: 0.3170 - val_acc: 0.9009\n","Epoch 9/100\n","14/14 [==============================] - 0s 12ms/step - loss: 0.0924 - acc: 0.9751 - val_loss: 0.3437 - val_acc: 0.8919\n","Epoch 10/100\n","14/14 [==============================] - 0s 13ms/step - loss: 0.0754 - acc: 0.9773 - val_loss: 0.3588 - val_acc: 0.8829\n","Epoch 11/100\n","14/14 [==============================] - 0s 13ms/step - loss: 0.0642 - acc: 0.9887 - val_loss: 0.3705 - val_acc: 0.8649\n","Epoch 12/100\n","14/14 [==============================] - 0s 11ms/step - loss: 0.0526 - acc: 0.9864 - val_loss: 0.3802 - val_acc: 0.8649\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UbtA4j_rUS5d","executionInfo":{"status":"ok","timestamp":1632299048574,"user_tz":-420,"elapsed":2912,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"f70bbc03-20ce-4111-aa6d-4b686bc09d3c"},"source":["score,acc_clstm = m_clstm.evaluate(X_test, Y_test)"],"execution_count":156,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 4ms/step - loss: 0.2715 - acc: 0.8864\n"]}]},{"cell_type":"code","metadata":{"id":"58r09paUUUlG","executionInfo":{"status":"ok","timestamp":1632299048576,"user_tz":-420,"elapsed":32,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_clstm.save('/content/drive/My Drive/Thesis/Code/Model/clstm_sentiment_model.h5')"],"execution_count":157,"outputs":[]},{"cell_type":"code","metadata":{"id":"6STG_bLhNmXB","executionInfo":{"status":"ok","timestamp":1632299048577,"user_tz":-420,"elapsed":31,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":[""],"execution_count":157,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Iy8nWxe6BHYF"},"source":["### CNNBLSTM"]},{"cell_type":"code","metadata":{"id":"TVK0iWSAUXvp","executionInfo":{"status":"ok","timestamp":1632299048578,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_cblstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cblstm = Sequential()\n","  model_cblstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cblstm.add(Conv1D(filters=filter, kernel_size=kernel, padding='same', activation='relu'))\n","  model_cblstm.add(MaxPool1D(pool_size=3))\n","  # model_cblstm.add(Dense(32, activation='relu'))\n","  model_cblstm.add(SpatialDropout1D(dropout))\n","  model_cblstm.add(Bidirectional(LSTM(unit, return_sequences=False)))\n","  model_cblstm.add(Dense(2, activation='sigmoid'))\n","  model_cblstm.compile(optimizer=opt, loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cblstm.summary())\n","\n","  return model_cblstm"],"execution_count":158,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-aEuCTxgUZvm","executionInfo":{"status":"ok","timestamp":1632299055437,"user_tz":-420,"elapsed":6887,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"e5e2483e-c31d-4fc4-fd16-90a9a2971892"},"source":["m_cblstm = get_model_cblstm(X_train, Y_train)\n","history_CBLSTM = m_cblstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":159,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_15\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_15 (Embedding)     (None, 12, 100)           53900     \n","_________________________________________________________________\n","conv1d_5 (Conv1D)            (None, 12, 32)            9632      \n","_________________________________________________________________\n","max_pooling1d_5 (MaxPooling1 (None, 4, 32)             0         \n","_________________________________________________________________\n","spatial_dropout1d_15 (Spatia (None, 4, 32)             0         \n","_________________________________________________________________\n","bidirectional_5 (Bidirection (None, 200)               106400    \n","_________________________________________________________________\n","dense_15 (Dense)             (None, 2)                 402       \n","=================================================================\n","Total params: 170,334\n","Trainable params: 170,334\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","14/14 [==============================] - 5s 74ms/step - loss: 0.6914 - acc: 0.5102 - val_loss: 0.6887 - val_acc: 0.5135\n","Epoch 2/100\n","14/14 [==============================] - 0s 14ms/step - loss: 0.6736 - acc: 0.6757 - val_loss: 0.6611 - val_acc: 0.7297\n","Epoch 3/100\n","14/14 [==============================] - 0s 15ms/step - loss: 0.5749 - acc: 0.8299 - val_loss: 0.5051 - val_acc: 0.8559\n","Epoch 4/100\n","14/14 [==============================] - 0s 17ms/step - loss: 0.3277 - acc: 0.9048 - val_loss: 0.4375 - val_acc: 0.8468\n","Epoch 5/100\n","14/14 [==============================] - 0s 15ms/step - loss: 0.1973 - acc: 0.9297 - val_loss: 0.3677 - val_acc: 0.8829\n","Epoch 6/100\n","14/14 [==============================] - 0s 14ms/step - loss: 0.1091 - acc: 0.9660 - val_loss: 0.3513 - val_acc: 0.9009\n","Epoch 7/100\n","14/14 [==============================] - 0s 14ms/step - loss: 0.0888 - acc: 0.9773 - val_loss: 0.3698 - val_acc: 0.8919\n","Epoch 8/100\n","14/14 [==============================] - 0s 14ms/step - loss: 0.0624 - acc: 0.9773 - val_loss: 0.4098 - val_acc: 0.8829\n","Epoch 9/100\n","14/14 [==============================] - 0s 15ms/step - loss: 0.0633 - acc: 0.9841 - val_loss: 0.4118 - val_acc: 0.8739\n","Epoch 10/100\n","14/14 [==============================] - 0s 15ms/step - loss: 0.0446 - acc: 0.9864 - val_loss: 0.4302 - val_acc: 0.8829\n","Epoch 11/100\n","14/14 [==============================] - 0s 15ms/step - loss: 0.0422 - acc: 0.9864 - val_loss: 0.4670 - val_acc: 0.8739\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6rA1QjdDUbK3","executionInfo":{"status":"ok","timestamp":1632299055438,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"415b231e-c0cd-47ab-9f6f-dceab0bcc88e"},"source":["score,acc_cblstm = m_cblstm.evaluate(X_test, Y_test)"],"execution_count":160,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 4ms/step - loss: 0.3193 - acc: 0.8974\n"]}]},{"cell_type":"code","metadata":{"id":"DA-ZEgvEUc1C","executionInfo":{"status":"ok","timestamp":1632299055438,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_cblstm.save('/content/drive/My Drive/Thesis/Code/FixModel/cblstm_sentiment_harga.h5')"],"execution_count":161,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JH8xJNXuNosU"},"source":["### Result"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OeUu2x5pUgAf","executionInfo":{"status":"ok","timestamp":1632299055439,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"cca25c6b-1fe3-4af9-83aa-e288c9a956bc"},"source":["acc = {'Model': ['RNN','LSTM', 'GRU','BiLSTM', 'ABLSTM', 'CNN', 'CNNLSTM','CNNBLSTM'],\n","       'Acc': [acc_rnn, acc_gru, acc_lstm, acc_cnn, acc_blstm, acc_clstm, acc_cblstm, acc_ablstm]}   \n","df_acc_nn = pd.DataFrame(acc)  \n","print(df_acc_nn)  "],"execution_count":162,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.886447\n","1      LSTM  0.875458\n","2       GRU  0.882784\n","3    BiLSTM  0.890110\n","4    ABLSTM  0.864469\n","5       CNN  0.886447\n","6   CNNLSTM  0.897436\n","7  CNNBLSTM  0.846154\n"]}]},{"cell_type":"markdown","metadata":{"id":"uroMA0JNBNT1"},"source":["## Machhine Learning"]},{"cell_type":"code","metadata":{"id":"nSjX_E4aUiP7","executionInfo":{"status":"ok","timestamp":1632299055439,"user_tz":-420,"elapsed":11,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from sklearn.naive_bayes import MultinomialNB\n","from sklearn.svm import SVC, LinearSVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.feature_extraction.text import TfidfTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.model_selection import train_test_split, cross_val_score\n","from sklearn.metrics import classification_report, confusion_matrix, accuracy_score, f1_score, precision_score, recall_score, plot_confusion_matrix\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","np.random.seed(7)"],"execution_count":163,"outputs":[]},{"cell_type":"code","metadata":{"id":"K5WU1_9EUko6","executionInfo":{"status":"ok","timestamp":1632299055440,"user_tz":-420,"elapsed":11,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["X_train2, X_test2, y_train2, y_test2 = train_test_split(text, label, random_state=1)"],"execution_count":164,"outputs":[]},{"cell_type":"code","metadata":{"id":"aR080ykuUmsP","executionInfo":{"status":"ok","timestamp":1632299055440,"user_tz":-420,"elapsed":11,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["acc_result = []\n","cross_val = 5"],"execution_count":165,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9Q6w3GRuBSBr"},"source":["### MNB"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CufsDryMUoDJ","executionInfo":{"status":"ok","timestamp":1632299056159,"user_tz":-420,"elapsed":729,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"2edd8d6f-c8d9-4321-9987-a8480f0eab97"},"source":["#Multinomial Naive Bayes with bigram\n","pipeline_mnb_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_bigram = cross_val_score(pipeline_mnb_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_bigram), 4)\n","std_score = round(np.std(scores_mnb_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d1 = ('MNB+Bigram',mean_score, std_score)\n","acc_result.append(d1)"],"execution_count":166,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8852\n","Standard Dev: +/-0.0330\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rmfc04JnUpux","executionInfo":{"status":"ok","timestamp":1632299056163,"user_tz":-420,"elapsed":18,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"62fc40d5-15d1-4cd9-9716-ba3763c4e86b"},"source":["#Multinomial Naive Bayes unigram\n","pipeline_mnb_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_unigram = cross_val_score(pipeline_mnb_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_unigram), 4)\n","std_score = round(np.std(scores_mnb_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d2 = ('MNB+Unigram',mean_score, std_score)\n","acc_result.append(d2)"],"execution_count":167,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8658\n","Standard Dev: +/-0.0346\n"]}]},{"cell_type":"markdown","metadata":{"id":"USJ83MjBBVZl"},"source":["### SVC"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PGVczeF4Ur1S","executionInfo":{"status":"ok","timestamp":1632299056163,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"2be608fc-43a1-49e4-b312-61b0cf8a9994"},"source":["#SVC with bigram\n","pipeline_svc_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_bigram = cross_val_score(pipeline_svc_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_bigram), 4)\n","std_score = round(np.std(scores_svc_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d3 = ('SVC+Bigram',mean_score, std_score)\n","acc_result.append(d3)"],"execution_count":168,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8949\n","Standard Dev: +/-0.0364\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2WIjJb5eUtkI","executionInfo":{"status":"ok","timestamp":1632299056164,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"04da2343-90b4-4d12-bb0c-753dceff47b9"},"source":["#SVC Unigram\n","pipeline_svc_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_unigram = cross_val_score(pipeline_svc_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_unigram), 4)\n","std_score = round(np.std(scores_svc_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d4 = ('SVC+Unigram',mean_score, std_score)\n","acc_result.append(d4)"],"execution_count":169,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8948\n","Standard Dev: +/-0.0353\n"]}]},{"cell_type":"markdown","metadata":{"id":"OkGOlxOABYXi"},"source":["### Logistic Regression"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p5RGympEUvRD","executionInfo":{"status":"ok","timestamp":1632299056165,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"a405ebf0-beca-415c-9d81-e45925a03443"},"source":["#Logistic Regression with Bigram\n","pipeline_lr_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_bigram = cross_val_score(pipeline_lr_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_bigram), 4)\n","std_score = round(np.std(scores_lr_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d5 = ('LR+Bigram',mean_score, std_score)\n","acc_result.append(d5)"],"execution_count":170,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8998\n","Standard Dev: +/-0.0366\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e5yLB1cnUxNC","executionInfo":{"status":"ok","timestamp":1632299056817,"user_tz":-420,"elapsed":663,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"077f3697-bd76-486d-d6d0-c59d9f58e4c1"},"source":["#Logistic Regression Unigram\n","pipeline_lr_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_unigram = cross_val_score(pipeline_lr_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_unigram), 4)\n","std_score = round(np.std(scores_lr_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d6 = ('LR+Unigram',mean_score, std_score)\n","acc_result.append(d6)"],"execution_count":171,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8965\n","Standard Dev: +/-0.0311\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7k2aEchDUzKJ","executionInfo":{"status":"ok","timestamp":1632299056819,"user_tz":-420,"elapsed":35,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8e148109-00aa-4ad0-dcaf-df680df38a9f"},"source":["# create DataFrame using data \n","df_acc_ml = pd.DataFrame.from_records(acc_result, columns =['Model', 'Accuracy', 'Standard Deviation']) \n","  \n","print(df_acc_ml)  "],"execution_count":172,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.8852              0.0330\n","1  MNB+Unigram    0.8658              0.0346\n","2   SVC+Bigram    0.8949              0.0364\n","3  SVC+Unigram    0.8948              0.0353\n","4    LR+Bigram    0.8998              0.0366\n","5   LR+Unigram    0.8965              0.0311\n"]}]},{"cell_type":"markdown","metadata":{"id":"EJ64PtWnBddd"},"source":["# Overall Result"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cc97CgmZU0xL","executionInfo":{"status":"ok","timestamp":1632299056820,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"26ad053a-fa75-4235-cbe1-f987f62b8f13"},"source":["print(df_acc_nn)"],"execution_count":173,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.886447\n","1      LSTM  0.875458\n","2       GRU  0.882784\n","3    BiLSTM  0.890110\n","4    ABLSTM  0.864469\n","5       CNN  0.886447\n","6   CNNLSTM  0.897436\n","7  CNNBLSTM  0.846154\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":97},"id":"fXXzuarUU2_a","executionInfo":{"status":"ok","timestamp":1632299056822,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"35914cbc-0fec-4a6c-f399-0fe9af5e6d76"},"source":["print(\"Best Neural Network Model :\")\n","df_acc_nn[['Model', 'Acc']][df_acc_nn.Acc == df_acc_nn.Acc.max()]"],"execution_count":174,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Neural Network Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Acc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6</th>\n","      <td>CNNLSTM</td>\n","      <td>0.897436</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     Model       Acc\n","6  CNNLSTM  0.897436"]},"metadata":{},"execution_count":174}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kM_aJD23U4hC","executionInfo":{"status":"ok","timestamp":1632299056823,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"3b30451d-1680-4bf9-c534-f69a5a863035"},"source":["print(df_acc_ml)"],"execution_count":175,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.8852              0.0330\n","1  MNB+Unigram    0.8658              0.0346\n","2   SVC+Bigram    0.8949              0.0364\n","3  SVC+Unigram    0.8948              0.0353\n","4    LR+Bigram    0.8998              0.0366\n","5   LR+Unigram    0.8965              0.0311\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":97},"id":"2d-0vXj2U8RA","executionInfo":{"status":"ok","timestamp":1632299056825,"user_tz":-420,"elapsed":31,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"49fbcf92-4dcd-48af-c9f5-5597ca8a95ce"},"source":["print(\"Best Machine Learning Model :\")\n","df_acc_ml[['Model', 'Accuracy']][df_acc_ml.Accuracy == df_acc_ml.Accuracy.max()]"],"execution_count":176,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Machine Learning Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>LR+Bigram</td>\n","      <td>0.8998</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       Model  Accuracy\n","4  LR+Bigram    0.8998"]},"metadata":{},"execution_count":176}]},{"cell_type":"code","metadata":{"id":"A87lb7zf3luk","executionInfo":{"status":"ok","timestamp":1632299056826,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["model = m_blstm"],"execution_count":177,"outputs":[]},{"cell_type":"code","metadata":{"id":"At9xy80o3uUs","executionInfo":{"status":"ok","timestamp":1632299056826,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# from keras.utils.vis_utils import plot_model\n","\n","# plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)"],"execution_count":178,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xW7-NdCC9dl4"},"source":["# Analyze Results"]},{"cell_type":"code","metadata":{"id":"N1WYfhVM9l2Y"},"source":["ev_model = model.predict(X_test)\n","ev_model_list = ev_model.tolist()\n","ev_classes = np.argmax(ev_model,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"ssxrFeeZ9m_D","executionInfo":{"status":"ok","timestamp":1632215591268,"user_tz":-420,"elapsed":26,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"fa70c2f1-b42c-4885-84f6-2fb4195e7849"},"source":["# Creating a reverse dictionary\n","reverse_word_map = dict(map(reversed, tokenizer.word_index.items()))\n","\n","# Function takes a tokenized sentence and returns the words\n","def sequence_to_text(list_of_indices):\n","    # Looking up words in dictionary\n","    words = [reverse_word_map.get(letter) for letter in list_of_indices]\n","    return(words)\n","\n","# Creating texts \n","my_texts = list(map(sequence_to_text, X_test))\n","text_str=[]\n","for x in my_texts:\n","  x_str = ' '.join([str(elem) for elem in x])\n","  text_str.append(x_str)\n","text_str[0]\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'None None None harga terjangkau sekelas hotel pusat kota jogja'"]},"metadata":{},"execution_count":68}]},{"cell_type":"markdown","metadata":{"id":"jRNbSBSD9rlp"},"source":["## Confusion Matrix"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"id":"iJgpKVeK9tox","executionInfo":{"status":"ok","timestamp":1632215591270,"user_tz":-420,"elapsed":25,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"67629942-997b-4175-b477-0ae5d8c00a49"},"source":["decode_sentiment = np.argmax(Y_test, axis=1)\n","lab_sentiment = [\"positive\",\"negative\"]\n","def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(decode_sentiment, ev_classes,lab_sentiment)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1nEKTKqF90cN","executionInfo":{"status":"ok","timestamp":1632215591272,"user_tz":-420,"elapsed":25,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"65833573-c078-4864-9ea2-e9d2559dbf4c"},"source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import classification_report\n","accuracy_score(decode_sentiment, ev_classes)\n","print(classification_report(decode_sentiment, ev_classes))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.85      0.88      0.86       116\n","           1       0.91      0.88      0.90       156\n","\n","    accuracy                           0.88       272\n","   macro avg       0.88      0.88      0.88       272\n","weighted avg       0.88      0.88      0.88       272\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UjeBUUt4-AXv","executionInfo":{"status":"ok","timestamp":1632215592168,"user_tz":-420,"elapsed":915,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"884438ce-d379-49ea-bfde-bd2dcd9e2e7c"},"source":["ev_train_model = model.predict(X_train)\n","ev_train_classes = np.argmax(ev_train_model,axis=1)\n","decode_train = np.argmax(Y_train, axis=1)\n","print(classification_report(decode_train, ev_train_classes))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.95      0.99      0.97       285\n","           1       0.99      0.94      0.96       266\n","\n","    accuracy                           0.97       551\n","   macro avg       0.97      0.96      0.97       551\n","weighted avg       0.97      0.97      0.97       551\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZO9XvEaw-DOH","executionInfo":{"status":"ok","timestamp":1632215592170,"user_tz":-420,"elapsed":62,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"69bbfd14-1397-4dba-9adb-ae51c0ec4fc8"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(decode_sentiment, ev_classes))\n","print('F1 score:', f1_score(decode_sentiment, ev_classes, average='macro'))\n","print('Recall:', recall_score(decode_sentiment, ev_classes, average='macro'))\n","print('Precision:', precision_score(decode_sentiment, ev_classes, average='macro'))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8823529411764706\n","F1 score: 0.8802553378824565\n","Recall: 0.8819628647214854\n","Precision: 0.8789473684210527\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"XI-ycLyu-D4t","executionInfo":{"status":"ok","timestamp":1632215592171,"user_tz":-420,"elapsed":52,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8be78a6b-2762-4a60-ba32-cf65c9bde36f"},"source":["plt.title('Loss')\n","plt.plot(history_LSTM.history['loss'], label='train')\n","plt.plot(history_LSTM.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();\n","\n","plt.title('Accuracy')\n","plt.plot(history_LSTM.history['acc'], label='train')\n","plt.plot(history_LSTM.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QCLY0L82-H_Z","executionInfo":{"status":"ok","timestamp":1632215592182,"user_tz":-420,"elapsed":55,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"295adce6-fdd0-4241-bf70-26c979a1c8ab"},"source":["print(history_BLSTM.history['acc'])\n","print(history_BLSTM.history['val_acc'])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.6068181991577148, 0.7749999761581421, 0.8409090638160706, 0.8954545259475708, 0.9409090876579285, 0.9477272629737854, 0.949999988079071, 0.9431818127632141, 0.9590908885002136, 0.9704545736312866, 0.9727272987365723, 0.9750000238418579, 0.9772727489471436, 0.9727272987365723, 0.9727272987365723]\n","[0.8198198080062866, 0.7657657861709595, 0.8918918967247009, 0.9099099040031433, 0.9099099040031433, 0.9189189076423645, 0.9189189076423645, 0.9009009003639221, 0.9099099040031433, 0.9189189076423645, 0.9099099040031433, 0.9189189076423645, 0.9279279112815857, 0.9189189076423645, 0.9189189076423645]\n"]}]},{"cell_type":"markdown","metadata":{"id":"3o1x5b4N-Ow0"},"source":["## Evaluate Misclassification"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"ncy8jeIZ-Riy","executionInfo":{"status":"ok","timestamp":1632215592183,"user_tz":-420,"elapsed":47,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"aa0b10b4-2b60-429f-dc0a-e0abe55d9c44"},"source":["ev_data_test = {'Text':text_str,\n","        'Act':decode_sentiment,\n","        'Pred':ev_classes}\n","df_final_ev = pd.DataFrame(ev_data_test)\n","df_final_ev"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>None None None harga terjangkau sekelas hotel ...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>None None None None None None alternatif libur...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>None None None None None harga bayar langsung ...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>None None None kamar kena tarif deluxe ternyat...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>None None None None None murah meriah bisa mak...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>267</th>\n","      <td>None None None None None None harga pas kanton...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>268</th>\n","      <td>None None None None None None ada gratis makan...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>269</th>\n","      <td>None None None None None None bayar handuk per...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>None None None None None None None extra kasur...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>271</th>\n","      <td>None None None None None None None parkir mobi...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>272 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0    None None None harga terjangkau sekelas hotel ...    1     1\n","1    None None None None None None alternatif libur...    1     1\n","2    None None None None None harga bayar langsung ...    0     0\n","3    None None None kamar kena tarif deluxe ternyat...    0     0\n","4    None None None None None murah meriah bisa mak...    1     1\n","..                                                 ...  ...   ...\n","267  None None None None None None harga pas kanton...    1     1\n","268  None None None None None None ada gratis makan...    1     1\n","269  None None None None None None bayar handuk per...    0     0\n","270  None None None None None None None extra kasur...    0     0\n","271  None None None None None None None parkir mobi...    1     1\n","\n","[272 rows x 3 columns]"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"Yn8vfMCk-dK1","executionInfo":{"status":"ok","timestamp":1632215592184,"user_tz":-420,"elapsed":46,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8ef40dd3-b716-41b6-bcd9-75f8d2e1eeb0"},"source":["remove_words = ['None']\n","pat = r'\\b(?:{})\\b'.format('|'.join(remove_words))\n","df_final_ev['Text'] = df_final_ev['Text'].str.replace(pat, '')\n","df_final_ev"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>harga terjangkau sekelas hotel pusat kota j...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>alternatif liburan irit anggaran</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>harga bayar langsung lebih mahal</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>kamar kena tarif deluxe ternyata diberi sup...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>murah meriah bisa makan sepuasnya</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>267</th>\n","      <td>harga pas kantong murah</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>268</th>\n","      <td>ada gratis makan malam</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>269</th>\n","      <td>bayar handuk perlengkapan mandi</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>extra kasur mahal</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>271</th>\n","      <td>parkir mobil gratis</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>272 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0       harga terjangkau sekelas hotel pusat kota j...    1     1\n","1                     alternatif liburan irit anggaran    1     1\n","2                     harga bayar langsung lebih mahal    0     0\n","3       kamar kena tarif deluxe ternyata diberi sup...    0     0\n","4                    murah meriah bisa makan sepuasnya    1     1\n","..                                                 ...  ...   ...\n","267                            harga pas kantong murah    1     1\n","268                             ada gratis makan malam    1     1\n","269                    bayar handuk perlengkapan mandi    0     0\n","270                                  extra kasur mahal    0     0\n","271                                parkir mobil gratis    1     1\n","\n","[272 rows x 3 columns]"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"qxYVJoNA-g5p","executionInfo":{"status":"ok","timestamp":1632215592186,"user_tz":-420,"elapsed":45,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d9cc2703-03f0-4060-d928-cda562b7d358"},"source":["harga_misc = df_final_ev.query('Act != Pred')\n","harga_misc"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9</th>\n","      <td>tidak gratis snack bar</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>tea maker sewa lima puluh ribu per kamar</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>harga membuat kantong jebol</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>harga mahal tidak bisa disebut murah</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>harga kamar satu juta sesuai</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>tarif kamar harusnya lebih murah</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>harga murah lebih ekspektasi</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>harga termasuk amenities</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>late checkout tidak denda</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>tidak cocok pelancong minim anggaran</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>tidak buat kantong kering</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>harga cukup mahal sekelas resort hotel</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>harga perlu ada promo</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>110</th>\n","      <td>harga tidak sesuai promo</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>116</th>\n","      <td>harga tidak bohong sesuai</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>118</th>\n","      <td>dapat upgrade kamar tidak ada tambahan biaya</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>141</th>\n","      <td>minuman mini bar gratis tidak ada tambahan b...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>pesan harga seratus tiga puluh ribu termasuk...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>pembayaran mudah bisa bayar debit</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>170</th>\n","      <td>tidak overprice harga sesuai</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>layanan makanan termasuk harga sewa kamar</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>184</th>\n","      <td>harga tidak oke</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>bayar mudah bisa kartu kredit</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>harga turun</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>203</th>\n","      <td>harga murah kualitas tidak mengecewakan</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>204</th>\n","      <td>cara pembayaran sulit</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>205</th>\n","      <td>tidak rekomendasi pelancong</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>208</th>\n","      <td>harga tidak cocok pelancong menginap</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>252</th>\n","      <td>bisa early checkin tidak ada tambahan biaya</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>256</th>\n","      <td>harga hanya seratus ribu</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>260</th>\n","      <td>sarapan tidak ada tambahan biaya</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>264</th>\n","      <td>hotel lain lebih murah</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","9                               tidak gratis snack bar    0     1\n","17            tea maker sewa lima puluh ribu per kamar    0     1\n","21                         harga membuat kantong jebol    0     1\n","24                harga mahal tidak bisa disebut murah    0     1\n","32                        harga kamar satu juta sesuai    1     0\n","41                    tarif kamar harusnya lebih murah    0     1\n","65                        harga murah lebih ekspektasi    1     0\n","72                            harga termasuk amenities    1     0\n","80                           late checkout tidak denda    1     0\n","89                tidak cocok pelancong minim anggaran    0     1\n","90                           tidak buat kantong kering    1     0\n","97              harga cukup mahal sekelas resort hotel    0     1\n","100                              harga perlu ada promo    0     1\n","110                           harga tidak sesuai promo    0     1\n","116                          harga tidak bohong sesuai    1     0\n","118       dapat upgrade kamar tidak ada tambahan biaya    1     0\n","141    minuman mini bar gratis tidak ada tambahan b...    1     0\n","143    pesan harga seratus tiga puluh ribu termasuk...    1     0\n","164                  pembayaran mudah bisa bayar debit    1     0\n","170                       tidak overprice harga sesuai    1     0\n","179          layanan makanan termasuk harga sewa kamar    1     0\n","184                                    harga tidak oke    0     1\n","187                      bayar mudah bisa kartu kredit    1     0\n","189                                        harga turun    1     0\n","203            harga murah kualitas tidak mengecewakan    1     0\n","204                              cara pembayaran sulit    0     1\n","205                        tidak rekomendasi pelancong    0     1\n","208               harga tidak cocok pelancong menginap    0     1\n","252        bisa early checkin tidak ada tambahan biaya    1     0\n","256                           harga hanya seratus ribu    1     0\n","260                   sarapan tidak ada tambahan biaya    1     0\n","264                             hotel lain lebih murah    0     1"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"y3XsAUyNYcGd","executionInfo":{"status":"ok","timestamp":1632215592554,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c31d1c0d-6fae-4269-d8d9-f44a74fa3e1a"},"source":["harga_misc[harga_misc[\"Act\"]==1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>32</th>\n","      <td>harga kamar satu juta sesuai</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>harga murah lebih ekspektasi</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>harga termasuk amenities</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>late checkout tidak denda</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>tidak buat kantong kering</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>116</th>\n","      <td>harga tidak bohong sesuai</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>118</th>\n","      <td>dapat upgrade kamar tidak ada tambahan biaya</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>141</th>\n","      <td>minuman mini bar gratis tidak ada tambahan b...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>pesan harga seratus tiga puluh ribu termasuk...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>pembayaran mudah bisa bayar debit</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>170</th>\n","      <td>tidak overprice harga sesuai</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>layanan makanan termasuk harga sewa kamar</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>bayar mudah bisa kartu kredit</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>harga turun</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>203</th>\n","      <td>harga murah kualitas tidak mengecewakan</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>252</th>\n","      <td>bisa early checkin tidak ada tambahan biaya</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>256</th>\n","      <td>harga hanya seratus ribu</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>260</th>\n","      <td>sarapan tidak ada tambahan biaya</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","32                        harga kamar satu juta sesuai    1     0\n","65                        harga murah lebih ekspektasi    1     0\n","72                            harga termasuk amenities    1     0\n","80                           late checkout tidak denda    1     0\n","90                           tidak buat kantong kering    1     0\n","116                          harga tidak bohong sesuai    1     0\n","118       dapat upgrade kamar tidak ada tambahan biaya    1     0\n","141    minuman mini bar gratis tidak ada tambahan b...    1     0\n","143    pesan harga seratus tiga puluh ribu termasuk...    1     0\n","164                  pembayaran mudah bisa bayar debit    1     0\n","170                       tidak overprice harga sesuai    1     0\n","179          layanan makanan termasuk harga sewa kamar    1     0\n","187                      bayar mudah bisa kartu kredit    1     0\n","189                                        harga turun    1     0\n","203            harga murah kualitas tidak mengecewakan    1     0\n","252        bisa early checkin tidak ada tambahan biaya    1     0\n","256                           harga hanya seratus ribu    1     0\n","260                   sarapan tidak ada tambahan biaya    1     0"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YsfD27D1OeiK","executionInfo":{"status":"ok","timestamp":1632215592555,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d46caa57-7ca6-4d94-efc8-aee579ff9ceb"},"source":["len(df_final_ev.query('Act != Pred'))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["32"]},"metadata":{},"execution_count":79}]},{"cell_type":"markdown","metadata":{"id":"1zAaGMepBh__"},"source":["# Testing"]},{"cell_type":"code","metadata":{"id":"fSIQ_K3rU9yj","executionInfo":{"status":"ok","timestamp":1632298732845,"user_tz":-420,"elapsed":6,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["model = load_model('/content/drive/My Drive/Thesis/Code/FixModel2/cnn_sentiment_harga_0.904.h5')\n","labels=[\"negative\",\"positive\"]"],"execution_count":102,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":323},"id":"DP_MLui3VBG8","executionInfo":{"status":"ok","timestamp":1632298916942,"user_tz":-420,"elapsed":496,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"a933c9e4-3042-4136-8741-f905ba88e3d8"},"source":["df_test = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/result_test.xlsx')\n","df_harga = df_test[df_test[\"used aspect\"]==\"harga\"]\n","df_harga.head()"],"execution_count":111,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>Unnamed: 1</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 7</th>\n","      <th>Unnamed: 8</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-02-29</td>\n","      <td>NaN</td>\n","      <td>366</td>\n","      <td>ada hotel lebih_murah fasilitas sama</td>\n","      <td>booking</td>\n","      <td>harga</td>\n","      <td>harga, hotel</td>\n","      <td>harga</td>\n","      <td>hotel</td>\n","      <td>harga</td>\n","      <td>hotel</td>\n","      <td>[0.9953705668449402, 0.0040567489340901375]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-09-21</td>\n","      <td>NaN</td>\n","      <td>168</td>\n","      <td>budget murah</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.994749128818512, 0.002517241984605789]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-01-12</td>\n","      <td>NaN</td>\n","      <td>286</td>\n","      <td>dapat diskon roti</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9369354844093323, 0.046391867101192474]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2021-05-29</td>\n","      <td>NaN</td>\n","      <td>79</td>\n","      <td>dapat harga epic</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9991550445556641, 0.0003545532817952335]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-01-05</td>\n","      <td>NaN</td>\n","      <td>213</td>\n","      <td>ekstra bed mahal</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9975898265838623, 0.0012759312521666288]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     tanggal  Unnamed: 1  ...  true aspect used aspect\n","0 2020-02-29         NaN  ...        harga       harga\n","1 2020-09-21         NaN  ...        harga       harga\n","2 2020-01-12         NaN  ...        harga       harga\n","3 2021-05-29         NaN  ...        harga       harga\n","4 2020-01-05         NaN  ...        harga       harga\n","\n","[5 rows x 14 columns]"]},"metadata":{},"execution_count":111}]},{"cell_type":"code","metadata":{"id":"LkRA9fxYVEU5","executionInfo":{"status":"ok","timestamp":1632298920977,"user_tz":-420,"elapsed":8,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["data_test = df_harga[\"text\"]\n","list_test = data_test.tolist()\n","\n","seq = tokenizer.texts_to_sequences(list_test)\n","padded = pad_sequences(seq, maxlen=max_seq_len)\n","pred = model.predict(padded)"],"execution_count":112,"outputs":[]},{"cell_type":"code","metadata":{"id":"gGwCI1qHSxi8","executionInfo":{"status":"ok","timestamp":1632298920979,"user_tz":-420,"elapsed":7,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["y_test = []\n","for x in pred :\n","  y = labels[np.argmax(x)]\n","  # print(y)\n","  y_test += [y]"],"execution_count":113,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Zv0Q58CDXKVz","executionInfo":{"status":"ok","timestamp":1632298921716,"user_tz":-420,"elapsed":9,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d6a90330-75df-49be-89f4-95935b24bc4e"},"source":["df_harga[\"sentiment\"]=y_test\n","df_harga"],"execution_count":114,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>Unnamed: 1</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 7</th>\n","      <th>Unnamed: 8</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-02-29</td>\n","      <td>NaN</td>\n","      <td>366</td>\n","      <td>ada hotel lebih_murah fasilitas sama</td>\n","      <td>booking</td>\n","      <td>harga</td>\n","      <td>harga, hotel</td>\n","      <td>harga</td>\n","      <td>hotel</td>\n","      <td>harga</td>\n","      <td>hotel</td>\n","      <td>[0.9953705668449402, 0.0040567489340901375]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-09-21</td>\n","      <td>NaN</td>\n","      <td>168</td>\n","      <td>budget murah</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.994749128818512, 0.002517241984605789]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-01-12</td>\n","      <td>NaN</td>\n","      <td>286</td>\n","      <td>dapat diskon roti</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9369354844093323, 0.046391867101192474]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2021-05-29</td>\n","      <td>NaN</td>\n","      <td>79</td>\n","      <td>dapat harga epic</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9991550445556641, 0.0003545532817952335]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-01-05</td>\n","      <td>NaN</td>\n","      <td>213</td>\n","      <td>ekstra bed mahal</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9975898265838623, 0.0012759312521666288]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2021-06-03</td>\n","      <td>NaN</td>\n","      <td>347</td>\n","      <td>fasilitas bagus sesuai harga</td>\n","      <td>booking</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9987503290176392, 0.0006026977789588273]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2021-06-03</td>\n","      <td>NaN</td>\n","      <td>376</td>\n","      <td>fasilitas baik sesuai harga</td>\n","      <td>agoda</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9983273148536682, 0.0010241689160466194]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2021-04-05</td>\n","      <td>NaN</td>\n","      <td>379</td>\n","      <td>fasilitas tidak_sebanding harga</td>\n","      <td>agoda</td>\n","      <td>harga</td>\n","      <td>harga, hotel</td>\n","      <td>harga</td>\n","      <td>hotel</td>\n","      <td>harga</td>\n","      <td>hotel</td>\n","      <td>[0.9960590600967407, 0.0017613237723708153]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2021-04-05</td>\n","      <td>NaN</td>\n","      <td>350</td>\n","      <td>fasilitas tidak_sesuai harga</td>\n","      <td>booking</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.999171257019043, 0.0005891341716051102]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2020-12-19</td>\n","      <td>NaN</td>\n","      <td>131</td>\n","      <td>harga bersahabat</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9963745474815369, 0.0029331850819289684]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2020-11-05</td>\n","      <td>NaN</td>\n","      <td>274</td>\n","      <td>harga bersaing</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9959802627563477, 0.0015131052350625396]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2020-01-07</td>\n","      <td>NaN</td>\n","      <td>288</td>\n","      <td>harga hotel lumayan mahal</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>[0.9999954700469971, 2.3121961021388415e-06]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2020-02-29</td>\n","      <td>NaN</td>\n","      <td>399</td>\n","      <td>harga hotel sekitar ada lebih_murah fasilitas ...</td>\n","      <td>agoda</td>\n","      <td>harga</td>\n","      <td>harga, lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>[0.99943608045578, 0.0002487946185283363]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2020-01-02</td>\n","      <td>NaN</td>\n","      <td>291</td>\n","      <td>harga jauh lebih_mahal dibanding harga hotel lain</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>[0.9999997615814209, 1.3360109107907192e-07]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2021-03-15</td>\n","      <td>NaN</td>\n","      <td>113</td>\n","      <td>harga kamar murah cukup</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, kamar</td>\n","      <td>harga</td>\n","      <td>kamar</td>\n","      <td>harga</td>\n","      <td>kamar</td>\n","      <td>[0.9999281167984009, 3.699349326780066e-05]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>2021-07-28</td>\n","      <td>NaN</td>\n","      <td>422</td>\n","      <td>harga kompetitif</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9950309991836548, 0.002081580925732851]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2021-05-03</td>\n","      <td>NaN</td>\n","      <td>83</td>\n","      <td>harga luar biasa murah</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.999954104423523, 3.2360851037083194e-05]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2020-11-28</td>\n","      <td>NaN</td>\n","      <td>140</td>\n","      <td>harga murah</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999557733535767, 2.889440111175645e-05]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>2020-11-25</td>\n","      <td>NaN</td>\n","      <td>142</td>\n","      <td>harga murah</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999557733535767, 2.889440111175645e-05]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>2021-04-16</td>\n","      <td>NaN</td>\n","      <td>242</td>\n","      <td>harga murah</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999557733535767, 2.889440111175645e-05]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2020-11-19</td>\n","      <td>NaN</td>\n","      <td>325</td>\n","      <td>harga murah</td>\n","      <td>booking</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999557733535767, 2.889440111175645e-05]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2020-08-04</td>\n","      <td>NaN</td>\n","      <td>363</td>\n","      <td>harga murah</td>\n","      <td>booking</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999557733535767, 2.889440111175645e-05]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2021-07-16</td>\n","      <td>NaN</td>\n","      <td>429</td>\n","      <td>harga normal sesuai</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999136924743652, 4.6249449951574206e-05]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2020-08-12</td>\n","      <td>NaN</td>\n","      <td>186</td>\n","      <td>harga oke</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9923007488250732, 0.004733495879918337]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2021-04-06</td>\n","      <td>NaN</td>\n","      <td>349</td>\n","      <td>harga oke</td>\n","      <td>booking</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9923007488250732, 0.004733495879918337]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2021-04-06</td>\n","      <td>NaN</td>\n","      <td>378</td>\n","      <td>harga oke</td>\n","      <td>agoda</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9923007488250732, 0.004733495879918337]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2021-06-27</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>harga oke sesuai</td>\n","      <td>pegipegi</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9994182586669922, 0.0003993248683400452]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2021-04-05</td>\n","      <td>NaN</td>\n","      <td>100</td>\n","      <td>harga ramah luar ekspektasi</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.973805844783783, 0.02524528279900551]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2020-08-20</td>\n","      <td>NaN</td>\n","      <td>182</td>\n","      <td>harga relatif murah</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999967813491821, 2.4153241611202247e-06]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2021-07-26</td>\n","      <td>NaN</td>\n","      <td>424</td>\n","      <td>harga sesuai</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9992306232452393, 0.00038035737816244364]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2021-06-29</td>\n","      <td>NaN</td>\n","      <td>439</td>\n","      <td>harga terjangkau</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9993897676467896, 0.00027438474353402853]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>2020-03-18</td>\n","      <td>NaN</td>\n","      <td>396</td>\n","      <td>harga tidak_termasuk sarapan</td>\n","      <td>agoda</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9996980428695679, 0.0001784314081305638]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2020-01-20</td>\n","      <td>NaN</td>\n","      <td>283</td>\n","      <td>minus harga lumayan mahal</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999969005584717, 1.979483840841567e-06]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2020-08-14</td>\n","      <td>NaN</td>\n","      <td>184</td>\n","      <td>pastinya harga murah</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999557733535767, 2.889440111175645e-05]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>2020-12-20</td>\n","      <td>NaN</td>\n","      <td>266</td>\n","      <td>rate tiga_ratus ribu cukup mahal</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9999970197677612, 2.4314956590387737e-06]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>2021-05-06</td>\n","      <td>NaN</td>\n","      <td>82</td>\n","      <td>sesuai harga</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9990094900131226, 0.00046201367513276637]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>2021-07-15</td>\n","      <td>NaN</td>\n","      <td>431</td>\n","      <td>tidak_ada deposit</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, kamar</td>\n","      <td>harga</td>\n","      <td>kamar</td>\n","      <td>harga</td>\n","      <td>kamar</td>\n","      <td>[0.742343544960022, 0.1369680017232895]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>2020-12-21</td>\n","      <td>NaN</td>\n","      <td>131</td>\n","      <td>kamar sesuai harga</td>\n","      <td>traveloka</td>\n","      <td>harga</td>\n","      <td>harga, pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>harga</td>\n","      <td>pelayanan</td>\n","      <td>[0.9886922836303711, 0.006155867129564285]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>2021-06-29</td>\n","      <td>NaN</td>\n","      <td>439</td>\n","      <td>tarif sesuai</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.9810341596603394, 0.010385369881987572]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>2020-03-18</td>\n","      <td>NaN</td>\n","      <td>364</td>\n","      <td>tidak_termasuk sarapan</td>\n","      <td>booking</td>\n","      <td>harga</td>\n","      <td>harga, restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>harga</td>\n","      <td>restoran</td>\n","      <td>[0.6657413840293884, 0.2680022716522217]</td>\n","      <td>harga</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>2021-03-25</td>\n","      <td>NaN</td>\n","      <td>249</td>\n","      <td>bisa sewa sepeda</td>\n","      <td>tiket</td>\n","      <td>harga</td>\n","      <td>harga, lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>[0.9031758904457092, 0.037828341126441956]</td>\n","      <td>hotel</td>\n","      <td>harga</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      tanggal  Unnamed: 1   id  ... true aspect used aspect sentiment\n","0  2020-02-29         NaN  366  ...       harga       harga  positive\n","1  2020-09-21         NaN  168  ...       harga       harga  positive\n","2  2020-01-12         NaN  286  ...       harga       harga  positive\n","3  2021-05-29         NaN   79  ...       harga       harga  positive\n","4  2020-01-05         NaN  213  ...       harga       harga  negative\n","5  2021-06-03         NaN  347  ...       harga       harga  positive\n","6  2021-06-03         NaN  376  ...       harga       harga  positive\n","7  2021-04-05         NaN  379  ...       harga       harga  negative\n","8  2021-04-05         NaN  350  ...       harga       harga  negative\n","9  2020-12-19         NaN  131  ...       harga       harga  positive\n","10 2020-11-05         NaN  274  ...       harga       harga  positive\n","11 2020-01-07         NaN  288  ...       harga       harga  negative\n","12 2020-02-29         NaN  399  ...       harga       harga  positive\n","13 2020-01-02         NaN  291  ...       harga       harga  negative\n","14 2021-03-15         NaN  113  ...       harga       harga  positive\n","15 2021-07-28         NaN  422  ...       harga       harga  positive\n","16 2021-05-03         NaN   83  ...       harga       harga  positive\n","17 2020-11-28         NaN  140  ...       harga       harga  positive\n","18 2020-11-25         NaN  142  ...       harga       harga  positive\n","19 2021-04-16         NaN  242  ...       harga       harga  positive\n","20 2020-11-19         NaN  325  ...       harga       harga  positive\n","21 2020-08-04         NaN  363  ...       harga       harga  positive\n","22 2021-07-16         NaN  429  ...       harga       harga  positive\n","23 2020-08-12         NaN  186  ...       harga       harga  positive\n","24 2021-04-06         NaN  349  ...       harga       harga  positive\n","25 2021-04-06         NaN  378  ...       harga       harga  positive\n","26 2021-06-27         NaN    2  ...       harga       harga  positive\n","27 2021-04-05         NaN  100  ...       harga       harga  positive\n","28 2020-08-20         NaN  182  ...       harga       harga  positive\n","29 2021-07-26         NaN  424  ...       harga       harga  positive\n","30 2021-06-29         NaN  439  ...       harga       harga  positive\n","31 2020-03-18         NaN  396  ...       harga       harga  negative\n","32 2020-01-20         NaN  283  ...       harga       harga  negative\n","33 2020-08-14         NaN  184  ...       harga       harga  positive\n","34 2020-12-20         NaN  266  ...       harga       harga  negative\n","35 2021-05-06         NaN   82  ...       harga       harga  positive\n","36 2021-07-15         NaN  431  ...       harga       harga  negative\n","37 2020-12-21         NaN  131  ...       harga       harga  positive\n","38 2021-06-29         NaN  439  ...       harga       harga  positive\n","39 2020-03-18         NaN  364  ...       harga       harga  negative\n","41 2021-03-25         NaN  249  ...       hotel       harga  negative\n","\n","[41 rows x 15 columns]"]},"metadata":{},"execution_count":114}]},{"cell_type":"code","metadata":{"id":"p77rJdosYopB","executionInfo":{"status":"ok","timestamp":1632299314925,"user_tz":-420,"elapsed":1274,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_harga.to_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/all_result_test.xlsx')"],"execution_count":179,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6hT6gKM48NOn"},"source":["# Evaluate Sentiment"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GZzPTe_oVF_p","executionInfo":{"status":"ok","timestamp":1620026762273,"user_tz":-420,"elapsed":1318,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"da6607b8-220e-42e2-9113-62c207862bed"},"source":["ev_sent = model.predict_classes(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/sequential.py:450: UserWarning: `model.predict_classes()` is deprecated and will be removed after 2021-01-01. Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","  warnings.warn('`model.predict_classes()` is deprecated and '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"JI9ZyHH-8cYY"},"source":["decode_sent = np.argmax(Y_test, axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JSlN5TIH8pCG"},"source":["lab_sent = [\"negatif\",\"positif\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MehYEqFrAUpc"},"source":["def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"ZTR8GOUa9TJb","executionInfo":{"status":"ok","timestamp":1620026763197,"user_tz":-420,"elapsed":2224,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"6398eaff-b20d-4c23-a7de-ef96de248a40"},"source":["conf_matrix(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x576 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"id":"kLeStDruKN9l","executionInfo":{"status":"ok","timestamp":1620026763199,"user_tz":-420,"elapsed":2217,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"17c4e42f-b837-49ec-ce8a-fbad29163775"},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XgjzN7Zi9ZCI","executionInfo":{"status":"ok","timestamp":1620026763200,"user_tz":-420,"elapsed":2209,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"51acd039-bf09-4112-9020-d960ba748622"},"source":["from sklearn.metrics import accuracy_score\n","accuracy_score(ev_sent, decode_sent)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8943089430894309"]},"metadata":{"tags":[]},"execution_count":142}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oKEJidKP9kSa","executionInfo":{"status":"ok","timestamp":1620026763201,"user_tz":-420,"elapsed":2204,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"dc26b5fc-eb1d-42ba-ac0d-ba2be4b45482"},"source":["from sklearn.metrics import classification_report\n","print(classification_report(ev_sent, decode_sent))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.90      0.85      0.88       109\n","           1       0.89      0.93      0.91       137\n","\n","    accuracy                           0.89       246\n","   macro avg       0.90      0.89      0.89       246\n","weighted avg       0.89      0.89      0.89       246\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V_4mHIBD9sM1","executionInfo":{"status":"ok","timestamp":1620026763203,"user_tz":-420,"elapsed":2201,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"2e04a403-98e6-41a0-ee06-85fb57997e81"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(ev_sent, decode_sent))\n","print('F1 score:', f1_score(ev_sent, decode_sent, average='macro'))\n","print('Recall:', recall_score(ev_sent, decode_sent, average='macro'))\n","print('Precision:', precision_score(ev_sent, decode_sent, average='macro'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy: 0.8943089430894309\n","F1 score: 0.8922506738544473\n","Recall: 0.8901091542221924\n","Precision: 0.8955122547355557\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"8jzXTeea90VA","executionInfo":{"status":"ok","timestamp":1620026763205,"user_tz":-420,"elapsed":2197,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"a8d65656-e089-4689-ca04-2d34741fd6fd"},"source":["plt.title('Loss')\n","plt.plot(history_BLSTM.history['loss'], label='train')\n","plt.plot(history_BLSTM.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"YbTEzFpR9_pG","executionInfo":{"status":"ok","timestamp":1620026763618,"user_tz":-420,"elapsed":2603,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"86a0a642-b749-4ce5-8858-2c9a5e0da74e"},"source":["plt.title('Accuracy')\n","plt.plot(history_BLSTM.history['acc'], label='train')\n","plt.plot(history_BLSTM.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"_2M0YBAp-fYL"},"source":[""],"execution_count":null,"outputs":[]}]}