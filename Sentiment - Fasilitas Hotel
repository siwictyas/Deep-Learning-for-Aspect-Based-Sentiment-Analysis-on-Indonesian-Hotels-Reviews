{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Sentiment - Fasilitas Hotel","provenance":[],"collapsed_sections":["jCh20tTkBoF-","Wq6wLNiOSfP3","cBwwrNpv-0_2","EJ64PtWnBddd","6hT6gKM48NOn","zpTIMsstVqu4"],"mount_file_id":"1jEqMTUKFtjC--mwqSYgnVAvCTaCWHU7-","authorship_tag":"ABX9TyPr5Qx8JV8QXhcuepWduaV8"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"2-qyyxYZSMyF","executionInfo":{"status":"ok","timestamp":1632299232167,"user_tz":-420,"elapsed":569,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["import keras\n","import numpy as np\n","import pandas as pd\n","import openpyxl\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","from keras.models import load_model\n","from nltk.corpus import stopwords\n","from nltk.tokenize import word_tokenize\n","import unicodedata\n","from collections import Counter\n","from imblearn.under_sampling import RandomUnderSampler\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","import warnings\n","import tensorflow as tf\n","warnings.simplefilter(action='ignore', category=FutureWarning)\n","np.random.seed(0)"],"execution_count":27,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jCh20tTkBoF-"},"source":["# Data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"N7fAJvKISNR2","executionInfo":{"status":"ok","timestamp":1632299238676,"user_tz":-420,"elapsed":5752,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"1e69b9a3-2bb0-4161-a662-8f5a7d54defe"},"source":["df = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/data_training.xlsx', usecols=[\"clean text\",\"aspect\",\"sentiment\"])\n","df.head()"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 clean text aspect sentiment\n","0  shuttle gratis malioboro  harga  positive\n","1  dapat gratis course golf  harga  positive\n","2    gratis andong keliling  harga  positive\n","3              sesuai harga  harga  positive\n","4          harga terjangkau  harga  positive"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"wLSH6SnfSUsk","executionInfo":{"status":"ok","timestamp":1632299238678,"user_tz":-420,"elapsed":51,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df = df.drop_duplicates()"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"KQ-Ft7mQSXwt","executionInfo":{"status":"ok","timestamp":1632299238680,"user_tz":-420,"elapsed":49,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"aa52f672-5999-4f3c-d035-309e3ecae15d"},"source":["df = df.dropna()\n","df.reset_index(drop=True)"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5653</th>\n","      <td>staff jutek bentak_bentak marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5654</th>\n","      <td>staff mengatur parkir marah_marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5655</th>\n","      <td>sajian sarapan lambat refill</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5656</th>\n","      <td>tidak_ada prokes terjaga tidak_ada social_dist...</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5657</th>\n","      <td>staff tidak_ramah tidak_paham sop</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5658 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                             clean text     aspect sentiment\n","0                              shuttle gratis malioboro      harga  positive\n","1                              dapat gratis course golf      harga  positive\n","2                                gratis andong keliling      harga  positive\n","3                                          sesuai harga      harga  positive\n","4                                      harga terjangkau      harga  positive\n","...                                                 ...        ...       ...\n","5653                    staff jutek bentak_bentak marah  pelayanan  negative\n","5654                  staff mengatur parkir marah_marah  pelayanan  negative\n","5655                       sajian sarapan lambat refill  pelayanan  negative\n","5656  tidak_ada prokes terjaga tidak_ada social_dist...  pelayanan  negative\n","5657                  staff tidak_ramah tidak_paham sop  pelayanan  negative\n","\n","[5658 rows x 3 columns]"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6DUF0jjkSZa4","executionInfo":{"status":"ok","timestamp":1632299238681,"user_tz":-420,"elapsed":46,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"9477f31e-6152-4726-a5c6-17a3246cd1ed"},"source":["df.sentiment.value_counts()"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["positive    2905\n","negative    2753\n","Name: sentiment, dtype: int64"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"SmH2XLrJSa6a","executionInfo":{"status":"ok","timestamp":1632299238683,"user_tz":-420,"elapsed":46,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_train = df.sample(frac = 1) #shuffle"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"id":"Hk9ggR7JScx9","executionInfo":{"status":"ok","timestamp":1632299238685,"user_tz":-420,"elapsed":47,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# clean_text = df_train[[\"clean text\",\"aspect\",\"sentiment\"]]\n","# wo_punc_text = df_train[\"text_wo_punc\"]\n","# wo_neg_text = df_train[\"text_wo_neg\"]\n","# stemming = df_train[\"stemming\"]\n","# label = df_train[\"sentiment\"]"],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I2cy3RgtKHi4","executionInfo":{"status":"ok","timestamp":1632299238686,"user_tz":-420,"elapsed":47,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"77f378f4-d8b7-4d06-be5d-505d4e7a64f8"},"source":["t = df_train[df_train[\"aspect\"]==\"hotel\"]\n","text = t[\"clean text\"] \n","label = t[\"sentiment\"]\n","print(t)"],"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["                                     clean text aspect sentiment\n","3387  tempat penerimaan tamu seperti pos satpam  hotel  negative\n","538                    ada playground sederhana  hotel  positive\n","730                                 hotel besar  hotel  positive\n","3623                    bangunan furniture lama  hotel  negative\n","3422         fasilitas mirip hotel bintang_satu  hotel  negative\n","...                                         ...    ...       ...\n","811                     lobi besar banyak kursi  hotel  positive\n","769          playground anak besar seperti mall  hotel  positive\n","548              kolam_renang buka sampai malam  hotel  positive\n","719                  interior bagus kesan mewah  hotel  positive\n","3506        hanya sayang tempat_parkir terbatas  hotel  negative\n","\n","[895 rows x 3 columns]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"LLHTnQApH4Wp","executionInfo":{"status":"ok","timestamp":1632299238688,"user_tz":-420,"elapsed":47,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"f8787eb1-d3e7-4688-a4bc-82e722e9f7c9"},"source":["t.sentiment.value_counts().plot(kind='bar', title='Count (target)');\n","print(t.sentiment.value_counts())"],"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["positive    475\n","negative    420\n","Name: sentiment, dtype: int64\n"]},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"Wq6wLNiOSfP3"},"source":["# Modelling"]},{"cell_type":"markdown","metadata":{"id":"Jkk7TrKBAous"},"source":["## Neural Network"]},{"cell_type":"markdown","metadata":{"id":"cBwwrNpv-0_2"},"source":["### Var"]},{"cell_type":"code","metadata":{"id":"7Iqx73ywSepp","executionInfo":{"status":"ok","timestamp":1632299238690,"user_tz":-420,"elapsed":47,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from tensorflow.keras.models import Sequential, Model\n","from tensorflow.keras.layers import Activation, GlobalAveragePooling1D, GlobalMaxPooling1D, BatchNormalization, Concatenate, Input, Embedding\n","from tensorflow.keras.layers import SimpleRNN, GRU, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, SpatialDropout1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras import initializers, regularizers, constraints, optimizers, layers\n","from tensorflow.keras.regularizers import l2\n","import keras.backend as K\n","import os\n","from keras import callbacks"],"execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"id":"fMZOSuX2RJAy","executionInfo":{"status":"ok","timestamp":1632299238692,"user_tz":-420,"elapsed":48,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["earlystopping = callbacks.EarlyStopping(monitor =\"val_loss\", \n","                                        mode =\"min\", patience = 5, \n","                                        restore_best_weights = True)"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_BOmSXv1TEG2","executionInfo":{"status":"ok","timestamp":1632299241908,"user_tz":-420,"elapsed":3263,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"5a00cdb2-0cb5-4773-d310-637e161ab2d8"},"source":["pip install keras_self_attention"],"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: keras_self_attention in /usr/local/lib/python3.7/dist-packages (0.50.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (1.19.5)\n","Requirement already satisfied: Keras in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (2.6.0)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1A0quJ_fTGeY","executionInfo":{"status":"ok","timestamp":1632299241910,"user_tz":-420,"elapsed":20,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"85a62977-454c-4097-8f4d-f3a23a1e7873"},"source":["max_features =20000\n","tokenizer = Tokenizer() \n","tokenizer.fit_on_texts(text.values) \n","max_seq_len = max([len(i.split()) for i in text])\n","\n","X = tokenizer.texts_to_sequences(text.values)\n","X = pad_sequences(X, maxlen=max_seq_len)\n","Y = pd.get_dummies(label).values\n","print(\"Shape of data tensor:\", X.shape)\n","print(\"Shape of label tensor:\",Y.shape)"],"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of data tensor: (895, 13)\n","Shape of label tensor: (895, 2)\n"]}]},{"cell_type":"code","metadata":{"id":"Q6s50objTIlr","executionInfo":{"status":"ok","timestamp":1632299241912,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.33, random_state = 0)"],"execution_count":40,"outputs":[]},{"cell_type":"code","metadata":{"id":"q9WgthpgNToG","executionInfo":{"status":"ok","timestamp":1632299241912,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["unit = 100\n","dropout = 0.5\n","batch = 32\n","epoch = 100\n","output = 100\n","dense = 6\n","kernel = 3\n","filter = 32"],"execution_count":41,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DcM4p2ImTLdL"},"source":["### RNN"]},{"cell_type":"code","metadata":{"id":"oBV6f8FETKtp"},"source":["def get_model_rnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_rnn = Sequential()\n","  model_rnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_rnn.add(Dense(32, activation='relu'))\n","  model_rnn.add(SpatialDropout1D(dropout))\n","  model_rnn.add(SimpleRNN(unit))\n","  model_rnn.add(Dense(2, activation='sigmoid'))\n","  model_rnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_rnn.summary())\n","\n","  return model_rnn"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fiBDUCglTQJn","executionInfo":{"status":"ok","timestamp":1632213520378,"user_tz":-420,"elapsed":3931,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"b8f15b3d-88be-4c0a-f476-bf00a0c990a2"},"source":["m_rnn = get_model_rnn(X_train, Y_train)\n","history_RNN = m_rnn.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 13, 100)           93100     \n","_________________________________________________________________\n","spatial_dropout1d (SpatialDr (None, 13, 100)           0         \n","_________________________________________________________________\n","simple_rnn (SimpleRNN)       (None, 100)               20100     \n","_________________________________________________________________\n","dense (Dense)                (None, 2)                 202       \n","=================================================================\n","Total params: 113,402\n","Trainable params: 113,402\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","15/15 [==============================] - 1s 23ms/step - loss: 0.6858 - acc: 0.5439 - val_loss: 0.6995 - val_acc: 0.4667\n","Epoch 2/100\n","15/15 [==============================] - 0s 10ms/step - loss: 0.6368 - acc: 0.6715 - val_loss: 0.6679 - val_acc: 0.5833\n","Epoch 3/100\n","15/15 [==============================] - 0s 8ms/step - loss: 0.5570 - acc: 0.7762 - val_loss: 0.6029 - val_acc: 0.6917\n","Epoch 4/100\n","15/15 [==============================] - 0s 8ms/step - loss: 0.4356 - acc: 0.8682 - val_loss: 0.5170 - val_acc: 0.7917\n","Epoch 5/100\n","15/15 [==============================] - 0s 8ms/step - loss: 0.2984 - acc: 0.8808 - val_loss: 0.4842 - val_acc: 0.7750\n","Epoch 6/100\n","15/15 [==============================] - 0s 9ms/step - loss: 0.2163 - acc: 0.9331 - val_loss: 0.4984 - val_acc: 0.7667\n","Epoch 7/100\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1359 - acc: 0.9665 - val_loss: 0.4171 - val_acc: 0.8250\n","Epoch 8/100\n","15/15 [==============================] - 0s 8ms/step - loss: 0.1023 - acc: 0.9707 - val_loss: 0.4446 - val_acc: 0.8000\n","Epoch 9/100\n","15/15 [==============================] - 0s 10ms/step - loss: 0.0901 - acc: 0.9791 - val_loss: 0.4791 - val_acc: 0.8083\n","Epoch 10/100\n","15/15 [==============================] - 0s 11ms/step - loss: 0.0698 - acc: 0.9833 - val_loss: 0.4359 - val_acc: 0.8250\n","Epoch 11/100\n","15/15 [==============================] - 0s 9ms/step - loss: 0.0553 - acc: 0.9833 - val_loss: 0.4144 - val_acc: 0.8500\n","Epoch 12/100\n","15/15 [==============================] - 0s 8ms/step - loss: 0.0467 - acc: 0.9958 - val_loss: 0.4850 - val_acc: 0.8167\n","Epoch 13/100\n","15/15 [==============================] - 0s 8ms/step - loss: 0.0370 - acc: 0.9937 - val_loss: 0.4690 - val_acc: 0.8333\n","Epoch 14/100\n","15/15 [==============================] - 0s 9ms/step - loss: 0.0248 - acc: 1.0000 - val_loss: 0.4640 - val_acc: 0.8500\n","Epoch 15/100\n","15/15 [==============================] - 0s 8ms/step - loss: 0.0217 - acc: 0.9979 - val_loss: 0.4847 - val_acc: 0.8417\n","Epoch 16/100\n","15/15 [==============================] - 0s 9ms/step - loss: 0.0185 - acc: 0.9979 - val_loss: 0.4625 - val_acc: 0.8583\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rc0j9TxoTR-A","executionInfo":{"status":"ok","timestamp":1632213520380,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"fa12c198-178b-42f9-c0b7-04bcb2d3e265"},"source":["score,acc_rnn = m_rnn.evaluate(X_test, Y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 3ms/step - loss: 0.2597 - acc: 0.9017\n"]}]},{"cell_type":"code","metadata":{"id":"jWN9Q8QuTVXR"},"source":["# m_rnn.save('/content/drive/My Drive/Thesis/Code/Model/rnn_sentiment_model.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"f_XeLWSjTX9o"},"source":["### GRU"]},{"cell_type":"code","metadata":{"id":"2zuM2gB8TXN8"},"source":["def get_model_gru(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_gru = Sequential()\n","  model_gru.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_gru.add(Dense(32, activation='relu'))\n","  model_gru.add(SpatialDropout1D(dropout))\n","  model_gru.add(GRU(unit))\n","  model_gru.add(Dense(2, activation='sigmoid'))\n","  model_gru.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_gru.summary())\n","\n","  return model_gru"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iYLfLwNYTehH","executionInfo":{"status":"ok","timestamp":1632213526611,"user_tz":-420,"elapsed":6238,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"7a85699e-3522-4757-f102-ce3db0c1ebad"},"source":["m_gru = get_model_gru(X_train, Y_train)\n","history_GRU = m_gru.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_1 (Embedding)      (None, 13, 100)           93100     \n","_________________________________________________________________\n","spatial_dropout1d_1 (Spatial (None, 13, 100)           0         \n","_________________________________________________________________\n","gru (GRU)                    (None, 100)               60600     \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 153,902\n","Trainable params: 153,902\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","15/15 [==============================] - 3s 41ms/step - loss: 0.6861 - acc: 0.5544 - val_loss: 0.6950 - val_acc: 0.4667\n","Epoch 2/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.6578 - acc: 0.5732 - val_loss: 0.6821 - val_acc: 0.4667\n","Epoch 3/100\n","15/15 [==============================] - 0s 15ms/step - loss: 0.5802 - acc: 0.6695 - val_loss: 0.5685 - val_acc: 0.7083\n","Epoch 4/100\n","15/15 [==============================] - 0s 16ms/step - loss: 0.3801 - acc: 0.8661 - val_loss: 0.4001 - val_acc: 0.8500\n","Epoch 5/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.2455 - acc: 0.9205 - val_loss: 0.3523 - val_acc: 0.8583\n","Epoch 6/100\n","15/15 [==============================] - 0s 16ms/step - loss: 0.1673 - acc: 0.9477 - val_loss: 0.3658 - val_acc: 0.8583\n","Epoch 7/100\n","15/15 [==============================] - 0s 16ms/step - loss: 0.1253 - acc: 0.9707 - val_loss: 0.2721 - val_acc: 0.8917\n","Epoch 8/100\n","15/15 [==============================] - 0s 16ms/step - loss: 0.0783 - acc: 0.9854 - val_loss: 0.2778 - val_acc: 0.9000\n","Epoch 9/100\n","15/15 [==============================] - 0s 15ms/step - loss: 0.0588 - acc: 0.9770 - val_loss: 0.2330 - val_acc: 0.9000\n","Epoch 10/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.0438 - acc: 0.9916 - val_loss: 0.2550 - val_acc: 0.9167\n","Epoch 11/100\n","15/15 [==============================] - 0s 16ms/step - loss: 0.0385 - acc: 0.9874 - val_loss: 0.2302 - val_acc: 0.8917\n","Epoch 12/100\n","15/15 [==============================] - 0s 15ms/step - loss: 0.0268 - acc: 0.9916 - val_loss: 0.2795 - val_acc: 0.9083\n","Epoch 13/100\n","15/15 [==============================] - 0s 15ms/step - loss: 0.0250 - acc: 0.9937 - val_loss: 0.2546 - val_acc: 0.8750\n","Epoch 14/100\n","15/15 [==============================] - 0s 16ms/step - loss: 0.0152 - acc: 0.9979 - val_loss: 0.3306 - val_acc: 0.8833\n","Epoch 15/100\n","15/15 [==============================] - 0s 15ms/step - loss: 0.0146 - acc: 0.9979 - val_loss: 0.2733 - val_acc: 0.8917\n","Epoch 16/100\n","15/15 [==============================] - 0s 15ms/step - loss: 0.0094 - acc: 0.9979 - val_loss: 0.3312 - val_acc: 0.8917\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l9uQanamTf88","executionInfo":{"status":"ok","timestamp":1632213527220,"user_tz":-420,"elapsed":615,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"9c27bf56-7b0a-4b33-c3ec-2a2a9843a3d5"},"source":["score,acc_gru = m_gru.evaluate(X_test, Y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 4ms/step - loss: 0.2152 - acc: 0.9085\n"]}]},{"cell_type":"code","metadata":{"id":"cOS5Ff2ZTkEX"},"source":["m_gru.save('/content/drive/My Drive/Thesis/Code/FixModel/gru_sentiment_hotel_9145.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hcWT_dKBTmvQ"},"source":["### LSTM"]},{"cell_type":"code","metadata":{"id":"3wX4AVxuTo4H"},"source":["def get_model_LSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_LSTM = Sequential()\n","  model_LSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_LSTM.add(Dense(32, activation='relu'))\n","  model_LSTM.add(SpatialDropout1D(dropout))\n","  model_LSTM.add(LSTM(unit))\n","  model_LSTM.add(Dense(2, activation='sigmoid'))\n","  model_LSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_LSTM.summary())\n","  \n","  return model_LSTM"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GN-idepNTrNu","executionInfo":{"status":"ok","timestamp":1632213534293,"user_tz":-420,"elapsed":7078,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"27848d86-3692-4c91-8783-207f3a1a2b46"},"source":["m_lstm = get_model_LSTM(X_train, Y_train)\n","history_LSTM = m_lstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_2 (Embedding)      (None, 13, 100)           93100     \n","_________________________________________________________________\n","spatial_dropout1d_2 (Spatial (None, 13, 100)           0         \n","_________________________________________________________________\n","lstm (LSTM)                  (None, 100)               80400     \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 173,702\n","Trainable params: 173,702\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","15/15 [==============================] - 2s 46ms/step - loss: 0.6890 - acc: 0.5544 - val_loss: 0.7000 - val_acc: 0.4667\n","Epoch 2/100\n","15/15 [==============================] - 0s 16ms/step - loss: 0.6714 - acc: 0.5732 - val_loss: 0.6886 - val_acc: 0.4667\n","Epoch 3/100\n","15/15 [==============================] - 0s 18ms/step - loss: 0.6334 - acc: 0.5837 - val_loss: 0.6482 - val_acc: 0.5333\n","Epoch 4/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.5332 - acc: 0.7552 - val_loss: 0.5313 - val_acc: 0.7667\n","Epoch 5/100\n","15/15 [==============================] - 0s 18ms/step - loss: 0.3957 - acc: 0.8745 - val_loss: 0.4456 - val_acc: 0.8333\n","Epoch 6/100\n","15/15 [==============================] - 0s 16ms/step - loss: 0.3151 - acc: 0.9289 - val_loss: 0.4111 - val_acc: 0.8500\n","Epoch 7/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.2266 - acc: 0.9310 - val_loss: 0.3610 - val_acc: 0.8583\n","Epoch 8/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.1617 - acc: 0.9477 - val_loss: 0.3609 - val_acc: 0.8667\n","Epoch 9/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.1222 - acc: 0.9519 - val_loss: 0.2949 - val_acc: 0.8750\n","Epoch 10/100\n","15/15 [==============================] - 0s 18ms/step - loss: 0.0845 - acc: 0.9749 - val_loss: 0.3435 - val_acc: 0.8583\n","Epoch 11/100\n","15/15 [==============================] - 0s 18ms/step - loss: 0.0633 - acc: 0.9791 - val_loss: 0.2741 - val_acc: 0.8917\n","Epoch 12/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.0381 - acc: 0.9895 - val_loss: 0.2512 - val_acc: 0.9083\n","Epoch 13/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.0352 - acc: 0.9854 - val_loss: 0.3495 - val_acc: 0.8500\n","Epoch 14/100\n","15/15 [==============================] - 0s 16ms/step - loss: 0.0257 - acc: 0.9937 - val_loss: 0.2620 - val_acc: 0.9167\n","Epoch 15/100\n","15/15 [==============================] - 0s 18ms/step - loss: 0.0248 - acc: 0.9916 - val_loss: 0.2598 - val_acc: 0.9083\n","Epoch 16/100\n","15/15 [==============================] - 0s 18ms/step - loss: 0.0245 - acc: 0.9916 - val_loss: 0.3224 - val_acc: 0.8833\n","Epoch 17/100\n","15/15 [==============================] - 0s 17ms/step - loss: 0.0141 - acc: 0.9979 - val_loss: 0.2860 - val_acc: 0.9000\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GFNUlAeVTsiT","executionInfo":{"status":"ok","timestamp":1632213534294,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"be19a332-fcc8-4938-d915-5f504c5b35d1"},"source":["score,acc_lstm = m_lstm.evaluate(X_test, Y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 4ms/step - loss: 0.2397 - acc: 0.9051\n"]}]},{"cell_type":"code","metadata":{"id":"DNaWHiB8Tuva"},"source":["# m_lstm.save('/content/drive/My Drive/Thesis/Code/Model/lstm_sentiment_model.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xTG40dBOAxrH"},"source":["### CNN"]},{"cell_type":"code","metadata":{"id":"qrk04_vWTwcj"},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras import layers\n","from tensorflow.keras.layers import Concatenate, Input, Embedding, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, GlobalAveragePooling1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras.models import Model\n","import matplotlib.pyplot as plt\n","import os"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"V_JQTnXqT2fA"},"source":["def get_model_cnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cnn = Sequential()\n","  model_cnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cnn.add(Conv1D(filters=filter, kernel_size=kernel, padding='same', strides=1, activation='relu'))\n","  model_cnn.add(MaxPool1D(pool_size=2))\n","  # model_cnn.add(Dense(32, activation='relu'))\n","  model_cnn.add(SpatialDropout1D(dropout))\n","  model_cnn.add(Flatten())\n","  model_cnn.add(Dense(2, activation='sigmoid'))\n","  model_cnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cnn.summary())\n","\n","  return model_cnn"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kiHoXRfxT3-t","executionInfo":{"status":"ok","timestamp":1632213537154,"user_tz":-420,"elapsed":2867,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"570e2d4d-3ccd-47ba-a47d-ac3151c5dc2a"},"source":["m_cnn = get_model_cnn(X_train, Y_train)\n","history_cnn = m_cnn.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_3\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_3 (Embedding)      (None, 13, 100)           93100     \n","_________________________________________________________________\n","conv1d (Conv1D)              (None, 13, 32)            9632      \n","_________________________________________________________________\n","max_pooling1d (MaxPooling1D) (None, 6, 32)             0         \n","_________________________________________________________________\n","spatial_dropout1d_3 (Spatial (None, 6, 32)             0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 192)               0         \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 2)                 386       \n","=================================================================\n","Total params: 103,118\n","Trainable params: 103,118\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","15/15 [==============================] - 1s 15ms/step - loss: 0.6864 - acc: 0.5649 - val_loss: 0.6961 - val_acc: 0.4667\n","Epoch 2/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.6707 - acc: 0.5753 - val_loss: 0.6952 - val_acc: 0.4667\n","Epoch 3/100\n","15/15 [==============================] - 0s 7ms/step - loss: 0.6505 - acc: 0.5774 - val_loss: 0.6895 - val_acc: 0.4667\n","Epoch 4/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.6240 - acc: 0.5900 - val_loss: 0.6678 - val_acc: 0.4917\n","Epoch 5/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.5823 - acc: 0.7259 - val_loss: 0.6334 - val_acc: 0.6167\n","Epoch 6/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.5133 - acc: 0.7971 - val_loss: 0.5946 - val_acc: 0.6750\n","Epoch 7/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.4224 - acc: 0.8933 - val_loss: 0.5188 - val_acc: 0.8333\n","Epoch 8/100\n","15/15 [==============================] - 0s 7ms/step - loss: 0.3226 - acc: 0.9268 - val_loss: 0.4507 - val_acc: 0.8250\n","Epoch 9/100\n","15/15 [==============================] - 0s 7ms/step - loss: 0.2461 - acc: 0.9456 - val_loss: 0.3929 - val_acc: 0.8333\n","Epoch 10/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.1901 - acc: 0.9665 - val_loss: 0.3750 - val_acc: 0.8333\n","Epoch 11/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.1372 - acc: 0.9833 - val_loss: 0.3421 - val_acc: 0.8583\n","Epoch 12/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.1185 - acc: 0.9749 - val_loss: 0.3122 - val_acc: 0.8750\n","Epoch 13/100\n","15/15 [==============================] - 0s 8ms/step - loss: 0.0876 - acc: 0.9874 - val_loss: 0.3306 - val_acc: 0.8500\n","Epoch 14/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.0658 - acc: 0.9937 - val_loss: 0.2948 - val_acc: 0.8667\n","Epoch 15/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.0604 - acc: 0.9937 - val_loss: 0.3007 - val_acc: 0.8583\n","Epoch 16/100\n","15/15 [==============================] - 0s 7ms/step - loss: 0.0515 - acc: 0.9958 - val_loss: 0.3257 - val_acc: 0.8500\n","Epoch 17/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.0437 - acc: 0.9958 - val_loss: 0.3016 - val_acc: 0.8417\n","Epoch 18/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.0347 - acc: 0.9937 - val_loss: 0.2997 - val_acc: 0.8417\n","Epoch 19/100\n","15/15 [==============================] - 0s 6ms/step - loss: 0.0314 - acc: 0.9958 - val_loss: 0.3275 - val_acc: 0.8333\n"]}]},{"cell_type":"code","metadata":{"id":"R8lCvNZcT5nt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213537155,"user_tz":-420,"elapsed":9,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"7fe931c6-6d6c-4a6d-dfd3-f0a2fc7cfb69"},"source":["score,acc_cnn = m_cnn.evaluate(X_test, Y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 2ms/step - loss: 0.2384 - acc: 0.9051\n"]}]},{"cell_type":"code","metadata":{"id":"uISwQfIKT7c-"},"source":["# m_cnn.save('/content/drive/My Drive/Thesis/Code/FixModel2/cnn_sentiment_hotel_0.915.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DHTDUWbYA2wP"},"source":["### BLSTM"]},{"cell_type":"code","metadata":{"id":"V4juzmHFT9aI"},"source":["def get_model_BLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_BLSTM = Sequential()\n","  model_BLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_BLSTM.add(Dense(32, activation='relu'))\n","  model_BLSTM.add((SpatialDropout1D(dropout)))\n","  model_BLSTM.add(Bidirectional(LSTM(unit)))\n","  model_BLSTM.add(Dense(2, activation='sigmoid'))\n","  model_BLSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_BLSTM.summary())\n","  return model_BLSTM"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jkcOCbDXUAzq","executionInfo":{"status":"ok","timestamp":1632213546100,"user_tz":-420,"elapsed":8951,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"17e2ecc4-63bc-493c-92e4-8e45edbc7720"},"source":["m_blstm = get_model_BLSTM(X_train, Y_train)\n","history_BLSTM = m_blstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_4\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_4 (Embedding)      (None, 13, 100)           93100     \n","_________________________________________________________________\n","spatial_dropout1d_4 (Spatial (None, 13, 100)           0         \n","_________________________________________________________________\n","bidirectional (Bidirectional (None, 200)               160800    \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 2)                 402       \n","=================================================================\n","Total params: 254,302\n","Trainable params: 254,302\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","15/15 [==============================] - 4s 76ms/step - loss: 0.6849 - acc: 0.5607 - val_loss: 0.7106 - val_acc: 0.4667\n","Epoch 2/100\n","15/15 [==============================] - 0s 27ms/step - loss: 0.6648 - acc: 0.5732 - val_loss: 0.6829 - val_acc: 0.4833\n","Epoch 3/100\n","15/15 [==============================] - 0s 27ms/step - loss: 0.5507 - acc: 0.7134 - val_loss: 0.5388 - val_acc: 0.7583\n","Epoch 4/100\n","15/15 [==============================] - 0s 27ms/step - loss: 0.2536 - acc: 0.9121 - val_loss: 0.3275 - val_acc: 0.8750\n","Epoch 5/100\n","15/15 [==============================] - 0s 25ms/step - loss: 0.1640 - acc: 0.9456 - val_loss: 0.3336 - val_acc: 0.8833\n","Epoch 6/100\n","15/15 [==============================] - 0s 27ms/step - loss: 0.1009 - acc: 0.9686 - val_loss: 0.3207 - val_acc: 0.8917\n","Epoch 7/100\n","15/15 [==============================] - 0s 27ms/step - loss: 0.0604 - acc: 0.9791 - val_loss: 0.3692 - val_acc: 0.8833\n","Epoch 8/100\n","15/15 [==============================] - 0s 27ms/step - loss: 0.0366 - acc: 0.9937 - val_loss: 0.4356 - val_acc: 0.8833\n","Epoch 9/100\n","15/15 [==============================] - 0s 26ms/step - loss: 0.0224 - acc: 0.9937 - val_loss: 0.4602 - val_acc: 0.8917\n","Epoch 10/100\n","15/15 [==============================] - 0s 27ms/step - loss: 0.0160 - acc: 0.9958 - val_loss: 0.5122 - val_acc: 0.8833\n","Epoch 11/100\n","15/15 [==============================] - 0s 26ms/step - loss: 0.0147 - acc: 0.9937 - val_loss: 0.5653 - val_acc: 0.8833\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fwpOGPOoUCc5","executionInfo":{"status":"ok","timestamp":1632213550975,"user_tz":-420,"elapsed":4881,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"93e8b982-1f6a-406d-c8dd-2286990b4db1"},"source":["score,acc_blstm = m_blstm.evaluate(X_test, Y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 6ms/step - loss: 0.2826 - acc: 0.8949\n"]}]},{"cell_type":"code","metadata":{"id":"W3fxKXCwUEm6"},"source":["# m_blstm.save('/content/drive/My Drive/Thesis/Code/Model/blstm_aspect_model.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4cvyCrSDA7al"},"source":["### ABLSTM"]},{"cell_type":"code","metadata":{"id":"rzMIDKo1UGGq"},"source":["from keras.models import Sequential\n","from keras.layers import Embedding, LSTM, Dense, Dropout, Bidirectional, Flatten\n","import matplotlib.pyplot as plt\n","from keras_self_attention import SeqSelfAttention, SeqWeightedAttention\n","from keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","def get_model_ABLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_ABLSTM = Sequential()\n","  model_ABLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_ABLSTM.add(Dense(32, activation='tanh'))\n","  model_ABLSTM.add(SpatialDropout1D(dropout))\n","  model_ABLSTM.add(Bidirectional(LSTM(unit, return_sequences=True)))\n","  model_ABLSTM.add(SeqWeightedAttention())\n","  model_ABLSTM.add(Dense(2, activation='sigmoid'))\n","  model_ABLSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_ABLSTM.summary())\n","  \n","  return model_ABLSTM"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kefMlp8EUIPr","executionInfo":{"status":"ok","timestamp":1632213559792,"user_tz":-420,"elapsed":8838,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"3d642b52-1efd-44e0-ce16-818ce2643e27"},"source":["m_ablstm = get_model_ABLSTM(X_train, Y_train)\n","history_ABLSTM = m_ablstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_5 (Embedding)      (None, 13, 100)           93100     \n","_________________________________________________________________\n","spatial_dropout1d_5 (Spatial (None, 13, 100)           0         \n","_________________________________________________________________\n","bidirectional_1 (Bidirection (None, 13, 200)           160800    \n","_________________________________________________________________\n","seq_weighted_attention (SeqW (None, 200)               201       \n","_________________________________________________________________\n","dense_5 (Dense)              (None, 2)                 402       \n","=================================================================\n","Total params: 254,503\n","Trainable params: 254,503\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","15/15 [==============================] - 4s 81ms/step - loss: 0.6850 - acc: 0.5732 - val_loss: 0.7011 - val_acc: 0.4667\n","Epoch 2/100\n","15/15 [==============================] - 0s 28ms/step - loss: 0.6593 - acc: 0.5753 - val_loss: 0.6735 - val_acc: 0.5000\n","Epoch 3/100\n","15/15 [==============================] - 0s 29ms/step - loss: 0.4201 - acc: 0.8201 - val_loss: 0.4534 - val_acc: 0.8750\n","Epoch 4/100\n","15/15 [==============================] - 0s 28ms/step - loss: 0.2774 - acc: 0.8954 - val_loss: 0.4014 - val_acc: 0.8750\n","Epoch 5/100\n","15/15 [==============================] - 0s 28ms/step - loss: 0.1917 - acc: 0.9456 - val_loss: 0.3060 - val_acc: 0.9083\n","Epoch 6/100\n","15/15 [==============================] - 0s 29ms/step - loss: 0.1288 - acc: 0.9644 - val_loss: 0.3122 - val_acc: 0.9083\n","Epoch 7/100\n","15/15 [==============================] - 0s 28ms/step - loss: 0.0766 - acc: 0.9791 - val_loss: 0.3590 - val_acc: 0.9167\n","Epoch 8/100\n","15/15 [==============================] - 0s 28ms/step - loss: 0.0631 - acc: 0.9833 - val_loss: 0.3982 - val_acc: 0.9083\n","Epoch 9/100\n","15/15 [==============================] - 0s 27ms/step - loss: 0.0441 - acc: 0.9854 - val_loss: 0.4348 - val_acc: 0.8917\n","Epoch 10/100\n","15/15 [==============================] - 0s 29ms/step - loss: 0.0385 - acc: 0.9916 - val_loss: 0.4137 - val_acc: 0.9000\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WbpASkA7UKHi","executionInfo":{"status":"ok","timestamp":1632213564936,"user_tz":-420,"elapsed":5165,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"89d5e62c-4fb5-43ff-c1d2-88e8495b1b0b"},"source":["score,acc_ablstm = m_ablstm.evaluate(X_test, Y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 7ms/step - loss: 0.3153 - acc: 0.8847\n"]}]},{"cell_type":"code","metadata":{"id":"6za6cclSULso"},"source":["# m_ablstm.save('/content/drive/My Drive/Thesis/Code/Model/ablstm_sentiment_model.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CNQOwZDkBB2R"},"source":["### CNNLSTM"]},{"cell_type":"code","metadata":{"id":"LdijuuFWUO9E"},"source":["def get_model_clstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_clstm = Sequential()\n","  model_clstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_clstm.add(Conv1D(filters=filter, kernel_size=kernel, padding='same', activation='relu'))\n","  model_clstm.add(MaxPool1D(pool_size=2))\n","  # model_clstm.add(Dense(32, activation='relu'))\n","  model_clstm.add(SpatialDropout1D(dropout))\n","  model_clstm.add(LSTM(unit))\n","  model_clstm.add(Dense(2, activation='sigmoid'))\n","  model_clstm.compile(optimizer='nadam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_clstm.summary())\n","  return model_clstm"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"c1zoXGvgUQ3A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213569604,"user_tz":-420,"elapsed":4673,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"71d979bc-fb4f-47d7-ca3c-289624dd0725"},"source":["m_clstm = get_model_clstm(X_train, Y_train)\n","history_CLSTM = m_clstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_6\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_6 (Embedding)      (None, 13, 100)           93100     \n","_________________________________________________________________\n","conv1d_1 (Conv1D)            (None, 13, 32)            9632      \n","_________________________________________________________________\n","max_pooling1d_1 (MaxPooling1 (None, 6, 32)             0         \n","_________________________________________________________________\n","spatial_dropout1d_6 (Spatial (None, 6, 32)             0         \n","_________________________________________________________________\n","lstm_3 (LSTM)                (None, 100)               53200     \n","_________________________________________________________________\n","dense_6 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 156,134\n","Trainable params: 156,134\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","15/15 [==============================] - 3s 43ms/step - loss: 0.6886 - acc: 0.5795 - val_loss: 0.6999 - val_acc: 0.4667\n","Epoch 2/100\n","15/15 [==============================] - 0s 12ms/step - loss: 0.6798 - acc: 0.5732 - val_loss: 0.7039 - val_acc: 0.4667\n","Epoch 3/100\n","15/15 [==============================] - 0s 12ms/step - loss: 0.6465 - acc: 0.5816 - val_loss: 0.6465 - val_acc: 0.5667\n","Epoch 4/100\n","15/15 [==============================] - 0s 11ms/step - loss: 0.5016 - acc: 0.7699 - val_loss: 0.5516 - val_acc: 0.7250\n","Epoch 5/100\n","15/15 [==============================] - 0s 10ms/step - loss: 0.3386 - acc: 0.8828 - val_loss: 0.4255 - val_acc: 0.8250\n","Epoch 6/100\n","15/15 [==============================] - 0s 10ms/step - loss: 0.2330 - acc: 0.9310 - val_loss: 0.3535 - val_acc: 0.8417\n","Epoch 7/100\n","15/15 [==============================] - 0s 9ms/step - loss: 0.1661 - acc: 0.9603 - val_loss: 0.3656 - val_acc: 0.8333\n","Epoch 8/100\n","15/15 [==============================] - 0s 10ms/step - loss: 0.1080 - acc: 0.9728 - val_loss: 0.3632 - val_acc: 0.8417\n","Epoch 9/100\n","15/15 [==============================] - 0s 10ms/step - loss: 0.0612 - acc: 0.9874 - val_loss: 0.4103 - val_acc: 0.8250\n","Epoch 10/100\n","15/15 [==============================] - 0s 10ms/step - loss: 0.0645 - acc: 0.9812 - val_loss: 0.3938 - val_acc: 0.8417\n","Epoch 11/100\n","15/15 [==============================] - 0s 9ms/step - loss: 0.0466 - acc: 0.9937 - val_loss: 0.5419 - val_acc: 0.8167\n"]}]},{"cell_type":"code","metadata":{"id":"UbtA4j_rUS5d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213570167,"user_tz":-420,"elapsed":586,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"cd54752c-a93a-47b0-93e7-100f3fd9bded"},"source":["score,acc_clstm = m_clstm.evaluate(X_test, Y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 3ms/step - loss: 0.2855 - acc: 0.9153\n"]}]},{"cell_type":"code","metadata":{"id":"58r09paUUUlG"},"source":["m_clstm.save('/content/drive/My Drive/Thesis/Code/Model26Aug/clstm_sentiment_hotel_9251.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Iy8nWxe6BHYF"},"source":["### CNNBLSTM"]},{"cell_type":"code","metadata":{"id":"TVK0iWSAUXvp"},"source":["def get_model_cblstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cblstm = Sequential()\n","  model_cblstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cblstm.add(Conv1D(filters=filter, kernel_size=kernel, padding='same', activation='relu'))\n","  model_cblstm.add(MaxPool1D(pool_size=2))\n","  # model_cblstm.add(Dense(32, activation='relu'))\n","  model_cblstm.add(SpatialDropout1D(dropout))\n","  model_cblstm.add(Bidirectional(LSTM(unit, return_sequences=False)))\n","  model_cblstm.add(Dense(2, activation='sigmoid'))\n","  model_cblstm.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cblstm.summary())\n","\n","  return model_cblstm"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-aEuCTxgUZvm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213576775,"user_tz":-420,"elapsed":6611,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"17cfd2ad-b64b-497d-caaa-8b5bce0c5d0d"},"source":["m_cblstm = get_model_cblstm(X_train, Y_train)\n","history_CBLSTM = m_cblstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_7 (Embedding)      (None, 13, 100)           93100     \n","_________________________________________________________________\n","conv1d_2 (Conv1D)            (None, 13, 32)            9632      \n","_________________________________________________________________\n","max_pooling1d_2 (MaxPooling1 (None, 6, 32)             0         \n","_________________________________________________________________\n","spatial_dropout1d_7 (Spatial (None, 6, 32)             0         \n","_________________________________________________________________\n","bidirectional_2 (Bidirection (None, 200)               106400    \n","_________________________________________________________________\n","dense_7 (Dense)              (None, 2)                 402       \n","=================================================================\n","Total params: 209,534\n","Trainable params: 209,534\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","15/15 [==============================] - 4s 59ms/step - loss: 0.6872 - acc: 0.5628 - val_loss: 0.7045 - val_acc: 0.4667\n","Epoch 2/100\n","15/15 [==============================] - 0s 14ms/step - loss: 0.6712 - acc: 0.5732 - val_loss: 0.7171 - val_acc: 0.4667\n","Epoch 3/100\n","15/15 [==============================] - 0s 13ms/step - loss: 0.6007 - acc: 0.6025 - val_loss: 0.6123 - val_acc: 0.6500\n","Epoch 4/100\n","15/15 [==============================] - 0s 14ms/step - loss: 0.3172 - acc: 0.8849 - val_loss: 0.4223 - val_acc: 0.8167\n","Epoch 5/100\n","15/15 [==============================] - 0s 14ms/step - loss: 0.1621 - acc: 0.9519 - val_loss: 0.4507 - val_acc: 0.8583\n","Epoch 6/100\n","15/15 [==============================] - 0s 13ms/step - loss: 0.0868 - acc: 0.9749 - val_loss: 0.3351 - val_acc: 0.8750\n","Epoch 7/100\n","15/15 [==============================] - 0s 14ms/step - loss: 0.0364 - acc: 0.9937 - val_loss: 0.3610 - val_acc: 0.8917\n","Epoch 8/100\n","15/15 [==============================] - 0s 15ms/step - loss: 0.0235 - acc: 0.9958 - val_loss: 0.4772 - val_acc: 0.8667\n","Epoch 9/100\n","15/15 [==============================] - 0s 12ms/step - loss: 0.0459 - acc: 0.9812 - val_loss: 0.4102 - val_acc: 0.8833\n","Epoch 10/100\n","15/15 [==============================] - 0s 14ms/step - loss: 0.0292 - acc: 0.9895 - val_loss: 0.4119 - val_acc: 0.8833\n","Epoch 11/100\n","15/15 [==============================] - 0s 14ms/step - loss: 0.0179 - acc: 0.9958 - val_loss: 0.3748 - val_acc: 0.8833\n"]}]},{"cell_type":"code","metadata":{"id":"6rA1QjdDUbK3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213576775,"user_tz":-420,"elapsed":37,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"3f90794a-7a6a-4c0c-d202-3b132cea4113"},"source":["score,acc_cblstm = m_cblstm.evaluate(X_test, Y_test)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 3ms/step - loss: 0.2885 - acc: 0.8983\n"]}]},{"cell_type":"code","metadata":{"id":"DA-ZEgvEUc1C"},"source":["# m_cblstm.save('/content/drive/My Drive/Thesis/Code/Model/cblstm_sentiment_model.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1NSh36nzVE5q"},"source":["### Result"]},{"cell_type":"code","metadata":{"id":"OeUu2x5pUgAf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213576777,"user_tz":-420,"elapsed":32,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"81abacd3-95f5-4d0a-feac-afafb22a851d"},"source":["acc = {'Model': ['RNN','LSTM', 'GRU','BiLSTM', 'ABLSTM', 'CNN', 'CNNLSTM','CNNBLSTM'],\n","       'Acc': [acc_rnn, acc_gru, acc_lstm, acc_cnn, acc_blstm, acc_clstm, acc_cblstm, acc_ablstm]}   \n","df_acc_nn = pd.DataFrame(acc)  \n","print(df_acc_nn)  "],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.901695\n","1      LSTM  0.908475\n","2       GRU  0.905085\n","3    BiLSTM  0.905085\n","4    ABLSTM  0.894915\n","5       CNN  0.915254\n","6   CNNLSTM  0.898305\n","7  CNNBLSTM  0.884746\n"]}]},{"cell_type":"markdown","metadata":{"id":"uroMA0JNBNT1"},"source":["## Machhine Learning"]},{"cell_type":"code","metadata":{"id":"nSjX_E4aUiP7"},"source":["from sklearn.naive_bayes import MultinomialNB\n","from sklearn.svm import SVC, LinearSVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.feature_extraction.text import TfidfTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.model_selection import train_test_split, cross_val_score\n","from sklearn.metrics import classification_report, confusion_matrix, accuracy_score, f1_score, precision_score, recall_score, plot_confusion_matrix\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","np.random.seed(7)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"K5WU1_9EUko6"},"source":["X_train2, X_test2, y_train2, y_test2 = train_test_split(text, label, random_state=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aR080ykuUmsP"},"source":["acc_result = []\n","cross_val = 5"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9Q6w3GRuBSBr"},"source":["### MNB"]},{"cell_type":"code","metadata":{"id":"CufsDryMUoDJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213576779,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0293ce7f-f8c9-463b-febf-4cb98244c297"},"source":["#Multinomial Naive Bayes with bigram\n","pipeline_mnb_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_bigram = cross_val_score(pipeline_mnb_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_bigram), 4)\n","std_score = round(np.std(scores_mnb_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d1 = ('MNB+Bigram',mean_score, std_score)\n","acc_result.append(d1)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8610\n","Standard Dev: +/-0.0154\n"]}]},{"cell_type":"code","metadata":{"id":"rmfc04JnUpux","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213576780,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"adf9666b-1112-4c7f-a261-249e3428f6fe"},"source":["#Multinomial Naive Bayes unigram\n","pipeline_mnb_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_unigram = cross_val_score(pipeline_mnb_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_unigram), 4)\n","std_score = round(np.std(scores_mnb_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d2 = ('MNB+Unigram',mean_score, std_score)\n","acc_result.append(d2)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8655\n","Standard Dev: +/-0.0158\n"]}]},{"cell_type":"markdown","metadata":{"id":"USJ83MjBBVZl"},"source":["### SVC"]},{"cell_type":"code","metadata":{"id":"PGVczeF4Ur1S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213577366,"user_tz":-420,"elapsed":613,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"800b3af5-df8e-4959-e002-1abd3504d0c6"},"source":["#SVC with bigram\n","pipeline_svc_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_bigram = cross_val_score(pipeline_svc_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_bigram), 4)\n","std_score = round(np.std(scores_svc_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d3 = ('SVC+Bigram',mean_score, std_score)\n","acc_result.append(d3)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.7997\n","Standard Dev: +/-0.0258\n"]}]},{"cell_type":"code","metadata":{"id":"2WIjJb5eUtkI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213577367,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"f824773b-885e-40f5-ff90-6a4d3b08f81a"},"source":["#SVC Unigram\n","pipeline_svc_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_unigram = cross_val_score(pipeline_svc_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_unigram), 4)\n","std_score = round(np.std(scores_svc_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d4 = ('SVC+Unigram',mean_score, std_score)\n","acc_result.append(d4)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8117\n","Standard Dev: +/-0.0152\n"]}]},{"cell_type":"markdown","metadata":{"id":"OkGOlxOABYXi"},"source":["### Logistic Regression"]},{"cell_type":"code","metadata":{"id":"p5RGympEUvRD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213577367,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"2cf18e7b-d704-45d0-b0b1-898beb1f5c3a"},"source":["#Logistic Regression with Bigram\n","pipeline_lr_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_bigram = cross_val_score(pipeline_lr_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_bigram), 4)\n","std_score = round(np.std(scores_lr_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d5 = ('LR+Bigram',mean_score, std_score)\n","acc_result.append(d5)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8700\n","Standard Dev: +/-0.0075\n"]}]},{"cell_type":"code","metadata":{"id":"e5yLB1cnUxNC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213577369,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"e0ee5ffa-df46-4f52-ca65-61b3cbe1375f"},"source":["#Logistic Regression Unigram\n","pipeline_lr_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_unigram = cross_val_score(pipeline_lr_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_unigram), 4)\n","std_score = round(np.std(scores_lr_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d6 = ('LR+Unigram',mean_score, std_score)\n","acc_result.append(d6)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8789\n","Standard Dev: +/-0.0029\n"]}]},{"cell_type":"code","metadata":{"id":"7k2aEchDUzKJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213577370,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"db91a980-1c60-47c8-e473-69b273da7663"},"source":["# create DataFrame using data \n","df_acc_ml = pd.DataFrame.from_records(acc_result, columns =['Model', 'Accuracy', 'Standard Deviation']) \n","  \n","print(df_acc_ml)  "],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.8610              0.0154\n","1  MNB+Unigram    0.8655              0.0158\n","2   SVC+Bigram    0.7997              0.0258\n","3  SVC+Unigram    0.8117              0.0152\n","4    LR+Bigram    0.8700              0.0075\n","5   LR+Unigram    0.8789              0.0029\n"]}]},{"cell_type":"markdown","metadata":{"id":"EJ64PtWnBddd"},"source":["# Overall Result"]},{"cell_type":"code","metadata":{"id":"Cc97CgmZU0xL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213577371,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"69e2b34e-0bcf-4c72-e6aa-642df879d8af"},"source":["print(df_acc_nn)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.901695\n","1      LSTM  0.908475\n","2       GRU  0.905085\n","3    BiLSTM  0.905085\n","4    ABLSTM  0.894915\n","5       CNN  0.915254\n","6   CNNLSTM  0.898305\n","7  CNNBLSTM  0.884746\n"]}]},{"cell_type":"code","metadata":{"id":"fXXzuarUU2_a","colab":{"base_uri":"https://localhost:8080/","height":97},"executionInfo":{"status":"ok","timestamp":1632213577373,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0fbec3c7-1c3d-447d-e10f-45dfe5b81be8"},"source":["print(\"Best Neural Network Model :\")\n","df_acc_nn[['Model', 'Acc']][df_acc_nn.Acc == df_acc_nn.Acc.max()]"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Neural Network Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Acc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>CNN</td>\n","      <td>0.915254</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Model       Acc\n","5   CNN  0.915254"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","metadata":{"id":"kM_aJD23U4hC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632213577374,"user_tz":-420,"elapsed":25,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0648c592-256c-4b53-ab78-65d81e5501d6"},"source":["print(df_acc_ml)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.8610              0.0154\n","1  MNB+Unigram    0.8655              0.0158\n","2   SVC+Bigram    0.7997              0.0258\n","3  SVC+Unigram    0.8117              0.0152\n","4    LR+Bigram    0.8700              0.0075\n","5   LR+Unigram    0.8789              0.0029\n"]}]},{"cell_type":"code","metadata":{"id":"2d-0vXj2U8RA","colab":{"base_uri":"https://localhost:8080/","height":97},"executionInfo":{"status":"ok","timestamp":1632213577375,"user_tz":-420,"elapsed":23,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"f54e6007-d9a0-498b-de55-585caadc1916"},"source":["print(\"Best Machine Learning Model :\")\n","df_acc_ml[['Model', 'Accuracy']][df_acc_ml.Accuracy == df_acc_ml.Accuracy.max()]"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Machine Learning Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>LR+Unigram</td>\n","      <td>0.8789</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        Model  Accuracy\n","5  LR+Unigram    0.8789"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","metadata":{"id":"A87lb7zf3luk"},"source":["model = m_cnn"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"At9xy80o3uUs","colab":{"base_uri":"https://localhost:8080/","height":754},"executionInfo":{"status":"ok","timestamp":1632213578729,"user_tz":-420,"elapsed":1374,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"ffc9c742-feac-4292-de32-f87feb5ae4e9"},"source":["from keras.utils.vis_utils import plot_model\n","\n","plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","metadata":{"id":"6hT6gKM48NOn"},"source":["# Analyze Result"]},{"cell_type":"code","metadata":{"id":"GZzPTe_oVF_p"},"source":["ev_model = model.predict(X_test)\n","ev_model_list = ev_model.tolist()\n","ev_classes = np.argmax(ev_model,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"046RZMB3Vlzx","executionInfo":{"status":"ok","timestamp":1632213684364,"user_tz":-420,"elapsed":22,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"580876ad-7890-4d5a-9e6c-e3d115d54eb1"},"source":["# Creating a reverse dictionary\n","reverse_word_map = dict(map(reversed, tokenizer.word_index.items()))\n","\n","# Function takes a tokenized sentence and returns the words\n","def sequence_to_text(list_of_indices):\n","    # Looking up words in dictionary\n","    words = [reverse_word_map.get(letter) for letter in list_of_indices]\n","    return(words)\n","\n","# Creating texts \n","my_texts = list(map(sequence_to_text, X_test))\n","text_str=[]\n","for x in my_texts:\n","  x_str = ' '.join([str(elem) for elem in x])\n","  text_str.append(x_str)\n","text_str[0]\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'None None None None None None None None None None kolam terlihat berantakan'"]},"metadata":{},"execution_count":67}]},{"cell_type":"markdown","metadata":{"id":"joO-Z27nVwuh"},"source":["## Confusion Matrix"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"id":"kXUoE7KbVqK8","executionInfo":{"status":"ok","timestamp":1632213684365,"user_tz":-420,"elapsed":20,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"1602f34b-e068-4e42-9443-4f4a68c39790"},"source":["decode_sentiment = np.argmax(Y_test, axis=1)\n","lab_sentiment = [\"positive\",\"negative\"]\n","def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(decode_sentiment, ev_classes,lab_sentiment)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hj0mwQtfV1X0","executionInfo":{"status":"ok","timestamp":1632213684367,"user_tz":-420,"elapsed":20,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"fc6cd6c1-2265-4837-8887-2eb450cc1eb9"},"source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import classification_report\n","accuracy_score(decode_sentiment, ev_classes)\n","print(classification_report(decode_sentiment, ev_classes))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.96      0.85      0.90       150\n","           1       0.86      0.97      0.91       145\n","\n","    accuracy                           0.91       295\n","   macro avg       0.91      0.91      0.90       295\n","weighted avg       0.91      0.91      0.90       295\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ha5-QmLOV3Yx","executionInfo":{"status":"ok","timestamp":1632213685287,"user_tz":-420,"elapsed":938,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"240b4683-7ef6-4fc4-e4df-b628f8cb40c6"},"source":["ev_train_model = model.predict(X_train)\n","ev_train_classes = np.argmax(ev_train_model,axis=1)\n","decode_train = np.argmax(Y_train, axis=1)\n","print(classification_report(decode_train, ev_train_classes))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.98      0.95      0.97       268\n","           1       0.96      0.98      0.97       330\n","\n","    accuracy                           0.97       598\n","   macro avg       0.97      0.97      0.97       598\n","weighted avg       0.97      0.97      0.97       598\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZD_0Hk7FV5N2","executionInfo":{"status":"ok","timestamp":1632213685288,"user_tz":-420,"elapsed":50,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"45742b14-d2b6-438d-c9b8-a5c104906a3a"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(decode_sentiment, ev_classes))\n","print('F1 score:', f1_score(decode_sentiment, ev_classes, average='macro'))\n","print('Recall:', recall_score(decode_sentiment, ev_classes, average='macro'))\n","print('Precision:', precision_score(decode_sentiment, ev_classes, average='macro'))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9050847457627119\n","F1 score: 0.9049000644745326\n","Recall: 0.9060919540229886\n","Precision: 0.9105084588213423\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"cguCQvmQV6_W","executionInfo":{"status":"ok","timestamp":1632213685290,"user_tz":-420,"elapsed":50,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6e1413aa-73be-4c8c-e454-1955d8451112"},"source":["plt.title('Loss')\n","plt.plot(history_LSTM.history['loss'], label='train')\n","plt.plot(history_LSTM.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();\n","\n","plt.title('Accuracy')\n","plt.plot(history_LSTM.history['acc'], label='train')\n","plt.plot(history_LSTM.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jbh5l5yhV86v","executionInfo":{"status":"ok","timestamp":1632213685291,"user_tz":-420,"elapsed":49,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"b8dd7161-dfde-4799-a8b1-7959ebcc45f3"},"source":["print(history_BLSTM.history['acc'])\n","print(history_BLSTM.history['val_acc'])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.560669481754303, 0.573221743106842, 0.7133890986442566, 0.9121338725090027, 0.9456067085266113, 0.9686192274093628, 0.9790794849395752, 0.9937238693237305, 0.9937238693237305, 0.9958158731460571, 0.9937238693237305]\n","[0.46666666865348816, 0.4833333194255829, 0.7583333253860474, 0.875, 0.8833333253860474, 0.8916666507720947, 0.8833333253860474, 0.8833333253860474, 0.8916666507720947, 0.8833333253860474, 0.8833333253860474]\n"]}]},{"cell_type":"markdown","metadata":{"id":"nYHLFnnSV-4E"},"source":["## Evalute Misclassification"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"9Fos9RhBWBUf","executionInfo":{"status":"ok","timestamp":1632213685293,"user_tz":-420,"elapsed":48,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"032fbe64-f119-478a-e043-af4aff0354d6"},"source":["ev_data_test = {'Text':text_str,\n","        'Act':decode_sentiment,\n","        'Pred':ev_classes}\n","df_final_ev = pd.DataFrame(ev_data_test)\n","df_final_ev"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>None None None None None None None None tempat...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>None None None None None None None None None l...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>290</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>291</th>\n","      <td>None None None None None None None ruang sauna...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>292</th>\n","      <td>None None ada jogging track mencakup area sung...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>293</th>\n","      <td>None None None None None None None None perala...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>295 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0    None None None None None None None None None N...    0     0\n","1    None None None None None None None None tempat...    0     0\n","2    None None None None None None None None None N...    1     1\n","3    None None None None None None None None None N...    1     1\n","4    None None None None None None None None None l...    1     1\n","..                                                 ...  ...   ...\n","290  None None None None None None None None None N...    1     1\n","291  None None None None None None None ruang sauna...    0     0\n","292  None None ada jogging track mencakup area sung...    1     1\n","293  None None None None None None None None perala...    1     1\n","294  None None None None None None None None None N...    1     1\n","\n","[295 rows x 3 columns]"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"vJ8ibOkiWDLF","executionInfo":{"status":"ok","timestamp":1632213685294,"user_tz":-420,"elapsed":47,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"991dd7ce-7509-4e77-aa32-dfcca9eac680"},"source":["remove_words = ['None']\n","pat = r'\\b(?:{})\\b'.format('|'.join(remove_words))\n","df_final_ev['Text'] = df_final_ev['Text'].str.replace(pat, '')\n","df_final_ev"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>kolam terlihat berantakan</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>tempat parkir outdoor mobil kepanasan</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>tempat lucu instagrammable</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>lobi baik interior</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>lingkungan asri penuh pepohonan</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>290</th>\n","      <td>ada jogging track</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>291</th>\n","      <td>ruang sauna kecil campur cowok cewek</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>292</th>\n","      <td>ada jogging track mencakup area sungai lemba...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>293</th>\n","      <td>peralatan fitness center cukup lengkap</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>hotel kesan eksklusif</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>295 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0                            kolam terlihat berantakan    0     0\n","1                tempat parkir outdoor mobil kepanasan    0     0\n","2                           tempat lucu instagrammable    1     1\n","3                                   lobi baik interior    1     1\n","4                      lingkungan asri penuh pepohonan    1     1\n","..                                                 ...  ...   ...\n","290                                  ada jogging track    1     1\n","291               ruang sauna kecil campur cowok cewek    0     0\n","292    ada jogging track mencakup area sungai lemba...    1     1\n","293             peralatan fitness center cukup lengkap    1     1\n","294                              hotel kesan eksklusif    1     1\n","\n","[295 rows x 3 columns]"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":917},"id":"Z8pYFnvhWGCE","executionInfo":{"status":"ok","timestamp":1632213685296,"user_tz":-420,"elapsed":46,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"3c4c085c-9ad9-48b6-a6be-3575f10aec52"},"source":["df_final_ev.query('Act != Pred')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>11</th>\n","      <td>ruang rapat minimalis pelit colokan lis...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>depan lift ada sampah bekas makanan kotak...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>lift tidak menggunakan sistem keamanan ...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>kolam renang tidak terawat ada keramik pec...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>hotel tidak ada fasilitas shuttle bandara...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>suasana hotel seperti tempat uji nyali r...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>terbangun suara musik lantai bawah keras</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>tempat bermain anak kurang</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>tingkatkan suasana kolam renang fasilit...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>fasilitas olahraga minimalis kolam renan...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>tropical hotel</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>fasilitas minim pintu ditempel stiker ja...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>tidak ada fasilitas kolam renang</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>155</th>\n","      <td>suara musik rooftop bar tengah malam ter...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>kolam renang air hangat renang malam enak</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>172</th>\n","      <td>hanya ada satu handsanitizer</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>174</th>\n","      <td>wifi lancar waktu tertentu putus sendiri</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>harus cobain naik grab wheels pembayaran...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>186</th>\n","      <td>kolam renang hanya ada dua tempat duduk</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>tidak ada kids play area</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>pilihan mainan playground kurang</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>218</th>\n","      <td>kolam renang banyak kaporit</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>hotel melestarikan budaya jawa ruangan di...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>234</th>\n","      <td>kebersihan hotel memuaskan</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>mini bar berbunyi berisik</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>262</th>\n","      <td>fasilitas sport center alat tua</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>268</th>\n","      <td>hanya ada fasilitas water sport</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>279</th>\n","      <td>karpet hotel debu</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","11          ruang rapat minimalis pelit colokan lis...    0     1\n","17        depan lift ada sampah bekas makanan kotak...    0     1\n","23          lift tidak menggunakan sistem keamanan ...    0     1\n","40       kolam renang tidak terawat ada keramik pec...    0     1\n","42        hotel tidak ada fasilitas shuttle bandara...    0     1\n","45         suasana hotel seperti tempat uji nyali r...    0     1\n","47            terbangun suara musik lantai bawah keras    0     1\n","53                          tempat bermain anak kurang    0     1\n","54          tingkatkan suasana kolam renang fasilit...    0     1\n","56         fasilitas olahraga minimalis kolam renan...    0     1\n","89                                      tropical hotel    1     0\n","94         fasilitas minim pintu ditempel stiker ja...    0     1\n","125                   tidak ada fasilitas kolam renang    0     1\n","155        suara musik rooftop bar tengah malam ter...    0     1\n","163          kolam renang air hangat renang malam enak    1     0\n","172                       hanya ada satu handsanitizer    0     1\n","174           wifi lancar waktu tertentu putus sendiri    0     1\n","175        harus cobain naik grab wheels pembayaran...    1     0\n","186            kolam renang hanya ada dua tempat duduk    0     1\n","213                           tidak ada kids play area    0     1\n","214                   pilihan mainan playground kurang    0     1\n","218                        kolam renang banyak kaporit    0     1\n","233       hotel melestarikan budaya jawa ruangan di...    1     0\n","234                         kebersihan hotel memuaskan    1     0\n","248                          mini bar berbunyi berisik    0     1\n","262                    fasilitas sport center alat tua    0     1\n","268                    hanya ada fasilitas water sport    0     1\n","279                                  karpet hotel debu    0     1"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ysi9GquVWHze","executionInfo":{"status":"ok","timestamp":1632213685298,"user_tz":-420,"elapsed":46,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"07a1a1fb-d0b1-472d-c87b-282ef256eda3"},"source":["len(df_final_ev.query('Act != Pred'))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28"]},"metadata":{},"execution_count":77}]},{"cell_type":"markdown","metadata":{"id":"gL_nKY0wO_YJ"},"source":["# Testing"]},{"cell_type":"code","metadata":{"id":"f1muUqrbPCfN","executionInfo":{"status":"ok","timestamp":1632299243851,"user_tz":-420,"elapsed":681,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["model = load_model('/content/drive/My Drive/Thesis/Code/FixModel2/cnn_sentiment_hotel_0.915.h5')\n","labels=[\"negative\",\"positive\"]"],"execution_count":42,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"id":"Rzl5rVUCQIwa","executionInfo":{"status":"ok","timestamp":1632299403111,"user_tz":-420,"elapsed":693,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"4c950014-ddcf-491a-d7b0-047f7f7757af"},"source":["df_test = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/result_test.xlsx')\n","df_hotel = df_test[df_test[\"used aspect\"]==\"hotel\"]\n","df_hotel"],"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>42</th>\n","      <td>2020-01-15</td>\n","      <td>284</td>\n","      <td>tidak_suka minim tempat parkir</td>\n","      <td>tiket</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.6292062997817993, 0.27784889936447144]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>2020-12-10</td>\n","      <td>134</td>\n","      <td>ada handsanitizer lobi resepsionis lift</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.9993940591812134, 0.0004976145573891699]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>2021-02-16</td>\n","      <td>118</td>\n","      <td>ada tempat sholat</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.8432897329330444, 0.12992925941944122]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>2020-10-24</td>\n","      <td>359</td>\n","      <td>ada tempat sholat</td>\n","      <td>booking</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.8432897329330444, 0.12992925941944122]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>2020-10-24</td>\n","      <td>390</td>\n","      <td>ada tempat sholat</td>\n","      <td>agoda</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.8432897329330444, 0.12992925941944122]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>2020-12-17</td>\n","      <td>383</td>\n","      <td>minus tidak_ada kolam_renang</td>\n","      <td>agoda</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9805139899253845, 0.019123762845993042]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","    <tr>\n","      <th>188</th>\n","      <td>2021-01-29</td>\n","      <td>260</td>\n","      <td>tidak_ada smooking_room</td>\n","      <td>tiket</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9780238270759583, 0.011745338328182697]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>2020-12-19</td>\n","      <td>132</td>\n","      <td>tempat nyaman bersih</td>\n","      <td>traveloka</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.7341383099555969, 0.16490213572978973]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>2020-12-10</td>\n","      <td>134</td>\n","      <td>barang bawaan disinfektan sebelum masuk lobi</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.4754357933998108, 0.3623239994049072]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>2020-09-03</td>\n","      <td>176</td>\n","      <td>prokes dijalani hotel patut diberi jempol</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.9000836610794067, 0.08786259591579437]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows Ã— 13 columns</p>\n","</div>"],"text/plain":["       tanggal   id  ... true aspect used aspect\n","42  2020-01-15  284  ...       hotel       hotel\n","43  2020-12-10  134  ...       hotel       hotel\n","44  2021-02-16  118  ...       hotel       hotel\n","45  2020-10-24  359  ...       hotel       hotel\n","46  2020-10-24  390  ...       hotel       hotel\n","..         ...  ...  ...         ...         ...\n","187 2020-12-17  383  ...       hotel       hotel\n","188 2021-01-29  260  ...       hotel       hotel\n","189 2020-12-19  132  ...       hotel       hotel\n","190 2020-12-10  134  ...       hotel       hotel\n","191 2020-09-03  176  ...       hotel       hotel\n","\n","[150 rows x 13 columns]"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","metadata":{"id":"s2F-HrIUQJd6","executionInfo":{"status":"ok","timestamp":1632299406012,"user_tz":-420,"elapsed":734,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["data_test = df_hotel[\"text\"]\n","list_test = data_test.tolist()\n","\n","seq = tokenizer.texts_to_sequences(list_test)\n","padded = pad_sequences(seq, maxlen=max_seq_len)\n","pred = model.predict(padded)"],"execution_count":48,"outputs":[]},{"cell_type":"code","metadata":{"id":"RqhI01xTYO5n","executionInfo":{"status":"ok","timestamp":1632299406013,"user_tz":-420,"elapsed":12,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["y_test = []\n","for x in pred :\n","  y = labels[np.argmax(x)]\n","  # print(y)\n","  y_test += [y]"],"execution_count":49,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":725},"id":"Qya-hp73YRcO","executionInfo":{"status":"ok","timestamp":1632299406696,"user_tz":-420,"elapsed":694,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"9092f03a-2dab-4989-d170-0d9e4a88337c"},"source":["df_hotel[\"sentiment\"]=y_test\n","df_hotel"],"execution_count":50,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>42</th>\n","      <td>2020-01-15</td>\n","      <td>284</td>\n","      <td>tidak_suka minim tempat parkir</td>\n","      <td>tiket</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.6292062997817993, 0.27784889936447144]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>2020-12-10</td>\n","      <td>134</td>\n","      <td>ada handsanitizer lobi resepsionis lift</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.9993940591812134, 0.0004976145573891699]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>2021-02-16</td>\n","      <td>118</td>\n","      <td>ada tempat sholat</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.8432897329330444, 0.12992925941944122]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>2020-10-24</td>\n","      <td>359</td>\n","      <td>ada tempat sholat</td>\n","      <td>booking</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.8432897329330444, 0.12992925941944122]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>2020-10-24</td>\n","      <td>390</td>\n","      <td>ada tempat sholat</td>\n","      <td>agoda</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.8432897329330444, 0.12992925941944122]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>2020-12-17</td>\n","      <td>383</td>\n","      <td>minus tidak_ada kolam_renang</td>\n","      <td>agoda</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9805139899253845, 0.019123762845993042]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>188</th>\n","      <td>2021-01-29</td>\n","      <td>260</td>\n","      <td>tidak_ada smooking_room</td>\n","      <td>tiket</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9780238270759583, 0.011745338328182697]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>2020-12-19</td>\n","      <td>132</td>\n","      <td>tempat nyaman bersih</td>\n","      <td>traveloka</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.7341383099555969, 0.16490213572978973]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>2020-12-10</td>\n","      <td>134</td>\n","      <td>barang bawaan disinfektan sebelum masuk lobi</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.4754357933998108, 0.3623239994049072]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>2020-09-03</td>\n","      <td>176</td>\n","      <td>prokes dijalani hotel patut diberi jempol</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.9000836610794067, 0.08786259591579437]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows Ã— 14 columns</p>\n","</div>"],"text/plain":["       tanggal   id  ... used aspect sentiment\n","42  2020-01-15  284  ...       hotel  positive\n","43  2020-12-10  134  ...       hotel  positive\n","44  2021-02-16  118  ...       hotel  positive\n","45  2020-10-24  359  ...       hotel  positive\n","46  2020-10-24  390  ...       hotel  positive\n","..         ...  ...  ...         ...       ...\n","187 2020-12-17  383  ...       hotel  negative\n","188 2021-01-29  260  ...       hotel  negative\n","189 2020-12-19  132  ...       hotel  positive\n","190 2020-12-10  134  ...       hotel  negative\n","191 2020-09-03  176  ...       hotel  negative\n","\n","[150 rows x 14 columns]"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"RhQ0UqRbX4oF","executionInfo":{"status":"ok","timestamp":1632299510767,"user_tz":-420,"elapsed":524,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8ddd287e-6ac0-47ff-c163-b003ab635e4b"},"source":["df_hotel[100:]"],"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>142</th>\n","      <td>2020-01-11</td>\n","      <td>287</td>\n","      <td>tempat_parkir tidak_luas</td>\n","      <td>tiket</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9770822525024414, 0.01362623367458582]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>2020-08-12</td>\n","      <td>336</td>\n","      <td>lobi bagus</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>[0.9708387851715088, 0.010166887193918228]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>144</th>\n","      <td>2021-07-04</td>\n","      <td>405</td>\n","      <td>menyenangkan</td>\n","      <td>pegipegi</td>\n","      <td>restoran</td>\n","      <td>restoran, hotel</td>\n","      <td>restoran</td>\n","      <td>hotel</td>\n","      <td>restoran</td>\n","      <td>hotel</td>\n","      <td>[0.2254272997379303, 0.22509634494781494]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>2021-07-16</td>\n","      <td>373</td>\n","      <td>minus kolam_renang</td>\n","      <td>agoda</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9938799142837524, 0.005678737536072731]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>2020-12-17</td>\n","      <td>354</td>\n","      <td>minus tidak_ada kolam_renang</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9805139899253845, 0.019123762845993042]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>2020-11-30</td>\n","      <td>139</td>\n","      <td>parkir hotel luas</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.998976469039917, 0.0005361412186175585]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>2020-07-06</td>\n","      <td>11</td>\n","      <td>parkir luas</td>\n","      <td>pegipegi</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9451077580451965, 0.03605812042951584]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>2020-12-22</td>\n","      <td>129</td>\n","      <td>parkir luas</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9451077580451965, 0.03605810925364494]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>150</th>\n","      <td>2020-12-21</td>\n","      <td>130</td>\n","      <td>parkir luas</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9451077580451965, 0.03605810925364494]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>151</th>\n","      <td>2021-02-09</td>\n","      <td>259</td>\n","      <td>parkir luas</td>\n","      <td>tiket</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9451077580451965, 0.03605810925364494]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>2020-07-30</td>\n","      <td>338</td>\n","      <td>parkir luas</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9451077580451965, 0.03605810925364494]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>2020-08-14</td>\n","      <td>184</td>\n","      <td>parkir mobil luas</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.9930298924446106, 0.0024328979197889566]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>2020-08-21</td>\n","      <td>181</td>\n","      <td>parkir mobil sulit</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.9944041967391968, 0.0022505824454128742]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>155</th>\n","      <td>2020-11-26</td>\n","      <td>141</td>\n","      <td>parkir motor tidak_ada tempat tertutup</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9880444407463074, 0.007456454448401928]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>156</th>\n","      <td>2021-06-21</td>\n","      <td>321</td>\n","      <td>parkir sempit</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9752948880195618, 0.010983038693666458]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>157</th>\n","      <td>2020-08-04</td>\n","      <td>363</td>\n","      <td>parkir terbatas</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.953020453453064, 0.03330746293067932]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>158</th>\n","      <td>2020-08-04</td>\n","      <td>394</td>\n","      <td>parkir terbatas</td>\n","      <td>agoda</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.953020453453064, 0.03330746293067932]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>159</th>\n","      <td>2020-09-05</td>\n","      <td>329</td>\n","      <td>parkir tidak_nyaman</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.973414421081543, 0.009338577277958393]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>2021-02-16</td>\n","      <td>119</td>\n","      <td>pencegahan covid prokes baik</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.9327294826507568, 0.03470838442444801]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>161</th>\n","      <td>2020-12-21</td>\n","      <td>130</td>\n","      <td>perlu tambah kolam_renang</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9962052702903748, 0.0032766631338745356]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>2020-07-30</td>\n","      <td>338</td>\n","      <td>perlu tambah kolam_renang</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9962052702903748, 0.0032766631338745356]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>163</th>\n","      <td>2020-02-04</td>\n","      <td>368</td>\n","      <td>pertama masuk lobi wangi essential oil</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>[0.9399521946907043, 0.026859264820814133]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>2020-02-04</td>\n","      <td>401</td>\n","      <td>pertama masuk lobi wangi essential oil</td>\n","      <td>agoda</td>\n","      <td>hotel</td>\n","      <td>hotel, lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>[0.9399521946907043, 0.026859264820814133]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>2021-04-12</td>\n","      <td>89</td>\n","      <td>prokes oke</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.3050881326198578, 0.30086731910705566]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>2021-03-22</td>\n","      <td>108</td>\n","      <td>prokes oke lebih berasa aman</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.6215013265609741, 0.1749618500471115]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>167</th>\n","      <td>2021-04-06</td>\n","      <td>349</td>\n","      <td>ruangan fasilitas baik</td>\n","      <td>booking</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.8496869206428528, 0.14518529176712036]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>168</th>\n","      <td>2021-05-03</td>\n","      <td>83</td>\n","      <td>tempat nyaman bersih</td>\n","      <td>traveloka</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.7341383099555969, 0.16490213572978973]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>169</th>\n","      <td>2020-01-14</td>\n","      <td>404</td>\n","      <td>tidak_ada kolam</td>\n","      <td>agoda</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.6968899965286255, 0.2707408368587494]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>170</th>\n","      <td>2020-08-21</td>\n","      <td>334</td>\n","      <td>tidak_ada kolam_renang</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9642377495765686, 0.034894559532403946]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>171</th>\n","      <td>2020-02-29</td>\n","      <td>366</td>\n","      <td>tidak_ada kolam_renang</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9642377495765686, 0.034894559532403946]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>172</th>\n","      <td>2020-01-14</td>\n","      <td>372</td>\n","      <td>tidak_ada kolam_renang</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9642377495765686, 0.034894559532403946]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>2021-04-16</td>\n","      <td>86</td>\n","      <td>tidak_ada kolam_renang anak tidak_senang</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9996071457862854, 0.0003613009175751358]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>174</th>\n","      <td>2021-06-02</td>\n","      <td>78</td>\n","      <td>tidak_semua lubang pancuran keluar air terkada...</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9703430533409119, 0.025528015568852425]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>2020-08-19</td>\n","      <td>335</td>\n","      <td>wifi buruk</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>[0.9821361899375916, 0.010189407505095005]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>2020-08-19</td>\n","      <td>335</td>\n","      <td>wifi tidak_baik</td>\n","      <td>booking</td>\n","      <td>hotel</td>\n","      <td>hotel, lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>[0.995868444442749, 0.0019228331511840224]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>2020-09-01</td>\n","      <td>393</td>\n","      <td>terlihat megah</td>\n","      <td>agoda</td>\n","      <td>hotel</td>\n","      <td>hotel, lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>[0.7397746443748474, 0.10509686172008514]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>2020-12-17</td>\n","      <td>267</td>\n","      <td>tidak_ada parkir basement tempat teduh</td>\n","      <td>tiket</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9978813529014587, 0.0016716141253709793]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>2020-02-29</td>\n","      <td>399</td>\n","      <td>tidak_punya kolam_renang</td>\n","      <td>agoda</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9629422426223755, 0.02737150900065899]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>2020-02-17</td>\n","      <td>280</td>\n","      <td>wifi tidak_lancar</td>\n","      <td>tiket</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9986228942871094, 0.000533662736415863]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>181</th>\n","      <td>2020-12-22</td>\n","      <td>129</td>\n","      <td>sayang tidak_ada kolam_renang</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9756660461425781, 0.022459467872977257]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>182</th>\n","      <td>2020-11-29</td>\n","      <td>269</td>\n","      <td>bersih</td>\n","      <td>tiket</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.591877281665802, 0.24234266579151154]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>183</th>\n","      <td>2021-03-29</td>\n","      <td>351</td>\n","      <td>bersih</td>\n","      <td>booking</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.591877281665802, 0.24234266579151154]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>184</th>\n","      <td>2021-03-29</td>\n","      <td>380</td>\n","      <td>bersih</td>\n","      <td>agoda</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.591877281665802, 0.24234266579151154]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>185</th>\n","      <td>2021-06-14</td>\n","      <td>71</td>\n","      <td>bersih nyaman</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.5646729469299316, 0.20073319971561432]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>186</th>\n","      <td>2020-01-02</td>\n","      <td>291</td>\n","      <td>hanya hotel tidak_punya kolam_renang</td>\n","      <td>tiket</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9989894032478333, 0.0003767040907405317]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>2020-12-17</td>\n","      <td>383</td>\n","      <td>minus tidak_ada kolam_renang</td>\n","      <td>agoda</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9805139899253845, 0.019123762845993042]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>188</th>\n","      <td>2021-01-29</td>\n","      <td>260</td>\n","      <td>tidak_ada smooking_room</td>\n","      <td>tiket</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9780238270759583, 0.011745338328182697]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>2020-12-19</td>\n","      <td>132</td>\n","      <td>tempat nyaman bersih</td>\n","      <td>traveloka</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.7341383099555969, 0.16490213572978973]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>2020-12-10</td>\n","      <td>134</td>\n","      <td>barang bawaan disinfektan sebelum masuk lobi</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.4754357933998108, 0.3623239994049072]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>2020-09-03</td>\n","      <td>176</td>\n","      <td>prokes dijalani hotel patut diberi jempol</td>\n","      <td>traveloka</td>\n","      <td>hotel</td>\n","      <td>hotel, pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>hotel</td>\n","      <td>pelayanan</td>\n","      <td>[0.9000836610794067, 0.08786259591579437]</td>\n","      <td>hotel</td>\n","      <td>hotel</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       tanggal   id  ... used aspect sentiment\n","142 2020-01-11  287  ...       hotel  negative\n","143 2020-08-12  336  ...       hotel  positive\n","144 2021-07-04  405  ...       hotel  negative\n","145 2021-07-16  373  ...       hotel  negative\n","146 2020-12-17  354  ...       hotel  negative\n","147 2020-11-30  139  ...       hotel  positive\n","148 2020-07-06   11  ...       hotel  positive\n","149 2020-12-22  129  ...       hotel  positive\n","150 2020-12-21  130  ...       hotel  positive\n","151 2021-02-09  259  ...       hotel  positive\n","152 2020-07-30  338  ...       hotel  positive\n","153 2020-08-14  184  ...       hotel  positive\n","154 2020-08-21  181  ...       hotel  negative\n","155 2020-11-26  141  ...       hotel  negative\n","156 2021-06-21  321  ...       hotel  negative\n","157 2020-08-04  363  ...       hotel  negative\n","158 2020-08-04  394  ...       hotel  negative\n","159 2020-09-05  329  ...       hotel  negative\n","160 2021-02-16  119  ...       hotel  negative\n","161 2020-12-21  130  ...       hotel  positive\n","162 2020-07-30  338  ...       hotel  positive\n","163 2020-02-04  368  ...       hotel  positive\n","164 2020-02-04  401  ...       hotel  positive\n","165 2021-04-12   89  ...       hotel  negative\n","166 2021-03-22  108  ...       hotel  positive\n","167 2021-04-06  349  ...       hotel  positive\n","168 2021-05-03   83  ...       hotel  positive\n","169 2020-01-14  404  ...       hotel  negative\n","170 2020-08-21  334  ...       hotel  negative\n","171 2020-02-29  366  ...       hotel  negative\n","172 2020-01-14  372  ...       hotel  negative\n","173 2021-04-16   86  ...       hotel  negative\n","174 2021-06-02   78  ...       hotel  positive\n","175 2020-08-19  335  ...       hotel  negative\n","176 2020-08-19  335  ...       hotel  negative\n","177 2020-09-01  393  ...       hotel  negative\n","178 2020-12-17  267  ...       hotel  negative\n","179 2020-02-29  399  ...       hotel  negative\n","180 2020-02-17  280  ...       hotel  negative\n","181 2020-12-22  129  ...       hotel  negative\n","182 2020-11-29  269  ...       hotel  positive\n","183 2021-03-29  351  ...       hotel  positive\n","184 2021-03-29  380  ...       hotel  positive\n","185 2021-06-14   71  ...       hotel  positive\n","186 2020-01-02  291  ...       hotel  negative\n","187 2020-12-17  383  ...       hotel  negative\n","188 2021-01-29  260  ...       hotel  negative\n","189 2020-12-19  132  ...       hotel  positive\n","190 2020-12-10  134  ...       hotel  negative\n","191 2020-09-03  176  ...       hotel  negative\n","\n","[50 rows x 14 columns]"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","metadata":{"id":"kWxd1NSCY1QX","executionInfo":{"status":"ok","timestamp":1632299540009,"user_tz":-420,"elapsed":1473,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_result = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/all_result_test.xlsx')\n","df_append = df_result.append(df_hotel)\n","df_append.to_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/all_result_test.xlsx')"],"execution_count":54,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zpTIMsstVqu4"},"source":["# Draft"]},{"cell_type":"code","metadata":{"id":"JI9ZyHH-8cYY"},"source":["decode_sent = np.argmax(Y_test, axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JSlN5TIH8pCG"},"source":["lab_sent = [\"negatif\",\"positif\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MehYEqFrAUpc"},"source":["def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZTR8GOUa9TJb","executionInfo":{"status":"ok","timestamp":1625396629045,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"695ea5a8-17d2-4b6c-f2e3-5cd533bb5f1f"},"source":["conf_matrix(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x576 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kLeStDruKN9l","executionInfo":{"status":"ok","timestamp":1625396629767,"user_tz":-420,"elapsed":737,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"9111a0b9-6311-42d7-9c33-a95b2c8b5540"},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XgjzN7Zi9ZCI","executionInfo":{"status":"ok","timestamp":1625396629769,"user_tz":-420,"elapsed":24,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"0a5400c6-f7a6-46af-ac0f-62644427421e"},"source":["from sklearn.metrics import accuracy_score\n","accuracy_score(ev_sent, decode_sent)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8996763754045307"]},"metadata":{"tags":[]},"execution_count":148}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oKEJidKP9kSa","executionInfo":{"status":"ok","timestamp":1625396629770,"user_tz":-420,"elapsed":22,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"5116a55d-da0c-4863-f11e-ca146e9fc1ad"},"source":["from sklearn.metrics import classification_report\n","print(classification_report(ev_sent, decode_sent))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.90      0.90      0.90       152\n","           1       0.90      0.90      0.90       157\n","\n","    accuracy                           0.90       309\n","   macro avg       0.90      0.90      0.90       309\n","weighted avg       0.90      0.90      0.90       309\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V_4mHIBD9sM1","executionInfo":{"status":"ok","timestamp":1625396629771,"user_tz":-420,"elapsed":21,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"4fb6994d-bb66-4d00-a2dc-33007428bb19"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(ev_sent, decode_sent))\n","print('F1 score:', f1_score(ev_sent, decode_sent, average='macro'))\n","print('Recall:', recall_score(ev_sent, decode_sent, average='macro'))\n","print('Precision:', precision_score(ev_sent, decode_sent, average='macro'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy: 0.8996763754045307\n","F1 score: 0.8996595610956896\n","Recall: 0.8997024807241032\n","Precision: 0.8996354952237305\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8jzXTeea90VA","executionInfo":{"status":"ok","timestamp":1625396629773,"user_tz":-420,"elapsed":20,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"14239e4f-a282-451b-8daa-513e42801e4c"},"source":["plt.title('Loss')\n","plt.plot(history_BLSTM.history['loss'], label='train')\n","plt.plot(history_BLSTM.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YbTEzFpR9_pG","executionInfo":{"status":"ok","timestamp":1625396630291,"user_tz":-420,"elapsed":536,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"e877ee8c-76cb-45ac-ca75-b9129fe65972"},"source":["plt.title('Accuracy')\n","plt.plot(history_BLSTM.history['acc'], label='train')\n","plt.plot(history_BLSTM.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"_2M0YBAp-fYL"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1zAaGMepBh__"},"source":["## Testing"]},{"cell_type":"code","metadata":{"id":"fSIQ_K3rU9yj"},"source":["model = m_cnn\n","labels=[\"negative\",\"positive\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":202},"id":"DP_MLui3VBG8","executionInfo":{"status":"ok","timestamp":1625470074074,"user_tz":-420,"elapsed":23,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"2d7d5963-51aa-4330-981d-9cce9cea2f57"},"source":["df_testing = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/final_data_test.xlsx')\n","df_hotel = df_testing[df_testing[\"aspect\"]==\"hotel\"]\n","df_hotel.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>31</th>\n","      <td>2021-06-16</td>\n","      <td>4</td>\n","      <td>hotel nyaman</td>\n","      <td>pegipegi</td>\n","      <td>hotel</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2021-06-02</td>\n","      <td>6</td>\n","      <td>fasilitas oke</td>\n","      <td>pegipegi</td>\n","      <td>hotel</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2021-06-01</td>\n","      <td>7</td>\n","      <td>hotel nyaman menginap bersih</td>\n","      <td>pegipegi</td>\n","      <td>hotel</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>2020-07-06</td>\n","      <td>11</td>\n","      <td>parkir luas</td>\n","      <td>pegipegi</td>\n","      <td>hotel</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>2020-02-11</td>\n","      <td>16</td>\n","      <td>hotel nyaman</td>\n","      <td>pegipegi</td>\n","      <td>hotel</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      tanggal  id                          text  ... sentiment Unnamed: 6 Unnamed: 7\n","31 2021-06-16   4                  hotel nyaman  ...       NaN        NaN        NaN\n","32 2021-06-02   6                 fasilitas oke  ...       NaN        NaN        NaN\n","33 2021-06-01   7  hotel nyaman menginap bersih  ...       NaN        NaN        NaN\n","34 2020-07-06  11                   parkir luas  ...       NaN        NaN        NaN\n","35 2020-02-11  16                  hotel nyaman  ...       NaN        NaN        NaN\n","\n","[5 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":376}]},{"cell_type":"code","metadata":{"id":"LkRA9fxYVEU5"},"source":["data_test = df_hotel[\"text\"]\n","list_test = data_test.tolist()\n","\n","seq = tokenizer.texts_to_sequences(list_test)\n","padded = pad_sequences(seq, maxlen=max_seq_len)\n","pred = model.predict(padded)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RpVQci6uMHeQ","executionInfo":{"status":"ok","timestamp":1625470074561,"user_tz":-420,"elapsed":504,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"1cbd7e02-8934-4f8d-880f-cacfec9b12e7"},"source":["y_test = []\n","for x in pred :\n","  y = labels[np.argmax(x)]\n","  print(y)\n","  y_test += [y]"],"execution_count":null,"outputs":[{"output_type":"stream","text":["positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","negative\n","negative\n","negative\n","positive\n","negative\n","negative\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","negative\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","negative\n","negative\n","positive\n","negative\n","negative\n","positive\n","positive\n","positive\n","negative\n","negative\n","negative\n","negative\n","negative\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","negative\n","negative\n","negative\n","positive\n","positive\n","negative\n","negative\n","positive\n","negative\n","positive\n","positive\n","negative\n","positive\n","positive\n","positive\n","negative\n","negative\n","positive\n","negative\n","positive\n","negative\n","positive\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XdmS53mmMKfS"},"source":[""],"execution_count":null,"outputs":[]}]}