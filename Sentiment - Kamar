{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Sentiment - Kamar","provenance":[],"collapsed_sections":["jCh20tTkBoF-","Jkk7TrKBAous","cBwwrNpv-0_2","DcM4p2ImTLdL","f_XeLWSjTX9o","xTG40dBOAxrH","DHTDUWbYA2wP","4cvyCrSDA7al","CNQOwZDkBB2R","Iy8nWxe6BHYF","uroMA0JNBNT1","EJ64PtWnBddd","zPwLMWNYYk3w","22PEULFJYs9X","-JHCbYg-YYvL","1zAaGMepBh__"],"mount_file_id":"1jHuDvxeFSUuy2-PlQY_JCpa2IBt38M9S","authorship_tag":"ABX9TyMZ+jZhheyuD5YBcwPqT42Y"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"2-qyyxYZSMyF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299934303,"user_tz":-420,"elapsed":3053,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"10d7acff-ee66-41c8-c692-0a1196f90dd2"},"source":["import keras\n","import numpy as np\n","import pandas as pd\n","import openpyxl\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","from keras.models import load_model\n","from nltk.corpus import stopwords\n","from nltk.tokenize import word_tokenize\n","import unicodedata\n","from collections import Counter\n","from imblearn.under_sampling import RandomUnderSampler\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","import warnings\n","import tensorflow as tf\n","warnings.simplefilter(action='ignore', category=FutureWarning)\n","np.random.seed(0)"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/externals/six.py:31: FutureWarning: The module is deprecated in version 0.21 and will be removed in version 0.23 since we've dropped support for Python 2.7. Please rely on the official version of six (https://pypi.org/project/six/).\n","  \"(https://pypi.org/project/six/).\", FutureWarning)\n","/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.base module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.\n","  warnings.warn(message, FutureWarning)\n"]}]},{"cell_type":"markdown","metadata":{"id":"jCh20tTkBoF-"},"source":["# Data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"N7fAJvKISNR2","executionInfo":{"status":"ok","timestamp":1632299936565,"user_tz":-420,"elapsed":2282,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"2ea16590-f18c-4c5f-a2fa-9536c2fa4e45"},"source":["df = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/data_training.xlsx', usecols=[\"clean text\",\"aspect\",\"sentiment\"])\n","df.head()"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 clean text aspect sentiment\n","0  shuttle gratis malioboro  harga  positive\n","1  dapat gratis course golf  harga  positive\n","2    gratis andong keliling  harga  positive\n","3              sesuai harga  harga  positive\n","4          harga terjangkau  harga  positive"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"wLSH6SnfSUsk","executionInfo":{"status":"ok","timestamp":1632299936567,"user_tz":-420,"elapsed":42,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df = df.drop_duplicates()"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"KQ-Ft7mQSXwt","executionInfo":{"status":"ok","timestamp":1632299936569,"user_tz":-420,"elapsed":42,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"139521d3-f2ae-4ce2-f20d-57b88e7416e7"},"source":["df = df.dropna()\n","df.reset_index(drop=True)"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5653</th>\n","      <td>staff jutek bentak_bentak marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5654</th>\n","      <td>staff mengatur parkir marah_marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5655</th>\n","      <td>sajian sarapan lambat refill</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5656</th>\n","      <td>tidak_ada prokes terjaga tidak_ada social_dist...</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5657</th>\n","      <td>staff tidak_ramah tidak_paham sop</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5658 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                             clean text     aspect sentiment\n","0                              shuttle gratis malioboro      harga  positive\n","1                              dapat gratis course golf      harga  positive\n","2                                gratis andong keliling      harga  positive\n","3                                          sesuai harga      harga  positive\n","4                                      harga terjangkau      harga  positive\n","...                                                 ...        ...       ...\n","5653                    staff jutek bentak_bentak marah  pelayanan  negative\n","5654                  staff mengatur parkir marah_marah  pelayanan  negative\n","5655                       sajian sarapan lambat refill  pelayanan  negative\n","5656  tidak_ada prokes terjaga tidak_ada social_dist...  pelayanan  negative\n","5657                  staff tidak_ramah tidak_paham sop  pelayanan  negative\n","\n","[5658 rows x 3 columns]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6DUF0jjkSZa4","executionInfo":{"status":"ok","timestamp":1632299936570,"user_tz":-420,"elapsed":40,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"e7ee2bf2-9e18-4089-cda3-8eb56a6d8722"},"source":["df.sentiment.value_counts()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["positive    2905\n","negative    2753\n","Name: sentiment, dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"SmH2XLrJSa6a","executionInfo":{"status":"ok","timestamp":1632299936573,"user_tz":-420,"elapsed":41,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_train = df.sample(frac = 1) #shuffle"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"Hk9ggR7JScx9","executionInfo":{"status":"ok","timestamp":1632299936575,"user_tz":-420,"elapsed":41,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# clean_text = df_train[[\"clean text\",\"aspect\",\"sentiment\"]]\n","# wo_punc_text = df_train[\"text_wo_punc\"]\n","# wo_neg_text = df_train[\"text_wo_neg\"]\n","# stemming = df_train[\"stemming\"]\n","# label = df_train[\"sentiment\"]"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"I2cy3RgtKHi4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299936577,"user_tz":-420,"elapsed":42,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"951f2a85-0324-4b91-ba92-07de19f071c5"},"source":["t = df_train[df_train[\"aspect\"]==\"kamar\"]\n","text = t[\"clean text\"] \n","label = t[\"sentiment\"]\n","print(t)"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["                                             clean text aspect sentiment\n","3906                       air kamar_mandi tidak_jernih  kamar  negative\n","959                                    kamar rapi wangi  kamar  positive\n","1114  kamar ada ruang_tamu sofa ruang_makan kulkas m...  kamar  positive\n","1029                                kamar jendela besar  kamar  positive\n","4074                    sprei bau seperti tidak_diganti  kamar  negative\n","...                                                 ...    ...       ...\n","3984                     ada kotoran burung depan kamar  kamar  negative\n","4052  kamar hanya sarung bantal kekecilan bantal keluar  kamar  negative\n","4114  buka pintu_kamar teknik tertentu tidak_bisa di...  kamar  negative\n","1223                                ruangan kamar wangi  kamar  positive\n","1048                                      toilet bersih  kamar  positive\n","\n","[956 rows x 3 columns]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"zzu8EeFX2kHN","executionInfo":{"status":"ok","timestamp":1632299936578,"user_tz":-420,"elapsed":40,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"81a3e2ab-f615-485e-af5f-689734e81f70"},"source":["t.sentiment.value_counts().plot(kind='bar', title='Count (target)');\n","print(t.sentiment.value_counts())"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["negative    526\n","positive    430\n","Name: sentiment, dtype: int64\n"]},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"Wq6wLNiOSfP3"},"source":["# Modelling"]},{"cell_type":"markdown","metadata":{"id":"Jkk7TrKBAous"},"source":["## Neural Network"]},{"cell_type":"markdown","metadata":{"id":"cBwwrNpv-0_2"},"source":["### Var"]},{"cell_type":"code","metadata":{"id":"7Iqx73ywSepp","executionInfo":{"status":"ok","timestamp":1632299936579,"user_tz":-420,"elapsed":38,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from tensorflow.keras.models import Sequential, Model\n","from tensorflow.keras.layers import Activation, GlobalAveragePooling1D, GlobalMaxPooling1D, BatchNormalization, Concatenate, Input, Embedding\n","from tensorflow.keras.layers import SimpleRNN, GRU, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, SpatialDropout1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras import initializers, regularizers, constraints, optimizers, layers\n","from tensorflow.keras.regularizers import l2\n","import keras.backend as K\n","import os\n","from keras import callbacks"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"gI1ZfnnBthCz","executionInfo":{"status":"ok","timestamp":1632299936581,"user_tz":-420,"elapsed":39,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["earlystopping = callbacks.EarlyStopping(monitor =\"val_loss\", \n","                                        mode =\"min\", patience = 5, \n","                                        restore_best_weights = True)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_BOmSXv1TEG2","executionInfo":{"status":"ok","timestamp":1632299939718,"user_tz":-420,"elapsed":3175,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"f591175a-b064-4f45-f68c-5d31fec9972f"},"source":["pip install keras_self_attention"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: keras_self_attention in /usr/local/lib/python3.7/dist-packages (0.50.0)\n","Requirement already satisfied: Keras in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (2.6.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (1.19.5)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1A0quJ_fTGeY","executionInfo":{"status":"ok","timestamp":1632299939720,"user_tz":-420,"elapsed":23,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"e4143404-2624-40bc-8c49-fb634daf0851"},"source":["max_features =20000\n","tokenizer = Tokenizer() \n","tokenizer.fit_on_texts(text.values) \n","max_seq_len = max([len(i.split()) for i in text])\n","\n","X = tokenizer.texts_to_sequences(text.values)\n","X = pad_sequences(X, maxlen=max_seq_len)\n","Y = pd.get_dummies(label).values\n","print(\"Shape of data tensor:\", X.shape)\n","print(\"Shape of label tensor:\",Y.shape)"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of data tensor: (956, 13)\n","Shape of label tensor: (956, 2)\n"]}]},{"cell_type":"code","metadata":{"id":"Q6s50objTIlr","executionInfo":{"status":"ok","timestamp":1632299939723,"user_tz":-420,"elapsed":23,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.33, random_state = 1)"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"q9WgthpgNToG","executionInfo":{"status":"ok","timestamp":1632299939724,"user_tz":-420,"elapsed":23,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["unit = 100\n","dropout = 0.1\n","batch = 128\n","epoch = 100\n","output = 100"],"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DcM4p2ImTLdL"},"source":["### RNN"]},{"cell_type":"code","metadata":{"id":"oBV6f8FETKtp","executionInfo":{"status":"ok","timestamp":1632299939725,"user_tz":-420,"elapsed":23,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_rnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_rnn = Sequential()\n","  model_rnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_rnn.add(Dense(32, activation='relu'))\n","  model_rnn.add(SpatialDropout1D(dropout))\n","  model_rnn.add(SimpleRNN(unit))\n","  model_rnn.add(Dense(2, activation='sigmoid'))\n","  model_rnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_rnn.summary())\n","\n","  return model_rnn"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fiBDUCglTQJn","executionInfo":{"status":"ok","timestamp":1632299943186,"user_tz":-420,"elapsed":3483,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6ce7b718-a9c1-47b9-fbcb-4beaeb08e83b"},"source":["m_rnn = get_model_rnn(X_train, Y_train)\n","history_RNN = m_rnn.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 13, 100)           86300     \n","_________________________________________________________________\n","spatial_dropout1d (SpatialDr (None, 13, 100)           0         \n","_________________________________________________________________\n","simple_rnn (SimpleRNN)       (None, 100)               20100     \n","_________________________________________________________________\n","dense (Dense)                (None, 2)                 202       \n","=================================================================\n","Total params: 106,602\n","Trainable params: 106,602\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 1s 107ms/step - loss: 0.6907 - acc: 0.5332 - val_loss: 0.6933 - val_acc: 0.5312\n","Epoch 2/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.6553 - acc: 0.5859 - val_loss: 0.6726 - val_acc: 0.5312\n","Epoch 3/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.6209 - acc: 0.6289 - val_loss: 0.6476 - val_acc: 0.5859\n","Epoch 4/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.5769 - acc: 0.8730 - val_loss: 0.6113 - val_acc: 0.6641\n","Epoch 5/100\n","4/4 [==============================] - 0s 20ms/step - loss: 0.5234 - acc: 0.7832 - val_loss: 0.5621 - val_acc: 0.7734\n","Epoch 6/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.4674 - acc: 0.8711 - val_loss: 0.5382 - val_acc: 0.7031\n","Epoch 7/100\n","4/4 [==============================] - 0s 20ms/step - loss: 0.3949 - acc: 0.8789 - val_loss: 0.4865 - val_acc: 0.8359\n","Epoch 8/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.3261 - acc: 0.9473 - val_loss: 0.4249 - val_acc: 0.8516\n","Epoch 9/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.2657 - acc: 0.9219 - val_loss: 0.3683 - val_acc: 0.8203\n","Epoch 10/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.2114 - acc: 0.9473 - val_loss: 0.3650 - val_acc: 0.8672\n","Epoch 11/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.1640 - acc: 0.9688 - val_loss: 0.3178 - val_acc: 0.8438\n","Epoch 12/100\n","4/4 [==============================] - 0s 20ms/step - loss: 0.1273 - acc: 0.9785 - val_loss: 0.3101 - val_acc: 0.8750\n","Epoch 13/100\n","4/4 [==============================] - 0s 19ms/step - loss: 0.1029 - acc: 0.9844 - val_loss: 0.3162 - val_acc: 0.8828\n","Epoch 14/100\n","4/4 [==============================] - 0s 20ms/step - loss: 0.0836 - acc: 0.9844 - val_loss: 0.3299 - val_acc: 0.8672\n","Epoch 15/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0676 - acc: 0.9922 - val_loss: 0.3108 - val_acc: 0.8672\n","Epoch 16/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0544 - acc: 0.9961 - val_loss: 0.3099 - val_acc: 0.8750\n","Epoch 17/100\n","4/4 [==============================] - 0s 20ms/step - loss: 0.0450 - acc: 0.9961 - val_loss: 0.3063 - val_acc: 0.8828\n","Epoch 18/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0360 - acc: 0.9980 - val_loss: 0.2952 - val_acc: 0.8750\n","Epoch 19/100\n","4/4 [==============================] - 0s 20ms/step - loss: 0.0309 - acc: 1.0000 - val_loss: 0.3018 - val_acc: 0.8906\n","Epoch 20/100\n","4/4 [==============================] - 0s 20ms/step - loss: 0.0288 - acc: 0.9980 - val_loss: 0.3101 - val_acc: 0.8828\n","Epoch 21/100\n","4/4 [==============================] - 0s 19ms/step - loss: 0.0241 - acc: 1.0000 - val_loss: 0.3064 - val_acc: 0.8906\n","Epoch 22/100\n","4/4 [==============================] - 0s 20ms/step - loss: 0.0212 - acc: 1.0000 - val_loss: 0.3085 - val_acc: 0.8828\n","Epoch 23/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0188 - acc: 1.0000 - val_loss: 0.3027 - val_acc: 0.8828\n"]}]},{"cell_type":"code","metadata":{"id":"Rc0j9TxoTR-A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299944021,"user_tz":-420,"elapsed":879,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"efc80b71-5e95-46d3-a428-1c93b9c11418"},"source":["score,acc_rnn = m_rnn.evaluate(X_test, Y_test)"],"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 3ms/step - loss: 0.3371 - acc: 0.8734\n"]}]},{"cell_type":"code","metadata":{"id":"jWN9Q8QuTVXR","executionInfo":{"status":"ok","timestamp":1632299944023,"user_tz":-420,"elapsed":138,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_rnn.save('/content/drive/My Drive/Thesis/Code/Model/rnn_sentiment_model.h5')"],"execution_count":19,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"f_XeLWSjTX9o"},"source":["### GRU"]},{"cell_type":"code","metadata":{"id":"2zuM2gB8TXN8","executionInfo":{"status":"ok","timestamp":1632299944033,"user_tz":-420,"elapsed":128,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_gru(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_gru = Sequential()\n","  model_gru.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_gru.add(Dense(32, activation='relu'))\n","  model_gru.add(SpatialDropout1D(dropout))\n","  model_gru.add(GRU(unit))\n","  model_gru.add(Dense(2, activation='sigmoid'))\n","  model_gru.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_gru.summary())\n","\n","  return model_gru"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"iYLfLwNYTehH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299951493,"user_tz":-420,"elapsed":7532,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"1f80c5fb-03c8-474b-b0db-502b42067203"},"source":["m_gru = get_model_gru(X_train, Y_train)\n","history_GRU = m_gru.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_1 (Embedding)      (None, 13, 100)           86300     \n","_________________________________________________________________\n","spatial_dropout1d_1 (Spatial (None, 13, 100)           0         \n","_________________________________________________________________\n","gru (GRU)                    (None, 100)               60600     \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 147,102\n","Trainable params: 147,102\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 2s 176ms/step - loss: 0.6897 - acc: 0.6094 - val_loss: 0.6881 - val_acc: 0.5391\n","Epoch 2/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.6773 - acc: 0.5723 - val_loss: 0.6807 - val_acc: 0.5312\n","Epoch 3/100\n","4/4 [==============================] - 0s 44ms/step - loss: 0.6601 - acc: 0.5703 - val_loss: 0.6708 - val_acc: 0.5312\n","Epoch 4/100\n","4/4 [==============================] - 0s 43ms/step - loss: 0.6359 - acc: 0.5703 - val_loss: 0.6577 - val_acc: 0.5312\n","Epoch 5/100\n","4/4 [==============================] - 0s 44ms/step - loss: 0.5997 - acc: 0.5879 - val_loss: 0.6271 - val_acc: 0.5781\n","Epoch 6/100\n","4/4 [==============================] - 0s 44ms/step - loss: 0.5433 - acc: 0.7051 - val_loss: 0.5693 - val_acc: 0.6953\n","Epoch 7/100\n","4/4 [==============================] - 0s 42ms/step - loss: 0.4557 - acc: 0.8848 - val_loss: 0.4875 - val_acc: 0.8281\n","Epoch 8/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.3550 - acc: 0.9414 - val_loss: 0.4101 - val_acc: 0.8281\n","Epoch 9/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.2759 - acc: 0.9355 - val_loss: 0.3611 - val_acc: 0.8594\n","Epoch 10/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.2385 - acc: 0.9219 - val_loss: 0.3309 - val_acc: 0.8438\n","Epoch 11/100\n","4/4 [==============================] - 0s 43ms/step - loss: 0.1981 - acc: 0.9414 - val_loss: 0.3119 - val_acc: 0.8828\n","Epoch 12/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.1396 - acc: 0.9766 - val_loss: 0.2915 - val_acc: 0.9219\n","Epoch 13/100\n","4/4 [==============================] - 0s 44ms/step - loss: 0.1225 - acc: 0.9805 - val_loss: 0.2796 - val_acc: 0.9219\n","Epoch 14/100\n","4/4 [==============================] - 0s 43ms/step - loss: 0.0969 - acc: 0.9902 - val_loss: 0.2692 - val_acc: 0.9219\n","Epoch 15/100\n","4/4 [==============================] - 0s 50ms/step - loss: 0.0797 - acc: 0.9883 - val_loss: 0.2615 - val_acc: 0.8984\n","Epoch 16/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.0637 - acc: 0.9922 - val_loss: 0.2505 - val_acc: 0.9219\n","Epoch 17/100\n","4/4 [==============================] - 0s 44ms/step - loss: 0.0516 - acc: 0.9961 - val_loss: 0.2459 - val_acc: 0.8984\n","Epoch 18/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.0421 - acc: 1.0000 - val_loss: 0.2424 - val_acc: 0.8984\n","Epoch 19/100\n","4/4 [==============================] - 0s 44ms/step - loss: 0.0361 - acc: 1.0000 - val_loss: 0.2400 - val_acc: 0.9062\n","Epoch 20/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.0292 - acc: 1.0000 - val_loss: 0.2386 - val_acc: 0.9062\n","Epoch 21/100\n","4/4 [==============================] - 0s 44ms/step - loss: 0.0260 - acc: 1.0000 - val_loss: 0.2376 - val_acc: 0.8984\n","Epoch 22/100\n","4/4 [==============================] - 0s 44ms/step - loss: 0.0226 - acc: 1.0000 - val_loss: 0.2397 - val_acc: 0.8828\n","Epoch 23/100\n","4/4 [==============================] - 0s 43ms/step - loss: 0.0185 - acc: 1.0000 - val_loss: 0.2367 - val_acc: 0.8984\n","Epoch 24/100\n","4/4 [==============================] - 0s 42ms/step - loss: 0.0161 - acc: 1.0000 - val_loss: 0.2346 - val_acc: 0.9062\n","Epoch 25/100\n","4/4 [==============================] - 0s 43ms/step - loss: 0.0137 - acc: 1.0000 - val_loss: 0.2337 - val_acc: 0.9062\n","Epoch 26/100\n","4/4 [==============================] - 0s 51ms/step - loss: 0.0121 - acc: 1.0000 - val_loss: 0.2330 - val_acc: 0.8984\n","Epoch 27/100\n","4/4 [==============================] - 0s 42ms/step - loss: 0.0104 - acc: 1.0000 - val_loss: 0.2331 - val_acc: 0.8984\n","Epoch 28/100\n","4/4 [==============================] - 0s 43ms/step - loss: 0.0095 - acc: 1.0000 - val_loss: 0.2338 - val_acc: 0.8984\n","Epoch 29/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.0080 - acc: 1.0000 - val_loss: 0.2349 - val_acc: 0.9062\n","Epoch 30/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.0067 - acc: 1.0000 - val_loss: 0.2371 - val_acc: 0.9141\n","Epoch 31/100\n","4/4 [==============================] - 0s 43ms/step - loss: 0.0061 - acc: 1.0000 - val_loss: 0.2407 - val_acc: 0.9062\n"]}]},{"cell_type":"code","metadata":{"id":"l9uQanamTf88","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299956349,"user_tz":-420,"elapsed":4864,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0fb83786-f9a4-4978-e7ef-d9bd04cc1352"},"source":["score,acc_gru = m_gru.evaluate(X_test, Y_test)"],"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 5ms/step - loss: 0.3290 - acc: 0.9019\n"]}]},{"cell_type":"code","metadata":{"id":"cOS5Ff2ZTkEX","executionInfo":{"status":"ok","timestamp":1632299956350,"user_tz":-420,"elapsed":27,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_gru.save('/content/drive/My Drive/Thesis/Code/FixModel/gru_sentiment_kamar.h5')"],"execution_count":23,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hcWT_dKBTmvQ"},"source":["### LSTM"]},{"cell_type":"code","metadata":{"id":"3wX4AVxuTo4H","executionInfo":{"status":"ok","timestamp":1632299956351,"user_tz":-420,"elapsed":26,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_LSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_LSTM = Sequential()\n","  model_LSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_LSTM.add(Dense(32, activation='relu'))\n","  model_LSTM.add(SpatialDropout1D(dropout))\n","  model_LSTM.add(LSTM(unit))\n","  model_LSTM.add(Dense(2, activation='sigmoid'))\n","  model_LSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_LSTM.summary())\n","  \n","  return model_LSTM"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"GN-idepNTrNu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299962671,"user_tz":-420,"elapsed":6345,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"fd14d8cd-b1e4-468b-ed44-0ea57fb0266d"},"source":["m_lstm = get_model_LSTM(X_train, Y_train)\n","history_LSTM = m_lstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_2 (Embedding)      (None, 13, 100)           86300     \n","_________________________________________________________________\n","spatial_dropout1d_2 (Spatial (None, 13, 100)           0         \n","_________________________________________________________________\n","lstm (LSTM)                  (None, 100)               80400     \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 166,902\n","Trainable params: 166,902\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 2s 186ms/step - loss: 0.6899 - acc: 0.5664 - val_loss: 0.6887 - val_acc: 0.5312\n","Epoch 2/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.6802 - acc: 0.5703 - val_loss: 0.6860 - val_acc: 0.5312\n","Epoch 3/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.6670 - acc: 0.5703 - val_loss: 0.6827 - val_acc: 0.5312\n","Epoch 4/100\n","4/4 [==============================] - 0s 51ms/step - loss: 0.6536 - acc: 0.5742 - val_loss: 0.6709 - val_acc: 0.5391\n","Epoch 5/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.6332 - acc: 0.5918 - val_loss: 0.6464 - val_acc: 0.5703\n","Epoch 6/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.5994 - acc: 0.6641 - val_loss: 0.6192 - val_acc: 0.6250\n","Epoch 7/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.5499 - acc: 0.7051 - val_loss: 0.5795 - val_acc: 0.6406\n","Epoch 8/100\n","4/4 [==============================] - 0s 52ms/step - loss: 0.4862 - acc: 0.7227 - val_loss: 0.5214 - val_acc: 0.7109\n","Epoch 9/100\n","4/4 [==============================] - 0s 48ms/step - loss: 0.4200 - acc: 0.9062 - val_loss: 0.4600 - val_acc: 0.8828\n","Epoch 10/100\n","4/4 [==============================] - 0s 50ms/step - loss: 0.3487 - acc: 0.9023 - val_loss: 0.4165 - val_acc: 0.8438\n","Epoch 11/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.2983 - acc: 0.9395 - val_loss: 0.3765 - val_acc: 0.9062\n","Epoch 12/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.2630 - acc: 0.9590 - val_loss: 0.3470 - val_acc: 0.8906\n","Epoch 13/100\n","4/4 [==============================] - 0s 55ms/step - loss: 0.2353 - acc: 0.9629 - val_loss: 0.3278 - val_acc: 0.9141\n","Epoch 14/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.1840 - acc: 0.9668 - val_loss: 0.3167 - val_acc: 0.8984\n","Epoch 15/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.1591 - acc: 0.9727 - val_loss: 0.2929 - val_acc: 0.8828\n","Epoch 16/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.1230 - acc: 0.9863 - val_loss: 0.2763 - val_acc: 0.8828\n","Epoch 17/100\n","4/4 [==============================] - 0s 55ms/step - loss: 0.0909 - acc: 0.9824 - val_loss: 0.2814 - val_acc: 0.8750\n","Epoch 18/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.0646 - acc: 0.9902 - val_loss: 0.3003 - val_acc: 0.8672\n","Epoch 19/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.0512 - acc: 0.9902 - val_loss: 0.2806 - val_acc: 0.8672\n","Epoch 20/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.0329 - acc: 0.9941 - val_loss: 0.2923 - val_acc: 0.8828\n","Epoch 21/100\n","4/4 [==============================] - 0s 48ms/step - loss: 0.0263 - acc: 0.9980 - val_loss: 0.2819 - val_acc: 0.8906\n"]}]},{"cell_type":"code","metadata":{"id":"GFNUlAeVTsiT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299963371,"user_tz":-420,"elapsed":721,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"244f7841-ac91-454c-ce7e-f843a0a80199"},"source":["score,acc_lstm = m_lstm.evaluate(X_test, Y_test)"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 5ms/step - loss: 0.3477 - acc: 0.8861\n"]}]},{"cell_type":"code","metadata":{"id":"DNaWHiB8Tuva","executionInfo":{"status":"ok","timestamp":1632300084568,"user_tz":-420,"elapsed":682,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_lstm.save('/content/drive/My Drive/Thesis/Code/FixModel2/lstm_sentiment_kamar_0.902.h5')"],"execution_count":67,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xTG40dBOAxrH"},"source":["### CNN"]},{"cell_type":"code","metadata":{"id":"qrk04_vWTwcj","executionInfo":{"status":"ok","timestamp":1632299963374,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras import layers\n","from tensorflow.keras.layers import Concatenate, Input, Embedding, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, GlobalAveragePooling1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras.models import Model\n","import matplotlib.pyplot as plt\n","import os"],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"id":"V_JQTnXqT2fA","executionInfo":{"status":"ok","timestamp":1632299963375,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_cnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cnn = Sequential()\n","  model_cnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cnn.add(Conv1D(filters=unit, kernel_size=3, padding='same', strides=1, activation='relu'))\n","  model_cnn.add(MaxPool1D(pool_size=2))\n","  # model_cnn.add(Dense(32, activation='relu'))\n","  model_cnn.add(SpatialDropout1D(dropout))\n","  model_cnn.add(Flatten())\n","  model_cnn.add(Dense(2, activation='sigmoid'))\n","  model_cnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cnn.summary())\n","\n","  return model_cnn"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"id":"kiHoXRfxT3-t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299967088,"user_tz":-420,"elapsed":3726,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"69c14a2a-7493-43bd-c595-f327acc42d50"},"source":["m_cnn = get_model_cnn(X_train, Y_train)\n","history_cnn = m_cnn.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_3\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_3 (Embedding)      (None, 13, 100)           86300     \n","_________________________________________________________________\n","conv1d (Conv1D)              (None, 13, 100)           30100     \n","_________________________________________________________________\n","max_pooling1d (MaxPooling1D) (None, 6, 100)            0         \n","_________________________________________________________________\n","spatial_dropout1d_3 (Spatial (None, 6, 100)            0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 600)               0         \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 2)                 1202      \n","=================================================================\n","Total params: 117,602\n","Trainable params: 117,602\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 1s 66ms/step - loss: 0.6901 - acc: 0.5469 - val_loss: 0.6888 - val_acc: 0.5312\n","Epoch 2/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.6779 - acc: 0.5703 - val_loss: 0.6869 - val_acc: 0.5312\n","Epoch 3/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.6685 - acc: 0.5703 - val_loss: 0.6826 - val_acc: 0.5312\n","Epoch 4/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.6601 - acc: 0.5703 - val_loss: 0.6772 - val_acc: 0.5312\n","Epoch 5/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.6438 - acc: 0.5703 - val_loss: 0.6641 - val_acc: 0.5312\n","Epoch 6/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.6254 - acc: 0.5918 - val_loss: 0.6461 - val_acc: 0.5469\n","Epoch 7/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.5974 - acc: 0.6836 - val_loss: 0.6223 - val_acc: 0.6328\n","Epoch 8/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.5626 - acc: 0.8164 - val_loss: 0.5919 - val_acc: 0.7031\n","Epoch 9/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.5175 - acc: 0.8984 - val_loss: 0.5555 - val_acc: 0.8203\n","Epoch 10/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.4622 - acc: 0.9473 - val_loss: 0.5081 - val_acc: 0.8594\n","Epoch 11/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.3997 - acc: 0.9648 - val_loss: 0.4593 - val_acc: 0.8359\n","Epoch 12/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.3331 - acc: 0.9727 - val_loss: 0.4120 - val_acc: 0.8516\n","Epoch 13/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.2664 - acc: 0.9805 - val_loss: 0.3632 - val_acc: 0.8594\n","Epoch 14/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.2100 - acc: 0.9785 - val_loss: 0.3257 - val_acc: 0.8672\n","Epoch 15/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.1631 - acc: 0.9824 - val_loss: 0.2970 - val_acc: 0.8672\n","Epoch 16/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.1257 - acc: 0.9883 - val_loss: 0.2744 - val_acc: 0.8750\n","Epoch 17/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0967 - acc: 0.9902 - val_loss: 0.2583 - val_acc: 0.8750\n","Epoch 18/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0750 - acc: 0.9922 - val_loss: 0.2474 - val_acc: 0.8672\n","Epoch 19/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0591 - acc: 0.9941 - val_loss: 0.2396 - val_acc: 0.8828\n","Epoch 20/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0457 - acc: 0.9941 - val_loss: 0.2341 - val_acc: 0.8906\n","Epoch 21/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0352 - acc: 0.9980 - val_loss: 0.2322 - val_acc: 0.8984\n","Epoch 22/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0300 - acc: 1.0000 - val_loss: 0.2294 - val_acc: 0.8906\n","Epoch 23/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.0232 - acc: 1.0000 - val_loss: 0.2259 - val_acc: 0.8906\n","Epoch 24/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0194 - acc: 1.0000 - val_loss: 0.2234 - val_acc: 0.8828\n","Epoch 25/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0160 - acc: 1.0000 - val_loss: 0.2226 - val_acc: 0.8828\n","Epoch 26/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0139 - acc: 1.0000 - val_loss: 0.2234 - val_acc: 0.8906\n","Epoch 27/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0122 - acc: 1.0000 - val_loss: 0.2262 - val_acc: 0.8906\n","Epoch 28/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0110 - acc: 1.0000 - val_loss: 0.2271 - val_acc: 0.8906\n","Epoch 29/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0097 - acc: 1.0000 - val_loss: 0.2247 - val_acc: 0.8906\n","Epoch 30/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0082 - acc: 1.0000 - val_loss: 0.2228 - val_acc: 0.8906\n"]}]},{"cell_type":"code","metadata":{"id":"R8lCvNZcT5nt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299969579,"user_tz":-420,"elapsed":2512,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"b6616aa2-ba03-4220-81af-7e14c7fd51cc"},"source":["score,acc_cnn = m_cnn.evaluate(X_test, Y_test)"],"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 3ms/step - loss: 0.3140 - acc: 0.8829\n"]}]},{"cell_type":"code","metadata":{"id":"uISwQfIKT7c-","executionInfo":{"status":"ok","timestamp":1632299969581,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_cnn.save('/content/drive/My Drive/Thesis/Code/Model/cnn_kamar_sentiment_0.911.h5')"],"execution_count":32,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DHTDUWbYA2wP"},"source":["### BLSTM"]},{"cell_type":"code","metadata":{"id":"V4juzmHFT9aI","executionInfo":{"status":"ok","timestamp":1632299969582,"user_tz":-420,"elapsed":32,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_BLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_BLSTM = Sequential()\n","  model_BLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_BLSTM.add(Dense(32, activation='relu'))\n","  model_BLSTM.add((SpatialDropout1D(dropout)))\n","  model_BLSTM.add(Bidirectional(LSTM(unit)))\n","  model_BLSTM.add(Dense(2, activation='sigmoid'))\n","  model_BLSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_BLSTM.summary())\n","  return model_BLSTM"],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"id":"jkcOCbDXUAzq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299978035,"user_tz":-420,"elapsed":8479,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d6129292-ff52-4373-c69e-fdccd9d725be"},"source":["m_blstm = get_model_BLSTM(X_train, Y_train)\n","history_BLSTM = m_blstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_4\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_4 (Embedding)      (None, 13, 100)           86300     \n","_________________________________________________________________\n","spatial_dropout1d_4 (Spatial (None, 13, 100)           0         \n","_________________________________________________________________\n","bidirectional (Bidirectional (None, 200)               160800    \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 2)                 402       \n","=================================================================\n","Total params: 247,502\n","Trainable params: 247,502\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 4s 334ms/step - loss: 0.6893 - acc: 0.5332 - val_loss: 0.6893 - val_acc: 0.5312\n","Epoch 2/100\n","4/4 [==============================] - 0s 83ms/step - loss: 0.6786 - acc: 0.5703 - val_loss: 0.6892 - val_acc: 0.5312\n","Epoch 3/100\n","4/4 [==============================] - 0s 83ms/step - loss: 0.6703 - acc: 0.5703 - val_loss: 0.6885 - val_acc: 0.5312\n","Epoch 4/100\n","4/4 [==============================] - 0s 87ms/step - loss: 0.6581 - acc: 0.5703 - val_loss: 0.6721 - val_acc: 0.5391\n","Epoch 5/100\n","4/4 [==============================] - 0s 86ms/step - loss: 0.6349 - acc: 0.5840 - val_loss: 0.6468 - val_acc: 0.5547\n","Epoch 6/100\n","4/4 [==============================] - 0s 84ms/step - loss: 0.5890 - acc: 0.6582 - val_loss: 0.5938 - val_acc: 0.6562\n","Epoch 7/100\n","4/4 [==============================] - 0s 84ms/step - loss: 0.4922 - acc: 0.7969 - val_loss: 0.4863 - val_acc: 0.8203\n","Epoch 8/100\n","4/4 [==============================] - 0s 83ms/step - loss: 0.3266 - acc: 0.9336 - val_loss: 0.3479 - val_acc: 0.8750\n","Epoch 9/100\n","4/4 [==============================] - 0s 83ms/step - loss: 0.1731 - acc: 0.9570 - val_loss: 0.2908 - val_acc: 0.8906\n","Epoch 10/100\n","4/4 [==============================] - 0s 84ms/step - loss: 0.0845 - acc: 0.9785 - val_loss: 0.3385 - val_acc: 0.8750\n","Epoch 11/100\n","4/4 [==============================] - 0s 89ms/step - loss: 0.0578 - acc: 0.9863 - val_loss: 0.4333 - val_acc: 0.8516\n","Epoch 12/100\n","4/4 [==============================] - 0s 81ms/step - loss: 0.0305 - acc: 0.9941 - val_loss: 0.4335 - val_acc: 0.8828\n","Epoch 13/100\n","4/4 [==============================] - 0s 82ms/step - loss: 0.0228 - acc: 0.9961 - val_loss: 0.4840 - val_acc: 0.8672\n","Epoch 14/100\n","4/4 [==============================] - 0s 87ms/step - loss: 0.0187 - acc: 0.9961 - val_loss: 0.5565 - val_acc: 0.8516\n"]}]},{"cell_type":"code","metadata":{"id":"fwpOGPOoUCc5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299983857,"user_tz":-420,"elapsed":5848,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8ca4bdc3-f38f-48af-93bc-7a61d8583b27"},"source":["score,acc_blstm = m_blstm.evaluate(X_test, Y_test)"],"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 1s 8ms/step - loss: 0.3207 - acc: 0.8703\n"]}]},{"cell_type":"code","metadata":{"id":"W3fxKXCwUEm6","executionInfo":{"status":"ok","timestamp":1632299983858,"user_tz":-420,"elapsed":22,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_blstm.save('/content/drive/My Drive/Thesis/Code/FixModel2/blstm_sentiment_kamar_0.915.h5')"],"execution_count":36,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4cvyCrSDA7al"},"source":["### ABLSTM"]},{"cell_type":"code","metadata":{"id":"rzMIDKo1UGGq","executionInfo":{"status":"ok","timestamp":1632299983859,"user_tz":-420,"elapsed":21,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from keras.models import Sequential\n","from keras.layers import Embedding, LSTM, Dense, Dropout, Bidirectional, Flatten\n","import matplotlib.pyplot as plt\n","from keras_self_attention import SeqSelfAttention, SeqWeightedAttention\n","from keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","def get_model_ABLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_ABLSTM = Sequential()\n","  model_ABLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_ABLSTM.add(Dense(32, activation='tanh'))\n","  model_ABLSTM.add(SpatialDropout1D(dropout))\n","  model_ABLSTM.add(Bidirectional(LSTM(unit, return_sequences=True)))\n","  model_ABLSTM.add(SeqWeightedAttention())\n","  model_ABLSTM.add(Dense(2, activation='sigmoid'))\n","  model_ABLSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_ABLSTM.summary())\n","  \n","  return model_ABLSTM"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"id":"kefMlp8EUIPr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299992816,"user_tz":-420,"elapsed":8977,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"3feaa50f-91b7-4c05-a313-24a39173ea4a"},"source":["m_ablstm = get_model_ABLSTM(X_train, Y_train)\n","history_ABLSTM = m_ablstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_5 (Embedding)      (None, 13, 100)           86300     \n","_________________________________________________________________\n","spatial_dropout1d_5 (Spatial (None, 13, 100)           0         \n","_________________________________________________________________\n","bidirectional_1 (Bidirection (None, 13, 200)           160800    \n","_________________________________________________________________\n","seq_weighted_attention (SeqW (None, 200)               201       \n","_________________________________________________________________\n","dense_5 (Dense)              (None, 2)                 402       \n","=================================================================\n","Total params: 247,703\n","Trainable params: 247,703\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 4s 356ms/step - loss: 0.6906 - acc: 0.5645 - val_loss: 0.6907 - val_acc: 0.5312\n","Epoch 2/100\n","4/4 [==============================] - 0s 91ms/step - loss: 0.6842 - acc: 0.5703 - val_loss: 0.6909 - val_acc: 0.5312\n","Epoch 3/100\n","4/4 [==============================] - 0s 87ms/step - loss: 0.6770 - acc: 0.5703 - val_loss: 0.6910 - val_acc: 0.5312\n","Epoch 4/100\n","4/4 [==============================] - 0s 86ms/step - loss: 0.6685 - acc: 0.5703 - val_loss: 0.6825 - val_acc: 0.5312\n","Epoch 5/100\n","4/4 [==============================] - 0s 89ms/step - loss: 0.6462 - acc: 0.5742 - val_loss: 0.6550 - val_acc: 0.5469\n","Epoch 6/100\n","4/4 [==============================] - 0s 88ms/step - loss: 0.5842 - acc: 0.6465 - val_loss: 0.5796 - val_acc: 0.6562\n","Epoch 7/100\n","4/4 [==============================] - 0s 94ms/step - loss: 0.4477 - acc: 0.8535 - val_loss: 0.4627 - val_acc: 0.8125\n","Epoch 8/100\n","4/4 [==============================] - 0s 90ms/step - loss: 0.2896 - acc: 0.9531 - val_loss: 0.4035 - val_acc: 0.8906\n","Epoch 9/100\n","4/4 [==============================] - 0s 89ms/step - loss: 0.1966 - acc: 0.9727 - val_loss: 0.4381 - val_acc: 0.8672\n","Epoch 10/100\n","4/4 [==============================] - 0s 91ms/step - loss: 0.1317 - acc: 0.9824 - val_loss: 0.4836 - val_acc: 0.8672\n","Epoch 11/100\n","4/4 [==============================] - 0s 89ms/step - loss: 0.0908 - acc: 0.9863 - val_loss: 0.5403 - val_acc: 0.8281\n","Epoch 12/100\n","4/4 [==============================] - 0s 87ms/step - loss: 0.0582 - acc: 0.9902 - val_loss: 0.6440 - val_acc: 0.8203\n","Epoch 13/100\n","4/4 [==============================] - 0s 87ms/step - loss: 0.0434 - acc: 0.9922 - val_loss: 0.7486 - val_acc: 0.8203\n"]}]},{"cell_type":"code","metadata":{"id":"WbpASkA7UKHi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632299998979,"user_tz":-420,"elapsed":6169,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"54feb4b1-c87b-45c5-edd1-3f3626776144"},"source":["score,acc_ablstm = m_ablstm.evaluate(X_test, Y_test)"],"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 1s 8ms/step - loss: 0.4121 - acc: 0.8703\n"]}]},{"cell_type":"code","metadata":{"id":"6za6cclSULso","executionInfo":{"status":"ok","timestamp":1632299998980,"user_tz":-420,"elapsed":27,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_ablstm.save('/content/drive/My Drive/Thesis/Code/Model/ablstm_sentiment_model.h5')"],"execution_count":40,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CNQOwZDkBB2R"},"source":["### CNNLSTM"]},{"cell_type":"code","metadata":{"id":"LdijuuFWUO9E","executionInfo":{"status":"ok","timestamp":1632299998981,"user_tz":-420,"elapsed":26,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_clstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_clstm = Sequential()\n","  model_clstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_clstm.add(Conv1D(filters=unit, kernel_size=3, padding='same', activation='relu'))\n","  model_clstm.add(MaxPool1D(pool_size=2))\n","  # model_clstm.add(Dense(32, activation='relu'))\n","  model_clstm.add(SpatialDropout1D(dropout))\n","  model_clstm.add(LSTM(unit))\n","  model_clstm.add(Dense(2, activation='sigmoid'))\n","  model_clstm.compile(optimizer='nadam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_clstm.summary())\n","  return model_clstm"],"execution_count":41,"outputs":[]},{"cell_type":"code","metadata":{"id":"c1zoXGvgUQ3A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300004956,"user_tz":-420,"elapsed":6000,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"860f1489-5792-447f-f5a8-ac92ee66ef75"},"source":["m_clstm = get_model_clstm(X_train, Y_train)\n","history_CLSTM = m_clstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_6\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_6 (Embedding)      (None, 13, 100)           86300     \n","_________________________________________________________________\n","conv1d_1 (Conv1D)            (None, 13, 100)           30100     \n","_________________________________________________________________\n","max_pooling1d_1 (MaxPooling1 (None, 6, 100)            0         \n","_________________________________________________________________\n","spatial_dropout1d_6 (Spatial (None, 6, 100)            0         \n","_________________________________________________________________\n","lstm_3 (LSTM)                (None, 100)               80400     \n","_________________________________________________________________\n","dense_6 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 197,002\n","Trainable params: 197,002\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 3s 201ms/step - loss: 0.6885 - acc: 0.5723 - val_loss: 0.6899 - val_acc: 0.5312\n","Epoch 2/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.6797 - acc: 0.5703 - val_loss: 0.6896 - val_acc: 0.5312\n","Epoch 3/100\n","4/4 [==============================] - 0s 42ms/step - loss: 0.6702 - acc: 0.5703 - val_loss: 0.6785 - val_acc: 0.5312\n","Epoch 4/100\n","4/4 [==============================] - 0s 42ms/step - loss: 0.6535 - acc: 0.5703 - val_loss: 0.6549 - val_acc: 0.5312\n","Epoch 5/100\n","4/4 [==============================] - 0s 41ms/step - loss: 0.6069 - acc: 0.6270 - val_loss: 0.6029 - val_acc: 0.5859\n","Epoch 6/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.5560 - acc: 0.6992 - val_loss: 0.5326 - val_acc: 0.8281\n","Epoch 7/100\n","4/4 [==============================] - 0s 41ms/step - loss: 0.4570 - acc: 0.8965 - val_loss: 0.4595 - val_acc: 0.8516\n","Epoch 8/100\n","4/4 [==============================] - 0s 42ms/step - loss: 0.3597 - acc: 0.9297 - val_loss: 0.3932 - val_acc: 0.8438\n","Epoch 9/100\n","4/4 [==============================] - 0s 44ms/step - loss: 0.2836 - acc: 0.9492 - val_loss: 0.3341 - val_acc: 0.8750\n","Epoch 10/100\n","4/4 [==============================] - 0s 40ms/step - loss: 0.2126 - acc: 0.9570 - val_loss: 0.2902 - val_acc: 0.8828\n","Epoch 11/100\n","4/4 [==============================] - 0s 42ms/step - loss: 0.1523 - acc: 0.9727 - val_loss: 0.2506 - val_acc: 0.8906\n","Epoch 12/100\n","4/4 [==============================] - 0s 40ms/step - loss: 0.1152 - acc: 0.9805 - val_loss: 0.2391 - val_acc: 0.8984\n","Epoch 13/100\n","4/4 [==============================] - 0s 42ms/step - loss: 0.0763 - acc: 0.9902 - val_loss: 0.2332 - val_acc: 0.8984\n","Epoch 14/100\n","4/4 [==============================] - 0s 40ms/step - loss: 0.0536 - acc: 0.9902 - val_loss: 0.2314 - val_acc: 0.8984\n","Epoch 15/100\n","4/4 [==============================] - 0s 39ms/step - loss: 0.0447 - acc: 0.9883 - val_loss: 0.2375 - val_acc: 0.8906\n","Epoch 16/100\n","4/4 [==============================] - 0s 42ms/step - loss: 0.0256 - acc: 0.9961 - val_loss: 0.2742 - val_acc: 0.8828\n","Epoch 17/100\n","4/4 [==============================] - 0s 43ms/step - loss: 0.0183 - acc: 1.0000 - val_loss: 0.2828 - val_acc: 0.8906\n","Epoch 18/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.0142 - acc: 1.0000 - val_loss: 0.2921 - val_acc: 0.8828\n","Epoch 19/100\n","4/4 [==============================] - 0s 39ms/step - loss: 0.0107 - acc: 1.0000 - val_loss: 0.3260 - val_acc: 0.8828\n"]}]},{"cell_type":"code","metadata":{"id":"UbtA4j_rUS5d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300005859,"user_tz":-420,"elapsed":912,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c61f21d8-c6e7-4789-eb64-1c2e50c4812b"},"source":["score,acc_clstm = m_clstm.evaluate(X_test, Y_test)"],"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 1s 5ms/step - loss: 0.3697 - acc: 0.8892\n"]}]},{"cell_type":"code","metadata":{"id":"58r09paUUUlG","executionInfo":{"status":"ok","timestamp":1632300005861,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_clstm.save('/content/drive/My Drive/Thesis/Code/FixModel/clstm_sentiment_kamar_9114.h5')"],"execution_count":44,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Iy8nWxe6BHYF"},"source":["### CNNBLSTM"]},{"cell_type":"code","metadata":{"id":"TVK0iWSAUXvp","executionInfo":{"status":"ok","timestamp":1632300005863,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_cblstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cblstm = Sequential()\n","  model_cblstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cblstm.add(Conv1D(filters=unit, kernel_size=3, padding='same', activation='relu'))\n","  model_cblstm.add(MaxPool1D(pool_size=2))\n","  # model_cblstm.add(Dense(32, activation='relu'))\n","  model_cblstm.add(SpatialDropout1D(dropout))\n","  model_cblstm.add(Bidirectional(LSTM(unit, return_sequences=False)))\n","  model_cblstm.add(Dense(2, activation='sigmoid'))\n","  model_cblstm.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cblstm.summary())\n","\n","  return model_cblstm"],"execution_count":45,"outputs":[]},{"cell_type":"code","metadata":{"id":"-aEuCTxgUZvm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300012897,"user_tz":-420,"elapsed":7043,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"b693eafd-8a30-4b17-ffa3-1231fea22c45"},"source":["m_cblstm = get_model_cblstm(X_train, Y_train)\n","history_CBLSTM = m_cblstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_7 (Embedding)      (None, 13, 100)           86300     \n","_________________________________________________________________\n","conv1d_2 (Conv1D)            (None, 13, 100)           30100     \n","_________________________________________________________________\n","max_pooling1d_2 (MaxPooling1 (None, 6, 100)            0         \n","_________________________________________________________________\n","spatial_dropout1d_7 (Spatial (None, 6, 100)            0         \n","_________________________________________________________________\n","bidirectional_2 (Bidirection (None, 200)               160800    \n","_________________________________________________________________\n","dense_7 (Dense)              (None, 2)                 402       \n","=================================================================\n","Total params: 277,602\n","Trainable params: 277,602\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 4s 312ms/step - loss: 0.6910 - acc: 0.5078 - val_loss: 0.6907 - val_acc: 0.5312\n","Epoch 2/100\n","4/4 [==============================] - 0s 58ms/step - loss: 0.6813 - acc: 0.5703 - val_loss: 0.6923 - val_acc: 0.5312\n","Epoch 3/100\n","4/4 [==============================] - 0s 59ms/step - loss: 0.6767 - acc: 0.5703 - val_loss: 0.6904 - val_acc: 0.5312\n","Epoch 4/100\n","4/4 [==============================] - 0s 54ms/step - loss: 0.6679 - acc: 0.5703 - val_loss: 0.6812 - val_acc: 0.5312\n","Epoch 5/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.6510 - acc: 0.5703 - val_loss: 0.6589 - val_acc: 0.5312\n","Epoch 6/100\n","4/4 [==============================] - 0s 61ms/step - loss: 0.6145 - acc: 0.5840 - val_loss: 0.6164 - val_acc: 0.5703\n","Epoch 7/100\n","4/4 [==============================] - 0s 55ms/step - loss: 0.5379 - acc: 0.7305 - val_loss: 0.5282 - val_acc: 0.7656\n","Epoch 8/100\n","4/4 [==============================] - 0s 56ms/step - loss: 0.4025 - acc: 0.9023 - val_loss: 0.4061 - val_acc: 0.8281\n","Epoch 9/100\n","4/4 [==============================] - 0s 57ms/step - loss: 0.2511 - acc: 0.9336 - val_loss: 0.3320 - val_acc: 0.8438\n","Epoch 10/100\n","4/4 [==============================] - 0s 54ms/step - loss: 0.1491 - acc: 0.9473 - val_loss: 0.3355 - val_acc: 0.8750\n","Epoch 11/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.0755 - acc: 0.9766 - val_loss: 0.3365 - val_acc: 0.8906\n","Epoch 12/100\n","4/4 [==============================] - 0s 59ms/step - loss: 0.0483 - acc: 0.9863 - val_loss: 0.3611 - val_acc: 0.8672\n","Epoch 13/100\n","4/4 [==============================] - 0s 54ms/step - loss: 0.0275 - acc: 0.9941 - val_loss: 0.3800 - val_acc: 0.8672\n","Epoch 14/100\n","4/4 [==============================] - 0s 60ms/step - loss: 0.0183 - acc: 0.9941 - val_loss: 0.4349 - val_acc: 0.8750\n"]}]},{"cell_type":"code","metadata":{"id":"6rA1QjdDUbK3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300015157,"user_tz":-420,"elapsed":2271,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"9b824e89-9256-4e8d-cffd-af68dd07861e"},"source":["score,acc_cblstm = m_cblstm.evaluate(X_test, Y_test)"],"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 1s 7ms/step - loss: 0.4360 - acc: 0.8449\n"]}]},{"cell_type":"code","metadata":{"id":"DA-ZEgvEUc1C","executionInfo":{"status":"ok","timestamp":1632300015159,"user_tz":-420,"elapsed":19,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_cblstm.save('/content/drive/My Drive/Thesis/Code/Model/cblstm_sentiment_model.h5')"],"execution_count":48,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"B_aqrVP7VhJm"},"source":["### Result"]},{"cell_type":"code","metadata":{"id":"OeUu2x5pUgAf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300015159,"user_tz":-420,"elapsed":18,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"9769aa04-4697-4a04-eda3-8b6b141d35e5"},"source":["acc = {'Model': ['RNN','LSTM', 'GRU','BiLSTM', 'ABLSTM', 'CNN', 'CNNLSTM','CNNBLSTM'],\n","       'Acc': [acc_rnn, acc_gru, acc_lstm, acc_cnn, acc_blstm, acc_clstm, acc_cblstm, acc_ablstm]}   \n","df_acc_nn = pd.DataFrame(acc)  \n","print(df_acc_nn)  "],"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.873418\n","1      LSTM  0.901899\n","2       GRU  0.886076\n","3    BiLSTM  0.882911\n","4    ABLSTM  0.870253\n","5       CNN  0.889241\n","6   CNNLSTM  0.844937\n","7  CNNBLSTM  0.870253\n"]}]},{"cell_type":"markdown","metadata":{"id":"uroMA0JNBNT1"},"source":["## Machhine Learning"]},{"cell_type":"code","metadata":{"id":"nSjX_E4aUiP7","executionInfo":{"status":"ok","timestamp":1632300015161,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from sklearn.naive_bayes import MultinomialNB\n","from sklearn.svm import SVC, LinearSVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.feature_extraction.text import TfidfTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.model_selection import train_test_split, cross_val_score\n","from sklearn.metrics import classification_report, confusion_matrix, accuracy_score, f1_score, precision_score, recall_score, plot_confusion_matrix\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","np.random.seed(7)"],"execution_count":50,"outputs":[]},{"cell_type":"code","metadata":{"id":"K5WU1_9EUko6","executionInfo":{"status":"ok","timestamp":1632300015161,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["X_train2, X_test2, y_train2, y_test2 = train_test_split(text, label, random_state=1)"],"execution_count":51,"outputs":[]},{"cell_type":"code","metadata":{"id":"aR080ykuUmsP","executionInfo":{"status":"ok","timestamp":1632300015162,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["acc_result = []\n","cross_val = 5"],"execution_count":52,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9Q6w3GRuBSBr"},"source":["### MNB"]},{"cell_type":"code","metadata":{"id":"CufsDryMUoDJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300015163,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"7f2239f3-665c-41d6-a3f7-b38a6b51a84d"},"source":["#Multinomial Naive Bayes with bigram\n","pipeline_mnb_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_bigram = cross_val_score(pipeline_mnb_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_bigram), 4)\n","std_score = round(np.std(scores_mnb_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d1 = ('MNB+Bigram',mean_score, std_score)\n","acc_result.append(d1)"],"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9010\n","Standard Dev: +/-0.0161\n"]}]},{"cell_type":"code","metadata":{"id":"rmfc04JnUpux","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300015163,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6046bf8a-b32f-4948-b75a-ac6ac1afb012"},"source":["#Multinomial Naive Bayes unigram\n","pipeline_mnb_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_unigram = cross_val_score(pipeline_mnb_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_unigram), 4)\n","std_score = round(np.std(scores_mnb_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d2 = ('MNB+Unigram',mean_score, std_score)\n","acc_result.append(d2)"],"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9052\n","Standard Dev: +/-0.0167\n"]}]},{"cell_type":"markdown","metadata":{"id":"USJ83MjBBVZl"},"source":["### SVC"]},{"cell_type":"code","metadata":{"id":"PGVczeF4Ur1S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300015688,"user_tz":-420,"elapsed":539,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"cf598342-2a39-43a0-df97-83702bdee4b3"},"source":["#SVC with bigram\n","pipeline_svc_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_bigram = cross_val_score(pipeline_svc_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_bigram), 4)\n","std_score = round(np.std(scores_svc_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d3 = ('SVC+Bigram',mean_score, std_score)\n","acc_result.append(d3)"],"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.7503\n","Standard Dev: +/-0.0068\n"]}]},{"cell_type":"code","metadata":{"id":"2WIjJb5eUtkI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300015689,"user_tz":-420,"elapsed":19,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"af2f3132-1380-4c1c-8903-7f9552a8b180"},"source":["#SVC Unigram\n","pipeline_svc_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_unigram = cross_val_score(pipeline_svc_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_unigram), 4)\n","std_score = round(np.std(scores_svc_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d4 = ('SVC+Unigram',mean_score, std_score)\n","acc_result.append(d4)"],"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.7838\n","Standard Dev: +/-0.0131\n"]}]},{"cell_type":"markdown","metadata":{"id":"OkGOlxOABYXi"},"source":["### Logistic Regression"]},{"cell_type":"code","metadata":{"id":"p5RGympEUvRD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300015691,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"5ec28b1d-9685-4a38-e0b9-548ef2f6b2f0"},"source":["#Logistic Regression with Bigram\n","pipeline_lr_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_bigram = cross_val_score(pipeline_lr_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_bigram), 4)\n","std_score = round(np.std(scores_lr_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d5 = ('LR+Bigram',mean_score, std_score)\n","acc_result.append(d5)"],"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8787\n","Standard Dev: +/-0.0161\n"]}]},{"cell_type":"code","metadata":{"id":"e5yLB1cnUxNC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300015692,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0e99771a-17f5-440a-c227-da7e866d5713"},"source":["#Logistic Regression Unigram\n","pipeline_lr_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_unigram = cross_val_score(pipeline_lr_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_unigram), 4)\n","std_score = round(np.std(scores_lr_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d6 = ('LR+Unigram',mean_score, std_score)\n","acc_result.append(d6)"],"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8801\n","Standard Dev: +/-0.0133\n"]}]},{"cell_type":"code","metadata":{"id":"7k2aEchDUzKJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300016658,"user_tz":-420,"elapsed":977,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"474e6b0c-b8c9-42cb-fd27-38002b263c2a"},"source":["# create DataFrame using data \n","df_acc_ml = pd.DataFrame.from_records(acc_result, columns =['Model', 'Accuracy', 'Standard Deviation']) \n","  \n","print(df_acc_ml)  "],"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.9010              0.0161\n","1  MNB+Unigram    0.9052              0.0167\n","2   SVC+Bigram    0.7503              0.0068\n","3  SVC+Unigram    0.7838              0.0131\n","4    LR+Bigram    0.8787              0.0161\n","5   LR+Unigram    0.8801              0.0133\n"]}]},{"cell_type":"markdown","metadata":{"id":"EJ64PtWnBddd"},"source":["# Overall Result"]},{"cell_type":"code","metadata":{"id":"Cc97CgmZU0xL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300016659,"user_tz":-420,"elapsed":42,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"587f6772-2f14-4566-8e03-8fc1d5944d39"},"source":["print(df_acc_nn)"],"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.873418\n","1      LSTM  0.901899\n","2       GRU  0.886076\n","3    BiLSTM  0.882911\n","4    ABLSTM  0.870253\n","5       CNN  0.889241\n","6   CNNLSTM  0.844937\n","7  CNNBLSTM  0.870253\n"]}]},{"cell_type":"code","metadata":{"id":"fXXzuarUU2_a","colab":{"base_uri":"https://localhost:8080/","height":97},"executionInfo":{"status":"ok","timestamp":1632300016661,"user_tz":-420,"elapsed":41,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6fa7c2d6-fb35-4c56-ea84-2a7ee1eb7df0"},"source":["print(\"Best Neural Network Model :\")\n","df_acc_nn[['Model', 'Acc']][df_acc_nn.Acc == df_acc_nn.Acc.max()]"],"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Neural Network Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Acc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>LSTM</td>\n","      <td>0.901899</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Model       Acc\n","1  LSTM  0.901899"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","metadata":{"id":"kM_aJD23U4hC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300016662,"user_tz":-420,"elapsed":38,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"76e5f5ec-54f1-4d0c-82fd-a26d6da570fd"},"source":["print(df_acc_ml)"],"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.9010              0.0161\n","1  MNB+Unigram    0.9052              0.0167\n","2   SVC+Bigram    0.7503              0.0068\n","3  SVC+Unigram    0.7838              0.0131\n","4    LR+Bigram    0.8787              0.0161\n","5   LR+Unigram    0.8801              0.0133\n"]}]},{"cell_type":"code","metadata":{"id":"2d-0vXj2U8RA","colab":{"base_uri":"https://localhost:8080/","height":97},"executionInfo":{"status":"ok","timestamp":1632300016664,"user_tz":-420,"elapsed":39,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8b941a5d-a3ee-4ae6-b170-49bebfba661a"},"source":["print(\"Best Machine Learning Model :\")\n","df_acc_ml[['Model', 'Accuracy']][df_acc_ml.Accuracy == df_acc_ml.Accuracy.max()]"],"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Machine Learning Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>MNB+Unigram</td>\n","      <td>0.9052</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Model  Accuracy\n","1  MNB+Unigram    0.9052"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","metadata":{"id":"A87lb7zf3luk","executionInfo":{"status":"ok","timestamp":1632300016665,"user_tz":-420,"elapsed":37,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["model = m_lstm"],"execution_count":64,"outputs":[]},{"cell_type":"code","metadata":{"id":"At9xy80o3uUs","colab":{"base_uri":"https://localhost:8080/","height":533},"executionInfo":{"status":"ok","timestamp":1632300016667,"user_tz":-420,"elapsed":38,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"81328f44-e7c5-4660-c98b-dba8f18469eb"},"source":["from keras.utils.vis_utils import plot_model\n","\n","plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)"],"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","metadata":{"id":"zPwLMWNYYk3w"},"source":["# Analyze Results"]},{"cell_type":"code","metadata":{"id":"evPFV3wOYYan","executionInfo":{"status":"ok","timestamp":1632299885082,"user_tz":-420,"elapsed":1832,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["ev_model = model.predict(X_test)\n","ev_model_list = ev_model.tolist()\n","ev_classes = np.argmax(ev_model,axis=1)"],"execution_count":66,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"9Anxe_qqYpXo","executionInfo":{"status":"ok","timestamp":1632299885084,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d7cb4207-5b06-45a7-8d87-82393d1e6cd4"},"source":["# Creating a reverse dictionary\n","reverse_word_map = dict(map(reversed, tokenizer.word_index.items()))\n","\n","# Function takes a tokenized sentence and returns the words\n","def sequence_to_text(list_of_indices):\n","    # Looking up words in dictionary\n","    words = [reverse_word_map.get(letter) for letter in list_of_indices]\n","    return(words)\n","\n","# Creating texts \n","my_texts = list(map(sequence_to_text, X_test))\n","text_str=[]\n","for x in my_texts:\n","  x_str = ' '.join([str(elem) for elem in x])\n","  text_str.append(x_str)\n","text_str[0]\n"],"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'None None None None None None None None None None colokan listrik terbatas'"]},"metadata":{},"execution_count":67}]},{"cell_type":"markdown","metadata":{"id":"22PEULFJYs9X"},"source":["## Confusion Matrix"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"id":"CD21y-x-YrK5","executionInfo":{"status":"ok","timestamp":1632299885086,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"f8199a2a-c199-43bc-a99a-c81c0104b31e"},"source":["decode_sentiment = np.argmax(Y_test, axis=1)\n","lab_sentiment = [\"positive\",\"negative\"]\n","def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(ev_classes, decode_sentiment,lab_sentiment)"],"execution_count":68,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_VJ9mLgHYxCJ","executionInfo":{"status":"ok","timestamp":1632299885087,"user_tz":-420,"elapsed":26,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"830f0ad8-1721-4f3a-98ab-ad149bfe115f"},"source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import classification_report\n","accuracy_score(ev_classes, decode_sentiment)\n","print(classification_report(ev_classes, decode_sentiment))"],"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.94      0.85      0.89       184\n","           1       0.81      0.92      0.87       132\n","\n","    accuracy                           0.88       316\n","   macro avg       0.88      0.89      0.88       316\n","weighted avg       0.89      0.88      0.88       316\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MkCO92edYzE8","executionInfo":{"status":"ok","timestamp":1632299886071,"user_tz":-420,"elapsed":1006,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"4936f414-a605-43d3-c300-f8eaaf1cc575"},"source":["ev_train_model = model.predict(X_train)\n","ev_train_classes = np.argmax(ev_train_model,axis=1)\n","decode_train = np.argmax(Y_train, axis=1)\n","print(classification_report(ev_train_classes, decode_train))"],"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.98      0.97      0.98       364\n","           1       0.96      0.97      0.97       276\n","\n","    accuracy                           0.97       640\n","   macro avg       0.97      0.97      0.97       640\n","weighted avg       0.97      0.97      0.97       640\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RFPBr9etY09F","executionInfo":{"status":"ok","timestamp":1632299886073,"user_tz":-420,"elapsed":31,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"5c98a7db-6d88-4f0f-bf99-ee1b2d5147e9"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(ev_classes, decode_sentiment))\n","print('F1 score:', f1_score(ev_classes, decode_sentiment, average='macro'))\n","print('Recall:', recall_score(ev_classes, decode_sentiment, average='macro'))\n","print('Precision:', precision_score(ev_classes, decode_sentiment, average='macro'))"],"execution_count":71,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.879746835443038\n","F1 score: 0.878338399189463\n","Recall: 0.8860342555994729\n","Precision: 0.8765461847389558\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"GeJSpV-rY2vX","executionInfo":{"status":"ok","timestamp":1632299886074,"user_tz":-420,"elapsed":31,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"ce19072a-c428-4fc7-a135-cbe7f24dfc3c"},"source":["plt.title('Loss')\n","plt.plot(history_LSTM.history['loss'], label='train')\n","plt.plot(history_LSTM.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();\n","\n","plt.title('Accuracy')\n","plt.plot(history_LSTM.history['acc'], label='train')\n","plt.plot(history_LSTM.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":72,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oR00BFNTY4tS","executionInfo":{"status":"ok","timestamp":1632299886076,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"3b747e9d-c696-417e-e906-2d4d15e31421"},"source":["print(history_BLSTM.history['acc'])\n","print(history_BLSTM.history['val_acc'])"],"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.5703125, 0.5703125, 0.5703125, 0.57421875, 0.583984375, 0.65625, 0.875, 0.94140625, 0.95703125, 0.96875, 0.982421875, 0.9921875, 0.99609375]\n","[0.53125, 0.53125, 0.53125, 0.53125, 0.5625, 0.6953125, 0.84375, 0.8828125, 0.875, 0.859375, 0.859375, 0.8359375, 0.84375]\n"]}]},{"cell_type":"markdown","metadata":{"id":"E0zSCuPlY64o"},"source":["## Evaluate Misclassification"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"UGRVxeS7Y9kS","executionInfo":{"status":"ok","timestamp":1632299886078,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"2ba0570c-e012-4b95-cbc7-e53c61284cd3"},"source":["ev_data_test = {'Text':text_str,\n","        'Act':decode_sentiment,\n","        'Pred':ev_classes}\n","df_final_ev = pd.DataFrame(ev_data_test)\n","df_final_ev"],"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>None None None None None None None kamar segar...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>None None None None None None None None kasur ...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>None None None None None None None None None t...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>311</th>\n","      <td>None None None None None None None None None t...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>313</th>\n","      <td>None None None None None None None None None t...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>314</th>\n","      <td>None None None None None None None None desain...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>315</th>\n","      <td>None None None None None None None None None t...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>316 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0    None None None None None None None None None N...    0     0\n","1    None None None None None None None kamar segar...    1     1\n","2    None None None None None None None None None N...    0     0\n","3    None None None None None None None None kasur ...    1     1\n","4    None None None None None None None None None t...    0     0\n","..                                                 ...  ...   ...\n","311  None None None None None None None None None t...    0     0\n","312  None None None None None None None None None N...    0     0\n","313  None None None None None None None None None t...    0     0\n","314  None None None None None None None None desain...    1     1\n","315  None None None None None None None None None t...    0     0\n","\n","[316 rows x 3 columns]"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"txWJnnz-ZAGY","executionInfo":{"status":"ok","timestamp":1632299886079,"user_tz":-420,"elapsed":26,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8a271105-c317-47de-c101-4245060a90df"},"source":["remove_words = ['None']\n","pat = r'\\b(?:{})\\b'.format('|'.join(remove_words))\n","df_final_ev['Text'] = df_final_ev['Text'].str.replace(pat, '')\n","df_final_ev"],"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>colokan listrik terbatas</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>kamar segar ada handuk kulkas bersih</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>toilet bau</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>kasur empuk tinggi bantal banyak</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>tidak ada hair dryer</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>311</th>\n","      <td>tidak ada mini kulkas</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>tv hanya pajangan</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>313</th>\n","      <td>tidak kedap suara kedengeran</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>314</th>\n","      <td>desain wastafel baik bisa berwudhu</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>315</th>\n","      <td>tidak ada tempat sampah</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>316 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                            Text  Act  Pred\n","0                       colokan listrik terbatas    0     0\n","1           kamar segar ada handuk kulkas bersih    1     1\n","2                                     toilet bau    0     0\n","3               kasur empuk tinggi bantal banyak    1     1\n","4                           tidak ada hair dryer    0     0\n","..                                           ...  ...   ...\n","311                        tidak ada mini kulkas    0     0\n","312                            tv hanya pajangan    0     0\n","313                 tidak kedap suara kedengeran    0     0\n","314           desain wastafel baik bisa berwudhu    1     1\n","315                      tidak ada tempat sampah    0     0\n","\n","[316 rows x 3 columns]"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"PQdC7neSZAxM","executionInfo":{"status":"ok","timestamp":1632299886702,"user_tz":-420,"elapsed":646,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"07094b16-e448-43b5-a35f-672c5021c7dc"},"source":["df_final_ev.query('Act != Pred')"],"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>13</th>\n","      <td>bau kamar harus bikin tidur nyaman</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>kamar hotel mencekam menyeramkan</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>kamar pakai karpet tebal</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>sprei bersih</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>dapat air mineral</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>tidak ada hair dryer kamar</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>lantai tujuh pemandangan keren</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>stop kontak cukup banyak</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>mesin cuci bisa digunakan ac dingin</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>ac kamar berasa</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>meja kamar penuh semut</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>kamar banyak stop kontak</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>hair dryer hidup mati terus</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>handuk gelas steril dibungkus plastik</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>110</th>\n","      <td>kamar mandi lucu</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>111</th>\n","      <td>ac dingin</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>119</th>\n","      <td>tata ruang tidak sumpek kasur nyenyak ac dingi...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>hair dryer hidup mati</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>air melimpah</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>jendela kamar bisa dibuka</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>144</th>\n","      <td>tv kabel tidak ada</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>dapat kamar horor</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>penerangan kamar bagus</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>kamar ada peredam suara</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>ac dingin saluran tv jernih</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>kamar ada colokan banyak</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>183</th>\n","      <td>aroma kamar harum</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>ac air panas berfungsi baik</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>192</th>\n","      <td>saluran tv gambar baik</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>ada air panas</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>221</th>\n","      <td>kebersihan balkon kamar mandi harus dit...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>223</th>\n","      <td>lemari baju debu</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>225</th>\n","      <td>kamar mandi tidak berdekatan shower mand...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>254</th>\n","      <td>ada makanan tertinggal disemutin</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>257</th>\n","      <td>pembuangan air toilet lancar</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>260</th>\n","      <td>kamar mandi toilet terpisah bagus</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>281</th>\n","      <td>air panas jos berasa</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>290</th>\n","      <td>ada bathtub air tidak menggenang tidak bec...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","13                  bau kamar harus bikin tidur nyaman    1     0\n","17                    kamar hotel mencekam menyeramkan    0     1\n","20                            kamar pakai karpet tebal    1     0\n","32                                        sprei bersih    1     0\n","33                                   dapat air mineral    1     0\n","39                          tidak ada hair dryer kamar    0     1\n","46                      lantai tujuh pemandangan keren    1     0\n","51                            stop kontak cukup banyak    1     0\n","55                 mesin cuci bisa digunakan ac dingin    1     0\n","57                                     ac kamar berasa    1     0\n","63                              meja kamar penuh semut    0     1\n","76                            kamar banyak stop kontak    1     0\n","79                         hair dryer hidup mati terus    0     1\n","90               handuk gelas steril dibungkus plastik    1     0\n","110                                   kamar mandi lucu    1     0\n","111                                          ac dingin    1     0\n","119  tata ruang tidak sumpek kasur nyenyak ac dingi...    1     0\n","130                              hair dryer hidup mati    0     1\n","132                                       air melimpah    1     0\n","143                          jendela kamar bisa dibuka    1     0\n","144                                 tv kabel tidak ada    0     1\n","152                                  dapat kamar horor    0     1\n","154                             penerangan kamar bagus    1     0\n","173                            kamar ada peredam suara    1     0\n","175                        ac dingin saluran tv jernih    1     0\n","177                           kamar ada colokan banyak    1     0\n","183                                  aroma kamar harum    1     0\n","191                        ac air panas berfungsi baik    1     0\n","192                             saluran tv gambar baik    1     0\n","201                                      ada air panas    1     0\n","221         kebersihan balkon kamar mandi harus dit...    0     1\n","223                                   lemari baju debu    0     1\n","225        kamar mandi tidak berdekatan shower mand...    1     0\n","254                   ada makanan tertinggal disemutin    0     1\n","257                       pembuangan air toilet lancar    1     0\n","260                  kamar mandi toilet terpisah bagus    1     0\n","281                               air panas jos berasa    1     0\n","290      ada bathtub air tidak menggenang tidak bec...    1     0"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fagaWoQjZDoz","executionInfo":{"status":"ok","timestamp":1632299886710,"user_tz":-420,"elapsed":22,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d55c7302-b702-4177-da27-7b7d54aa1928"},"source":["len(df_final_ev.query('Act != Pred'))"],"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["38"]},"metadata":{},"execution_count":77}]},{"cell_type":"markdown","metadata":{"id":"QfJCn_y3ouBj"},"source":["# Testing"]},{"cell_type":"code","metadata":{"id":"NzU1VwzHPISf","executionInfo":{"status":"ok","timestamp":1632300102178,"user_tz":-420,"elapsed":2548,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["model = load_model('/content/drive/My Drive/Thesis/Code/FixModel2/lstm_sentiment_kamar_0.902.h5')\n","labels=[\"negative\",\"positive\"]"],"execution_count":68,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"id":"sBsAlKLwPwxF","executionInfo":{"status":"ok","timestamp":1632300102187,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d7edccfa-d495-4e10-a393-f1a21848ed3d"},"source":["df_test = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/result_test.xlsx')\n","df_kamar = df_test[df_test[\"used aspect\"]==\"kamar\"]\n","df_kamar"],"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>196</th>\n","      <td>2020-12-19</td>\n","      <td>132</td>\n","      <td>ada mukena sajadah quran</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9914337396621704, 0.006892859935760498]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>2020-02-02</td>\n","      <td>17</td>\n","      <td>baru ini nemu hotel beri fasilitas perlengkapa...</td>\n","      <td>pegipegi</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9573993682861328, 0.02932160347700119]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>2020-07-29</td>\n","      <td>190</td>\n","      <td>hotel dilengkapi sarana ibadah ada tempat shol...</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9973828196525574, 0.002446563448756933]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>2020-08-21</td>\n","      <td>181</td>\n","      <td>keran air mandi keluar kecil</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9886293411254883, 0.010097062215209007]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>2020-03-13</td>\n","      <td>201</td>\n","      <td>pintu toilet sulit dikunci</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9993320107460022, 0.0005560118006542325]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>467</th>\n","      <td>2021-04-09</td>\n","      <td>92</td>\n","      <td>shower tidak_handy</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, pelayanan</td>\n","      <td>kamar</td>\n","      <td>pelayanan</td>\n","      <td>kamar</td>\n","      <td>pelayanan</td>\n","      <td>[0.9576437473297119, 0.015977786853909492]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","    </tr>\n","    <tr>\n","      <th>468</th>\n","      <td>2020-10-12</td>\n","      <td>162</td>\n","      <td>kamar enak</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, restoran</td>\n","      <td>kamar</td>\n","      <td>restoran</td>\n","      <td>kamar</td>\n","      <td>restoran</td>\n","      <td>[0.8782218098640442, 0.10956292599439621]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","    </tr>\n","    <tr>\n","      <th>469</th>\n","      <td>2021-08-17</td>\n","      <td>409</td>\n","      <td>lumayan bersih</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, restoran</td>\n","      <td>kamar</td>\n","      <td>restoran</td>\n","      <td>kamar</td>\n","      <td>restoran</td>\n","      <td>[0.35105466842651367, 0.24050332605838776]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","    </tr>\n","    <tr>\n","      <th>957</th>\n","      <td>2020-11-04</td>\n","      <td>387</td>\n","      <td>ada pancake</td>\n","      <td>agoda</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.33755457401275635, 0.26520946621894836]</td>\n","      <td>restoran</td>\n","      <td>kamar</td>\n","    </tr>\n","    <tr>\n","      <th>958</th>\n","      <td>2021-04-09</td>\n","      <td>348</td>\n","      <td>tidak_banyak varian</td>\n","      <td>booking</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.308249831199646, 0.2801421582698822]</td>\n","      <td>restoran</td>\n","      <td>kamar</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>276 rows Ã— 13 columns</p>\n","</div>"],"text/plain":["       tanggal   id  ... true aspect used aspect\n","196 2020-12-19  132  ...       kamar       kamar\n","197 2020-02-02   17  ...       kamar       kamar\n","198 2020-07-29  190  ...       kamar       kamar\n","199 2020-08-21  181  ...       kamar       kamar\n","200 2020-03-13  201  ...       kamar       kamar\n","..         ...  ...  ...         ...         ...\n","467 2021-04-09   92  ...       kamar       kamar\n","468 2020-10-12  162  ...       kamar       kamar\n","469 2021-08-17  409  ...       kamar       kamar\n","957 2020-11-04  387  ...    restoran       kamar\n","958 2021-04-09  348  ...    restoran       kamar\n","\n","[276 rows x 13 columns]"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","metadata":{"id":"xk4WFRMYQAr0","executionInfo":{"status":"ok","timestamp":1632300108957,"user_tz":-420,"elapsed":1279,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["data_test = df_kamar[\"text\"]\n","list_test = data_test.tolist()\n","\n","seq = tokenizer.texts_to_sequences(list_test)\n","padded = pad_sequences(seq, maxlen=max_seq_len)\n","pred = model.predict(padded)"],"execution_count":70,"outputs":[]},{"cell_type":"code","metadata":{"id":"Dl8XnRyAXCJh","executionInfo":{"status":"ok","timestamp":1632300114792,"user_tz":-420,"elapsed":752,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["y_test = []\n","for x in pred :\n","  y = labels[np.argmax(x)]\n","  # print(y)\n","  y_test += [y]"],"execution_count":71,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":742},"id":"F8Gmj716XG5k","executionInfo":{"status":"ok","timestamp":1632300114794,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"eef708da-435c-4eaa-9b65-fe2c46faee63"},"source":["df_kamar[\"sentiment\"]=y_test\n","df_kamar"],"execution_count":72,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>196</th>\n","      <td>2020-12-19</td>\n","      <td>132</td>\n","      <td>ada mukena sajadah quran</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9914337396621704, 0.006892859935760498]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>2020-02-02</td>\n","      <td>17</td>\n","      <td>baru ini nemu hotel beri fasilitas perlengkapa...</td>\n","      <td>pegipegi</td>\n","      <td>hotel</td>\n","      <td>hotel, kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>[0.9573993682861328, 0.02932160347700119]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>2020-07-29</td>\n","      <td>190</td>\n","      <td>hotel dilengkapi sarana ibadah ada tempat shol...</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9973828196525574, 0.002446563448756933]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>2020-08-21</td>\n","      <td>181</td>\n","      <td>keran air mandi keluar kecil</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9886293411254883, 0.010097062215209007]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>2020-03-13</td>\n","      <td>201</td>\n","      <td>pintu toilet sulit dikunci</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.9993320107460022, 0.0005560118006542325]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>467</th>\n","      <td>2021-04-09</td>\n","      <td>92</td>\n","      <td>shower tidak_handy</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, pelayanan</td>\n","      <td>kamar</td>\n","      <td>pelayanan</td>\n","      <td>kamar</td>\n","      <td>pelayanan</td>\n","      <td>[0.9576437473297119, 0.015977786853909492]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>468</th>\n","      <td>2020-10-12</td>\n","      <td>162</td>\n","      <td>kamar enak</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, restoran</td>\n","      <td>kamar</td>\n","      <td>restoran</td>\n","      <td>kamar</td>\n","      <td>restoran</td>\n","      <td>[0.8782218098640442, 0.10956292599439621]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>469</th>\n","      <td>2021-08-17</td>\n","      <td>409</td>\n","      <td>lumayan bersih</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>kamar, restoran</td>\n","      <td>kamar</td>\n","      <td>restoran</td>\n","      <td>kamar</td>\n","      <td>restoran</td>\n","      <td>[0.35105466842651367, 0.24050332605838776]</td>\n","      <td>kamar</td>\n","      <td>kamar</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>957</th>\n","      <td>2020-11-04</td>\n","      <td>387</td>\n","      <td>ada pancake</td>\n","      <td>agoda</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.33755457401275635, 0.26520946621894836]</td>\n","      <td>restoran</td>\n","      <td>kamar</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>958</th>\n","      <td>2021-04-09</td>\n","      <td>348</td>\n","      <td>tidak_banyak varian</td>\n","      <td>booking</td>\n","      <td>kamar</td>\n","      <td>kamar, hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>kamar</td>\n","      <td>hotel</td>\n","      <td>[0.308249831199646, 0.2801421582698822]</td>\n","      <td>restoran</td>\n","      <td>kamar</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>276 rows Ã— 14 columns</p>\n","</div>"],"text/plain":["       tanggal   id  ... used aspect sentiment\n","196 2020-12-19  132  ...       kamar  positive\n","197 2020-02-02   17  ...       kamar  positive\n","198 2020-07-29  190  ...       kamar  positive\n","199 2020-08-21  181  ...       kamar  negative\n","200 2020-03-13  201  ...       kamar  negative\n","..         ...  ...  ...         ...       ...\n","467 2021-04-09   92  ...       kamar  negative\n","468 2020-10-12  162  ...       kamar  positive\n","469 2021-08-17  409  ...       kamar  positive\n","957 2020-11-04  387  ...       kamar  negative\n","958 2021-04-09  348  ...       kamar  negative\n","\n","[276 rows x 14 columns]"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","metadata":{"id":"IfKu-iugXQaS","executionInfo":{"status":"ok","timestamp":1632300139918,"user_tz":-420,"elapsed":1861,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_result = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/all_result_test.xlsx')\n","df_append = df_result.append(df_kamar)\n","df_append.to_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/all_result_test.xlsx')"],"execution_count":73,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-JHCbYg-YYvL"},"source":["# Draft"]},{"cell_type":"markdown","metadata":{"id":"l2OZGkPj7LeR"},"source":["## Evaluate"]},{"cell_type":"code","metadata":{"id":"81QxZ-cE7NgK"},"source":["model = m_gru\n","labels=[\"negative\",\"positive\"]\n","ev_pred_sent = []\n","df_ev = df_train\n","ev_text = df_ev[\"clean text\"]\n","ev_act_sent=df_ev[\"sentiment\"]\n","list_ev = ev_text.tolist()\n","seq_ev = tokenizer.texts_to_sequences(list_ev)\n","padded_ev = pad_sequences(seq_ev, maxlen=max_seq_len)\n","ev_model = model.predict(padded_ev)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AKbkq1UmCG4z"},"source":["for x in ev_model :\n","  y = labels[np.argmax(x)]\n","  # print(y)\n","  ev_pred_sent += [y]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":202},"id":"Tnx80QRHCLcC","executionInfo":{"status":"ok","timestamp":1626944989728,"user_tz":-420,"elapsed":1795,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"d3350ffc-4844-462f-8288-7b8cb1a345fc"},"source":["ev_data = {'Text':ev_text,\n","        'Act':ev_act_sent,\n","        'Pred ':ev_pred_sent}\n","df_final_ev = pd.DataFrame(ev_data)\n","df_final_ev.to_excel('/content/drive/My Drive/Thesis/Code/Dataset/ev_sent.xlsx')\n","df_final_ev.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3579</th>\n","      <td>perlu tambah informasi lokasi hotel</td>\n","      <td>negative</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5281</th>\n","      <td>makanan tidak_ada kepastian bercampur halal no...</td>\n","      <td>negative</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>4591</th>\n","      <td>akses hotel menyeramkan gelap tidak_ada lampu ...</td>\n","      <td>negative</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>4178</th>\n","      <td>tempat pengap kotor sprei kotor</td>\n","      <td>negative</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>2030</th>\n","      <td>pemandangan langsung menghadap simpang_lima</td>\n","      <td>positive</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                   Text       Act     Pred \n","3579                perlu tambah informasi lokasi hotel  negative  negative\n","5281  makanan tidak_ada kepastian bercampur halal no...  negative  negative\n","4591  akses hotel menyeramkan gelap tidak_ada lampu ...  negative  negative\n","4178                    tempat pengap kotor sprei kotor  negative  negative\n","2030        pemandangan langsung menghadap simpang_lima  positive  positive"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"markdown","metadata":{"id":"1zAaGMepBh__"},"source":["## Testing"]},{"cell_type":"code","metadata":{"id":"fSIQ_K3rU9yj"},"source":["model = m_gru\n","labels=[\"negative\",\"positive\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DP_MLui3VBG8","executionInfo":{"status":"ok","timestamp":1625468943560,"user_tz":-420,"elapsed":547,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"dd9de272-dd86-480c-f953-58b3ab7b28d6"},"source":["df_testing = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/final_data_test.xlsx')\n","df_kamar = df_testing[df_testing[\"aspect\"]==\"kamar\"]\n","df_kamar.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","      <th>Unnamed: 6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>151</th>\n","      <td>2021-06-27</td>\n","      <td>2</td>\n","      <td>kebersihan oke</td>\n","      <td>pegipegi</td>\n","      <td>kamar</td>\n","      <td>NaN</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>2021-03-15</td>\n","      <td>114</td>\n","      <td>kebersihan oke</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>NaN</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>2021-02-08</td>\n","      <td>122</td>\n","      <td>ada kekurangan ac tidak_dingin</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>NaN</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>2020-12-19</td>\n","      <td>132</td>\n","      <td>ada mukena sajadah quran</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>NaN</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>155</th>\n","      <td>2020-12-11</td>\n","      <td>133</td>\n","      <td>kamar oke bersih disediakan alat sholat mukena...</td>\n","      <td>traveloka</td>\n","      <td>kamar</td>\n","      <td>NaN</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       tanggal   id  ... sentiment Unnamed: 6\n","151 2021-06-27    2  ...       NaN   positive\n","152 2021-03-15  114  ...       NaN   positive\n","153 2021-02-08  122  ...       NaN   negative\n","154 2020-12-19  132  ...       NaN   positive\n","155 2020-12-11  133  ...       NaN   positive\n","\n","[5 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":211}]},{"cell_type":"code","metadata":{"id":"hDx7OKrnVxuy"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LkRA9fxYVEU5"},"source":["data_test = df_kamar[\"text\"]\n","list_test = data_test.tolist()\n","\n","seq = tokenizer.texts_to_sequences(list_test)\n","padded = pad_sequences(seq, maxlen=max_seq_len)\n","pred = model.predict(padded)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eBWNBpLBSvi0","executionInfo":{"status":"ok","timestamp":1625468944151,"user_tz":-420,"elapsed":602,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"81d1a700-6743-4ebd-caa6-546008555229"},"source":["y_test = []\n","for x in pred :\n","  y = labels[np.argmax(x)]\n","  print(y)\n","  y_test += [y]"],"execution_count":null,"outputs":[{"output_type":"stream","text":["positive\n","positive\n","negative\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","negative\n","positive\n","negative\n","positive\n","positive\n","negative\n","negative\n","negative\n","negative\n","positive\n","positive\n","negative\n","negative\n","positive\n","negative\n","negative\n","negative\n","negative\n","negative\n","positive\n","negative\n","positive\n","positive\n","positive\n","negative\n","negative\n","positive\n","negative\n","negative\n","negative\n","positive\n","positive\n","negative\n","negative\n","negative\n","positive\n","positive\n","positive\n","negative\n","positive\n","negative\n","positive\n","positive\n","negative\n","negative\n","negative\n","negative\n","positive\n","negative\n","negative\n","positive\n","positive\n","negative\n","negative\n","negative\n","positive\n","positive\n","positive\n","negative\n","negative\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","negative\n","negative\n","positive\n","negative\n","negative\n","positive\n","positive\n","negative\n","negative\n","positive\n","negative\n","negative\n","negative\n","negative\n","negative\n","positive\n","negative\n","negative\n","negative\n","positive\n","negative\n","negative\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","negative\n","negative\n","positive\n","negative\n","negative\n","positive\n","positive\n","negative\n","positive\n","negative\n","negative\n","negative\n","positive\n","negative\n","positive\n","negative\n","negative\n","positive\n","negative\n","positive\n","negative\n","negative\n","positive\n","negative\n","positive\n","negative\n","negative\n","positive\n","positive\n","positive\n","negative\n","negative\n","negative\n","positive\n","negative\n","negative\n","positive\n","negative\n","positive\n","positive\n","negative\n","negative\n","positive\n","negative\n","positive\n","positive\n","negative\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","negative\n","positive\n","positive\n","negative\n","positive\n","negative\n","negative\n","negative\n","positive\n","negative\n","positive\n","negative\n","negative\n","positive\n","positive\n","positive\n","positive\n","negative\n","negative\n","positive\n","positive\n","negative\n","positive\n","negative\n","negative\n","negative\n","negative\n","negative\n","negative\n","positive\n","negative\n","negative\n","negative\n","negative\n","negative\n","positive\n","negative\n","negative\n","negative\n","negative\n","negative\n","positive\n","positive\n","positive\n","negative\n","negative\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n","positive\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"6hT6gKM48NOn"},"source":["## Evaluate Sentiment"]},{"cell_type":"code","metadata":{"id":"GZzPTe_oVF_p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626944998145,"user_tz":-420,"elapsed":512,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"314e89ee-fe24-4ad1-dd0b-8494fe8c528c"},"source":["ev_sent = model.predict_classes(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/sequential.py:455: UserWarning: `model.predict_classes()` is deprecated and will be removed after 2021-01-01. Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","  warnings.warn('`model.predict_classes()` is deprecated and '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"JI9ZyHH-8cYY"},"source":["decode_sent = np.argmax(Y_test, axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JSlN5TIH8pCG"},"source":["lab_sent = [\"negatif\",\"positif\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MehYEqFrAUpc"},"source":["def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":496},"id":"ZTR8GOUa9TJb","executionInfo":{"status":"ok","timestamp":1626944998968,"user_tz":-420,"elapsed":431,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"f2fca37a-08bb-4a81-d2cc-23d7d6077cab"},"source":["conf_matrix(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x576 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"kLeStDruKN9l","colab":{"base_uri":"https://localhost:8080/","height":605},"executionInfo":{"status":"ok","timestamp":1626944998975,"user_tz":-420,"elapsed":22,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"f4544c05-1305-45e7-93e2-75fd050c4593"},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XgjzN7Zi9ZCI","executionInfo":{"status":"ok","timestamp":1626944998976,"user_tz":-420,"elapsed":21,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"f8ad3627-81c6-44bd-d1d4-5df8fa392579"},"source":["from sklearn.metrics import accuracy_score\n","accuracy_score(ev_sent, decode_sent)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9182389937106918"]},"metadata":{"tags":[]},"execution_count":77}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_yL-H01We4JE","executionInfo":{"status":"ok","timestamp":1626945076238,"user_tz":-420,"elapsed":556,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"6077a9b5-fa51-410b-bbb4-29143006bdaf"},"source":["ev_train = model.predict_classes(X_train)\n","decode_train = np.argmax(Y_train, axis=1)\n","print(classification_report(ev_train, decode_train))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.98      0.99      0.98       352\n","           1       0.98      0.98      0.98       292\n","\n","    accuracy                           0.98       644\n","   macro avg       0.98      0.98      0.98       644\n","weighted avg       0.98      0.98      0.98       644\n","\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/sequential.py:455: UserWarning: `model.predict_classes()` is deprecated and will be removed after 2021-01-01. Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","  warnings.warn('`model.predict_classes()` is deprecated and '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oKEJidKP9kSa","executionInfo":{"status":"ok","timestamp":1626944998977,"user_tz":-420,"elapsed":18,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"65807be1-c1eb-472d-df1c-3958751f5810"},"source":["from sklearn.metrics import classification_report\n","print(classification_report(ev_sent, decode_sent))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.94      0.92      0.93       180\n","           1       0.89      0.92      0.91       138\n","\n","    accuracy                           0.92       318\n","   macro avg       0.92      0.92      0.92       318\n","weighted avg       0.92      0.92      0.92       318\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V_4mHIBD9sM1","executionInfo":{"status":"ok","timestamp":1626944998979,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"1e67dc84-a8c7-4cd6-b6df-fd0cd5b77222"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(ev_sent, decode_sent))\n","print('F1 score:', f1_score(ev_sent, decode_sent, average='macro'))\n","print('Recall:', recall_score(ev_sent, decode_sent, average='macro'))\n","print('Precision:', precision_score(ev_sent, decode_sent, average='macro'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy: 0.9182389937106918\n","F1 score: 0.9170545746388443\n","Recall: 0.9184782608695652\n","Precision: 0.9159330985915493\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":544},"id":"8jzXTeea90VA","executionInfo":{"status":"ok","timestamp":1626945271071,"user_tz":-420,"elapsed":838,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"77c460a8-d464-408f-c97e-0bf544f6ec61"},"source":["plt.title('Loss')\n","plt.plot(history_GRU.history['loss'], label='train')\n","plt.plot(history_GRU.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();\n","\n","plt.title('Accuracy')\n","plt.plot(history_GRU.history['acc'], label='train')\n","plt.plot(history_GRU.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"_2M0YBAp-fYL"},"source":[""],"execution_count":null,"outputs":[]}]}