{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Sentiment - Restoran","provenance":[],"collapsed_sections":["jCh20tTkBoF-","Wq6wLNiOSfP3","EJ64PtWnBddd","h4bzHfv6aklQ","6hT6gKM48NOn"],"mount_file_id":"1QZDGdjBbjv3Jm_-w9wFlwQuozH9AOEPl","authorship_tag":"ABX9TyNKhDt+W/Vn7pZ4Zn+BqfQK"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"2-qyyxYZSMyF","executionInfo":{"status":"ok","timestamp":1632299830032,"user_tz":-420,"elapsed":495,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["import keras\n","import numpy as np\n","import pandas as pd\n","import openpyxl\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","from keras.models import load_model\n","from nltk.corpus import stopwords\n","from nltk.tokenize import word_tokenize\n","import unicodedata\n","from collections import Counter\n","from imblearn.under_sampling import RandomUnderSampler\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","import warnings\n","import tensorflow as tf\n","warnings.simplefilter(action='ignore', category=FutureWarning)\n","np.random.seed(0)"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jCh20tTkBoF-"},"source":["# Data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"N7fAJvKISNR2","executionInfo":{"status":"ok","timestamp":1632300285745,"user_tz":-420,"elapsed":3067,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"b3c51637-46c9-46d0-e00f-b128983ac368"},"source":["df = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/data_training.xlsx', usecols=[\"clean text\",\"aspect\",\"sentiment\"])\n","df.head()"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 clean text aspect sentiment\n","0  shuttle gratis malioboro  harga  positive\n","1  dapat gratis course golf  harga  positive\n","2    gratis andong keliling  harga  positive\n","3              sesuai harga  harga  positive\n","4          harga terjangkau  harga  positive"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"wLSH6SnfSUsk","executionInfo":{"status":"ok","timestamp":1632300285747,"user_tz":-420,"elapsed":36,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df = df.drop_duplicates()"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"KQ-Ft7mQSXwt","executionInfo":{"status":"ok","timestamp":1632300285749,"user_tz":-420,"elapsed":37,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"2577b8f6-11c0-408d-9e9b-981a0ba42bc2"},"source":["df = df.dropna()\n","df.reset_index(drop=True)"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5653</th>\n","      <td>staff jutek bentak_bentak marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5654</th>\n","      <td>staff mengatur parkir marah_marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5655</th>\n","      <td>sajian sarapan lambat refill</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5656</th>\n","      <td>tidak_ada prokes terjaga tidak_ada social_dist...</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5657</th>\n","      <td>staff tidak_ramah tidak_paham sop</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5658 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                             clean text     aspect sentiment\n","0                              shuttle gratis malioboro      harga  positive\n","1                              dapat gratis course golf      harga  positive\n","2                                gratis andong keliling      harga  positive\n","3                                          sesuai harga      harga  positive\n","4                                      harga terjangkau      harga  positive\n","...                                                 ...        ...       ...\n","5653                    staff jutek bentak_bentak marah  pelayanan  negative\n","5654                  staff mengatur parkir marah_marah  pelayanan  negative\n","5655                       sajian sarapan lambat refill  pelayanan  negative\n","5656  tidak_ada prokes terjaga tidak_ada social_dist...  pelayanan  negative\n","5657                  staff tidak_ramah tidak_paham sop  pelayanan  negative\n","\n","[5658 rows x 3 columns]"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6DUF0jjkSZa4","executionInfo":{"status":"ok","timestamp":1632300285750,"user_tz":-420,"elapsed":35,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"b89856a4-aa2d-4425-809e-de5ba37acf83"},"source":["df.sentiment.value_counts()"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["positive    2905\n","negative    2753\n","Name: sentiment, dtype: int64"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"SmH2XLrJSa6a","executionInfo":{"status":"ok","timestamp":1632300285752,"user_tz":-420,"elapsed":35,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_train = df.sample(frac = 1) #shuffle"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"Hk9ggR7JScx9","executionInfo":{"status":"ok","timestamp":1632300285752,"user_tz":-420,"elapsed":34,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["clean_text = df_train[[\"clean text\",\"aspect\",\"sentiment\"]]\n","# wo_punc_text = df_train[\"text_wo_punc\"]\n","# wo_neg_text = df_train[\"text_wo_neg\"]\n","# stemming = df_train[\"stemming\"]\n","label = df_train[\"sentiment\"]"],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I2cy3RgtKHi4","executionInfo":{"status":"ok","timestamp":1632300285753,"user_tz":-420,"elapsed":35,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"4cad688c-70cb-4270-b3d2-fbb9cd3adcf8"},"source":["t = df_train[df_train[\"aspect\"]==\"restoran\"]\n","text = t[\"clean text\"] \n","label = t[\"sentiment\"]\n","print(t)"],"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["                                             clean text    aspect sentiment\n","5211                     menu sarapan sedikit item menu  restoran  negative\n","5207                            kualitas makanan kurang  restoran  negative\n","5225                               daging keras digigit  restoran  negative\n","4949                             menu sarapan lauk basi  restoran  negative\n","2153                           sarapan oke harga segitu  restoran  positive\n","...                                                 ...       ...       ...\n","4905                              makanan dingin dingin  restoran  negative\n","5217  makanan seperti koki baru belajar masak rasa t...  restoran  negative\n","5043                            menu sarapan malam sama  restoran  negative\n","4956                                         habis nasi  restoran  negative\n","4927                                        rasa hambar  restoran  negative\n","\n","[851 rows x 3 columns]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"t2liyz4B2cxt","executionInfo":{"status":"ok","timestamp":1632300285754,"user_tz":-420,"elapsed":35,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"eb8156f5-90bf-49c6-9ccf-33254d199ec8"},"source":["t.sentiment.value_counts().plot(kind='bar', title='Count (target)');\n","print(t.sentiment.value_counts())"],"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["positive    429\n","negative    422\n","Name: sentiment, dtype: int64\n"]},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXcAAAEqCAYAAADu0BDXAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAATpUlEQVR4nO3df7BdZX3v8fenBEFECD9OERMwKFSKv4CmCNPWsTLtFa2FTpHir0aHTma4eG97sVraOpZa7FWnVaFVb2lxiIIVilq46m3HIpZSRRoQ8EdQg73cJKJEIBGlIMj3/rGf4E56Ts5Jck5W8pz3a2bPWetZz9rre5KTT57z7GftnapCktSXnxi6AEnS7DPcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLU0gykeSOJE8cupbJJNmr1TcxdC3a9RjuGlSSVyZZmeT7Se5O8n+S/PxOuG4lOXKabucBl1bVf7RzPpvkt+a6tqlsef2qehj4AKM6pc0Y7hpMknOB9wB/ChwCHA68Dzh1yLpgNCoGlgGXzeJzLpit5xrzYWBZq1d6nOGuQSTZH3grcE5VfayqflBVj1TV/66qN7Y+eyV5T5Jvtcd7NoVYktcmuWGL53x8NJ7k0iTvTfLJJA8k+UKSZ7Rj17dTbmu/MfzGJCU+H9hQVWvbOW8DfgH4y3bOX7b2C5OsSfK9JDcn+YWxes5PclWSy5J8D3htkiOSXN9q+qdW42Vj55yY5HNJNiS5LckLt3b9Vt/9wIk78NehDhnuGspJwN7Ax7fS5w8ZhdaxwPOAE4A3b8M1zgT+GDgAWA28DaCqXtCOP6+q9q2qKyY59znA1zbtVNUfAv8CvL6d8/p26N9afQcyGkX/XZK9x57nVOAqYCFweetzE3AQcD7wmk0dkywCPglc0J7vd4GPJpnYyvUBVjH685EeZ7hrKAcB362qR7fS51XAW6vqnqpazyioX7OV/lv6eFXd1K5xOaMQnqmFwAPTdaqqy6rq3qp6tKr+HNgLeOZYl89X1d9X1WPABPCzwFuq6odVdQNwzVjfVwOfqqpPVdVjVfVpYCXwkmnKeKDVKz3OcNdQ7gUOnmYe+qnAXWP7d7W2mfr22PaDwL7bcO79wJOn65Tkd5OsSrIxyQZgf+DgsS5rxrafCtxXVQ9OcfxpwMvblMyG9nw/Dxw6TRlPBjZMV6vmF8NdQ/k88DBw2lb6fItR4G1yeGsD+AGwz6YDSZ4yy/XdDvzUFm2bvYVqm19/E3AGcEBVLQQ2ApninLuBA5PsM9Z22Nj2GuBDVbVw7PGkqnr7ZNcf89PAbTP5pjR/GO4aRFVtBN4CvDfJaUn2SbJnklOSvLN1+1vgzW29+cGt/6YXH28DnpXk2DbHff42lvAd4OlbOX4TsLDNg091zpOBR4H1wIIkbwH2m+oJq+ouRtMs5yd5QpKTgJeNdbkMeFmS/5JkjyR7J3lhksVT1dzqOxC4cSvfi+Yhw12DaXPU5zJ6kXQ9o5Hr64G/b10uYBSGtwNfAm5pbVTV1xmttvkn4BvAZitnZuB8YEWb/jhjktp+CFzKaB58kwuB05Pcn+Qi4B+BfwC+zmjK6CE2n2aZzKsYvZh8b/termD0GwxVtYbRC7B/wI//PN7Ij/+dbnl9gFcCK9qad+lx8cM6pMm1Oz//BThu041Mc3CNK4A7quqPtuPcvRj9BvOCqrpn1ovTbs1wl3aiJD8L3Af8O/DLjH5LOamqvjhoYerOXNwxJ2lqTwE+xmgp6FrgbINdc8GRuyR1yBdUJalDhrskdWiXmHM/+OCDa8mSJUOXIUm7lZtvvvm7VTXp+/nvEuG+ZMkSVq5cOXQZkrRbSXLXVMeclpGkDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1aJe4iWl3seS8Tw5dQlf+79tfOnQJUrccuUtShwx3SeqQ0zJSB5wynF09TBk6cpekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUMzDvckeyT5YpJPtP0jknwhyeokVyR5Qmvfq+2vbseXzE3pkqSpbMvI/beBVWP77wDeXVVHAvcDZ7X2s4D7W/u7Wz9J0k40o3BPshh4KfA3bT/Ai4CrWpcVwGlt+9S2Tzt+cusvSdpJZjpyfw/wJuCxtn8QsKGqHm37a4FFbXsRsAagHd/Y+m8myfIkK5OsXL9+/XaWL0mazLThnuRXgHuq6ubZvHBVXVxVS6tq6cTExGw+tSTNezN547CfA341yUuAvYH9gAuBhUkWtNH5YmBd678OOAxYm2QBsD9w76xXLkma0rQj96r6/apaXFVLgDOBz1TVq4DrgNNbt2XA1W37mrZPO/6ZqqpZrVqStFU7ss7994Bzk6xmNKd+SWu/BDiotZ8LnLdjJUqSttU2vZ97VX0W+Gzb/iZwwiR9HgJePgu1SZK2k3eoSlKHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1KFpwz3J3kluSnJbkq8k+ePWfkSSLyRZneSKJE9o7Xu1/dXt+JK5/RYkSVuaycj9YeBFVfU84FjgxUlOBN4BvLuqjgTuB85q/c8C7m/t7279JEk70bThXiPfb7t7tkcBLwKuau0rgNPa9qltn3b85CSZtYolSdOa0Zx7kj2S3ArcA3wauBPYUFWPti5rgUVtexGwBqAd3wgcNMlzLk+yMsnK9evX79h3IUnazIzCvap+VFXHAouBE4Cjd/TCVXVxVS2tqqUTExM7+nSSpDHbtFqmqjYA1wEnAQuTLGiHFgPr2vY64DCAdnx/4N5ZqVaSNCMzWS0zkWRh234i8EvAKkYhf3rrtgy4um1f0/Zpxz9TVTWbRUuStm7B9F04FFiRZA9G/xlcWVWfSPJV4CNJLgC+CFzS+l8CfCjJauA+4Mw5qFuStBXThntV3Q4cN0n7NxnNv2/Z/hDw8lmpTpK0XbxDVZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA5NG+5JDktyXZKvJvlKkt9u7Qcm+XSSb7SvB7T2JLkoyeoktyc5fq6/CUnS5mYycn8UeENVHQOcCJyT5BjgPODaqjoKuLbtA5wCHNUey4H3z3rVkqStmjbcq+ruqrqlbT8ArAIWAacCK1q3FcBpbftU4IM1ciOwMMmhs165JGlK2zTnnmQJcBzwBeCQqrq7Hfo2cEjbXgSsGTttbWuTJO0kMw73JPsCHwV+p6q+N36sqgqobblwkuVJViZZuX79+m05VZI0jRmFe5I9GQX75VX1sdb8nU3TLe3rPa19HXDY2OmLW9tmquriqlpaVUsnJia2t35J0iRmslomwCXAqqp619iha4BlbXsZcPVY+2+2VTMnAhvHpm8kSTvBghn0+TngNcCXktza2v4AeDtwZZKzgLuAM9qxTwEvAVYDDwKvm9WKJUnTmjbcq+oGIFMcPnmS/gWcs4N1SZJ2gHeoSlKHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1KFpwz3JB5Lck+TLY20HJvl0km+0rwe09iS5KMnqJLcnOX4ui5ckTW4mI/dLgRdv0XYecG1VHQVc2/YBTgGOao/lwPtnp0xJ0raYNtyr6nrgvi2aTwVWtO0VwGlj7R+skRuBhUkOna1iJUkzs71z7odU1d1t+9vAIW17EbBmrN/a1iZJ2ol2+AXVqiqgtvW8JMuTrEyycv369TtahiRpzPaG+3c2Tbe0r/e09nXAYWP9Fre2/6SqLq6qpVW1dGJiYjvLkCRNZnvD/RpgWdteBlw91v6bbdXMicDGsekbSdJOsmC6Dkn+FnghcHCStcAfAW8HrkxyFnAXcEbr/ingJcBq4EHgdXNQsyRpGtOGe1W9YopDJ0/St4BzdrQoSdKO8Q5VSeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KH5iTck7w4ydeSrE5y3lxcQ5I0tVkP9yR7AO8FTgGOAV6R5JjZvo4kaWpzMXI/AVhdVd+sqh8CHwFOnYPrSJKmsGAOnnMRsGZsfy3w/C07JVkOLG+730/ytTmoZb46GPju0EVMJ+8YugINwJ/N2fW0qQ7MRbjPSFVdDFw81PV7lmRlVS0dug5pS/5s7jxzMS2zDjhsbH9xa5Mk7SRzEe7/BhyV5IgkTwDOBK6Zg+tIkqYw69MyVfVoktcD/wjsAXygqr4y29fRVjndpV2VP5s7Sapq6BokSbPMO1QlqUOGuyR1yHCXpA4Z7pLmXJInJnnm0HXMJ4Z7JzLy6iRvafuHJzlh6LqkJC8DbgX+oe0fm8Tl0XPMcO/H+4CTgFe0/QcYvYGbNLTzGb3n1AaAqroVOGLIguaDwd5+QLPu+VV1fJIvAlTV/e0mMmloj1TVxiTjba7BnmOGez8eaW+3XABJJoDHhi1JAuArSV4J7JHkKOC/A58buKbuOS3Tj4uAjwM/meRtwA3Anw5bkgTAfwOeBTwMfBjYCPzOoBXNA96h2pEkRwMnAwGurapVA5ckkeT4qrpl6DrmG8O9E0kuAj5SVf66q11KkuuApwBXAVdU1ZcHLmlecFqmHzcDb05yZ5I/S+J7ZmuXUFW/CPwisB74qyRfSvLmgcvqniP3ziQ5EPh1Rm+1fHhVHTVwSdLjkjwHeBPwG1Xlaq455Mi9P0cCRzP6+K07Bq5FIslPJzk/yZeAv2C0UmbxwGV1z5F7J5K8E/g14E7gCuDjVbVh2KokSPJ5Rj+TV1bVt4auZ75wnXs/7gROqqpd/sOHNb9U1UlD1zAfOXLfzSU5uqruSHL8ZMddgqahJLmyqs5o0zHjQROgquq5A5U2Lxjuu7kkF1fV8rbcbEtVVS/a6UVJQJJDq+ruJE+b7HhV3bWza5pPDPdOJNm7qh6ark3a2ZK8o6p+b7o2zS5Xy/RjspuXvKFJu4JfmqTtlJ1exTzjC6q7uSRPARYBT0xyHKP5TID9gH0GK0zzXpKzgf8KPD3J7WOHngz86zBVzR9Oy+zmkiwDXgssBVaOHXoAuLSqPjZEXVKS/YEDgP8JnDd26IGqum+YquYPw70TSX69qj46dB3SVJL8JLD3pv2q+n8DltM9w303l+TVVXVZkjcwyQcgVNW7BihLelz7mL13AU8F7mF09/SqqnrWoIV1zhdUd39Pal/3ZTSXueVDGtoFwInA16vqCEZvS33jsCX1z5G7pDmVZGVVLU1yG3BcVT2W5Laqet7QtfXMkXsnkrwzyX5J9kxybZL1SV49dF0SsCHJvsD1wOVJLgR+MHBN3XPk3okkt1bVsUl+DfgV4FzgekdHGlqSJwEPMVqm+ypgf+Dyqrp30MI65zr3fmz6u3wp8HeTfNq8NIiqGh+lrxiskHnGcO/HJ5LcAfwHcHaSCUajJWlQSR7gP6/k2sjovow3VNU3d35V/XNapiPtU5g2VtWPkuwD7FdV3x66Ls1vSf4EWAt8mNHUzJnAM4BbgLOr6oXDVdcvw70TSfYEzgZe0Jr+GfhfVfXIcFVJMNnKmLHXiFw1M0dcLdOP9wM/A7yvPY5vbdLQHkxyRpKfaI8z+PGUoaPLOeLIvRNTjI4cFWlwSZ4OXAicxCjMbwT+B7AO+JmqumHA8rrlC6r9+FGSZ1TVnfD4P6gfDVyTRHvB9GVTHDbY54jh3o83Atcl2bTyYAnwuuHKkUaS/BSjKcJDqurZSZ4L/GpVXTBwaV1zzr0f/wr8FfAYcF/b/vygFUkjfw38PvAIQFXdzmjFjOaQ4d6PDwJHAH8C/AXwdOBDg1YkjexTVTdt0fboIJXMI07L9OPZVXXM2P51Sb46WDXSj303yTNoK2OSnA7cPWxJ/TPc+3FLkhOr6kaAJM9n809mkoZyDnAxcHSSdcC/M3qPGc0hl0J2Iskq4JnApk+3ORz4GqNff6uqnjtUbZrfkuwFnM7oRf4Dge8x+pl865B19c6Rez9ePHQB0hSuBjYweruBbw1cy7zhyF3SnEry5ap69tB1zDeulpE01z6X5DlDFzHfOHKXNKfaqq0jGb2Q+jCjd4b0daA5ZrhLmlNJnjZZe1XdtbNrmU8Md0nqkHPuktQhw12SOmS4S1KHDHdJ6pDhLkkd+v9SLTu/Ohn5LAAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"Wq6wLNiOSfP3"},"source":["# Modelling"]},{"cell_type":"markdown","metadata":{"id":"Jkk7TrKBAous"},"source":["## Neural Network"]},{"cell_type":"markdown","metadata":{"id":"cBwwrNpv-0_2"},"source":["### Var"]},{"cell_type":"code","metadata":{"id":"7Iqx73ywSepp","executionInfo":{"status":"ok","timestamp":1632300285756,"user_tz":-420,"elapsed":34,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from tensorflow.keras.models import Sequential, Model\n","from tensorflow.keras.layers import Activation, GlobalAveragePooling1D, GlobalMaxPooling1D, BatchNormalization, Concatenate, Input, Embedding\n","from tensorflow.keras.layers import SimpleRNN, GRU, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, SpatialDropout1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras import initializers, regularizers, constraints, optimizers, layers\n","from tensorflow.keras.regularizers import l2\n","import keras.backend as K\n","import os\n","from keras import callbacks"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"WJvsrddDRIhk","executionInfo":{"status":"ok","timestamp":1632300285757,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["earlystopping = callbacks.EarlyStopping(monitor =\"val_loss\", \n","                                        mode =\"min\", patience = 5, \n","                                        restore_best_weights = True)"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_BOmSXv1TEG2","executionInfo":{"status":"ok","timestamp":1632300288547,"user_tz":-420,"elapsed":2821,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"3382e718-830d-4e77-8b17-00bd1a4a15b9"},"source":["pip install keras_self_attention"],"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: keras_self_attention in /usr/local/lib/python3.7/dist-packages (0.50.0)\n","Requirement already satisfied: Keras in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (2.6.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (1.19.5)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1A0quJ_fTGeY","executionInfo":{"status":"ok","timestamp":1632300288548,"user_tz":-420,"elapsed":19,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"4c01dc27-a5a8-49bb-ff1a-6456d5530d87"},"source":["max_features =20000\n","tokenizer = Tokenizer() \n","tokenizer.fit_on_texts(text.values) \n","max_seq_len = max([len(i.split()) for i in text])\n","\n","X = tokenizer.texts_to_sequences(text.values)\n","X = pad_sequences(X, maxlen=max_seq_len)\n","Y = pd.get_dummies(label).values\n","print(\"Shape of data tensor:\", X.shape)\n","print(\"Shape of label tensor:\",Y.shape)"],"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of data tensor: (851, 16)\n","Shape of label tensor: (851, 2)\n"]}]},{"cell_type":"code","metadata":{"id":"Q6s50objTIlr","executionInfo":{"status":"ok","timestamp":1632300288549,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.33, random_state = 1)"],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"id":"q9WgthpgNToG","executionInfo":{"status":"ok","timestamp":1632300288549,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["unit = 100\n","dropout = 0.3\n","batch = 128\n","epoch = 100\n","output = 100\n","dense = 6\n","kernel = 3\n","filter = 128"],"execution_count":36,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DcM4p2ImTLdL"},"source":["### RNN"]},{"cell_type":"code","metadata":{"id":"oBV6f8FETKtp","executionInfo":{"status":"ok","timestamp":1632300288550,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_rnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_rnn = Sequential()\n","  model_rnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_rnn.add(Dense(32, activation='relu'))\n","  model_rnn.add(SpatialDropout1D(dropout))\n","  model_rnn.add(SimpleRNN(unit))\n","  model_rnn.add(Dense(2, activation='sigmoid'))\n","  model_rnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_rnn.summary())\n","\n","  return model_rnn"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fiBDUCglTQJn","executionInfo":{"status":"ok","timestamp":1632300294943,"user_tz":-420,"elapsed":6407,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"4a67baf7-c097-45f7-db0a-b8c69bad4267"},"source":["m_rnn = get_model_rnn(X_train, Y_train)\n","history_RNN = m_rnn.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 16, 100)           85900     \n","_________________________________________________________________\n","spatial_dropout1d (SpatialDr (None, 16, 100)           0         \n","_________________________________________________________________\n","simple_rnn (SimpleRNN)       (None, 100)               20100     \n","_________________________________________________________________\n","dense (Dense)                (None, 2)                 202       \n","=================================================================\n","Total params: 106,202\n","Trainable params: 106,202\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 2s 96ms/step - loss: 0.6915 - acc: 0.5329 - val_loss: 0.6791 - val_acc: 0.6404\n","Epoch 2/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.6668 - acc: 0.6952 - val_loss: 0.6687 - val_acc: 0.6404\n","Epoch 3/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.6419 - acc: 0.7939 - val_loss: 0.6599 - val_acc: 0.7193\n","Epoch 4/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.6029 - acc: 0.8465 - val_loss: 0.6410 - val_acc: 0.7544\n","Epoch 5/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.5569 - acc: 0.9232 - val_loss: 0.6161 - val_acc: 0.7368\n","Epoch 6/100\n","4/4 [==============================] - 0s 24ms/step - loss: 0.5014 - acc: 0.9013 - val_loss: 0.5858 - val_acc: 0.7982\n","Epoch 7/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.4202 - acc: 0.9364 - val_loss: 0.5396 - val_acc: 0.7807\n","Epoch 8/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.3418 - acc: 0.9452 - val_loss: 0.4959 - val_acc: 0.8246\n","Epoch 9/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.2650 - acc: 0.9496 - val_loss: 0.4635 - val_acc: 0.8333\n","Epoch 10/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.2136 - acc: 0.9452 - val_loss: 0.4349 - val_acc: 0.8246\n","Epoch 11/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.1717 - acc: 0.9627 - val_loss: 0.4027 - val_acc: 0.8684\n","Epoch 12/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.1273 - acc: 0.9781 - val_loss: 0.3712 - val_acc: 0.8509\n","Epoch 13/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.1086 - acc: 0.9781 - val_loss: 0.3523 - val_acc: 0.8772\n","Epoch 14/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.0916 - acc: 0.9846 - val_loss: 0.3319 - val_acc: 0.8772\n","Epoch 15/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0769 - acc: 0.9868 - val_loss: 0.3269 - val_acc: 0.9123\n","Epoch 16/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0663 - acc: 0.9934 - val_loss: 0.3137 - val_acc: 0.9211\n","Epoch 17/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0534 - acc: 0.9890 - val_loss: 0.2996 - val_acc: 0.9211\n","Epoch 18/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0478 - acc: 0.9912 - val_loss: 0.2937 - val_acc: 0.9211\n","Epoch 19/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0403 - acc: 0.9978 - val_loss: 0.2841 - val_acc: 0.9211\n","Epoch 20/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0335 - acc: 0.9978 - val_loss: 0.3021 - val_acc: 0.8947\n","Epoch 21/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0298 - acc: 1.0000 - val_loss: 0.2805 - val_acc: 0.9123\n","Epoch 22/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0267 - acc: 1.0000 - val_loss: 0.2740 - val_acc: 0.9123\n","Epoch 23/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0235 - acc: 0.9978 - val_loss: 0.2749 - val_acc: 0.9211\n","Epoch 24/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0241 - acc: 1.0000 - val_loss: 0.2965 - val_acc: 0.8947\n","Epoch 25/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0221 - acc: 0.9978 - val_loss: 0.2687 - val_acc: 0.9211\n","Epoch 26/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0178 - acc: 1.0000 - val_loss: 0.2745 - val_acc: 0.9035\n","Epoch 27/100\n","4/4 [==============================] - 0s 28ms/step - loss: 0.0209 - acc: 1.0000 - val_loss: 0.2716 - val_acc: 0.9211\n","Epoch 28/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0161 - acc: 0.9978 - val_loss: 0.2575 - val_acc: 0.9211\n","Epoch 29/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.0154 - acc: 0.9978 - val_loss: 0.3010 - val_acc: 0.9035\n","Epoch 30/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0155 - acc: 0.9978 - val_loss: 0.2727 - val_acc: 0.9211\n","Epoch 31/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.0122 - acc: 1.0000 - val_loss: 0.2651 - val_acc: 0.9298\n","Epoch 32/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.0124 - acc: 1.0000 - val_loss: 0.2610 - val_acc: 0.9298\n","Epoch 33/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0106 - acc: 1.0000 - val_loss: 0.2498 - val_acc: 0.9298\n","Epoch 34/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.0120 - acc: 1.0000 - val_loss: 0.2501 - val_acc: 0.9298\n","Epoch 35/100\n","4/4 [==============================] - 0s 22ms/step - loss: 0.0089 - acc: 1.0000 - val_loss: 0.2681 - val_acc: 0.9211\n","Epoch 36/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0083 - acc: 1.0000 - val_loss: 0.2681 - val_acc: 0.9211\n","Epoch 37/100\n","4/4 [==============================] - 0s 23ms/step - loss: 0.0081 - acc: 1.0000 - val_loss: 0.2611 - val_acc: 0.9298\n","Epoch 38/100\n","4/4 [==============================] - 0s 21ms/step - loss: 0.0073 - acc: 1.0000 - val_loss: 0.2600 - val_acc: 0.9298\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rc0j9TxoTR-A","executionInfo":{"status":"ok","timestamp":1632300294944,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"98577c33-12a7-49f3-99b5-2582d93c66f3"},"source":["score,acc_rnn = m_rnn.evaluate(X_test, Y_test)"],"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 3ms/step - loss: 0.4722 - acc: 0.8648\n"]}]},{"cell_type":"code","metadata":{"id":"jWN9Q8QuTVXR","executionInfo":{"status":"ok","timestamp":1632300294944,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_rnn.save('/content/drive/My Drive/Thesis/Code/Model/rnn_sentiment_model.h5')"],"execution_count":40,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"f_XeLWSjTX9o"},"source":["### GRU"]},{"cell_type":"code","metadata":{"id":"2zuM2gB8TXN8","executionInfo":{"status":"ok","timestamp":1632300294945,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_gru(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_gru = Sequential()\n","  model_gru.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_gru.add(Dense(32, activation='relu'))\n","  model_gru.add(SpatialDropout1D(dropout))\n","  model_gru.add(GRU(unit))\n","  model_gru.add(Dense(2, activation='sigmoid'))\n","  model_gru.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_gru.summary())\n","\n","  return model_gru"],"execution_count":41,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iYLfLwNYTehH","executionInfo":{"status":"ok","timestamp":1632300302293,"user_tz":-420,"elapsed":7357,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6e148433-5b96-4208-a48a-de990ef902be"},"source":["m_gru = get_model_gru(X_train, Y_train)\n","history_GRU = m_gru.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_1 (Embedding)      (None, 16, 100)           85900     \n","_________________________________________________________________\n","spatial_dropout1d_1 (Spatial (None, 16, 100)           0         \n","_________________________________________________________________\n","gru (GRU)                    (None, 100)               60600     \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 146,702\n","Trainable params: 146,702\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 2s 181ms/step - loss: 0.6913 - acc: 0.5197 - val_loss: 0.6865 - val_acc: 0.5877\n","Epoch 2/100\n","4/4 [==============================] - 0s 51ms/step - loss: 0.6819 - acc: 0.7368 - val_loss: 0.6794 - val_acc: 0.7193\n","Epoch 3/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.6686 - acc: 0.8311 - val_loss: 0.6685 - val_acc: 0.7281\n","Epoch 4/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.6489 - acc: 0.8553 - val_loss: 0.6506 - val_acc: 0.7368\n","Epoch 5/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.6161 - acc: 0.9232 - val_loss: 0.6222 - val_acc: 0.7807\n","Epoch 6/100\n","4/4 [==============================] - 0s 55ms/step - loss: 0.5667 - acc: 0.9298 - val_loss: 0.5817 - val_acc: 0.8070\n","Epoch 7/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.4987 - acc: 0.9167 - val_loss: 0.5303 - val_acc: 0.7982\n","Epoch 8/100\n","4/4 [==============================] - 0s 50ms/step - loss: 0.4164 - acc: 0.9057 - val_loss: 0.4820 - val_acc: 0.8246\n","Epoch 9/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.3520 - acc: 0.9057 - val_loss: 0.4379 - val_acc: 0.8070\n","Epoch 10/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.2687 - acc: 0.9561 - val_loss: 0.4010 - val_acc: 0.8333\n","Epoch 11/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.2105 - acc: 0.9693 - val_loss: 0.3681 - val_acc: 0.8333\n","Epoch 12/100\n","4/4 [==============================] - 0s 50ms/step - loss: 0.1690 - acc: 0.9671 - val_loss: 0.3521 - val_acc: 0.8158\n","Epoch 13/100\n","4/4 [==============================] - 0s 48ms/step - loss: 0.1389 - acc: 0.9759 - val_loss: 0.3326 - val_acc: 0.8333\n","Epoch 14/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.1078 - acc: 0.9737 - val_loss: 0.3202 - val_acc: 0.8509\n","Epoch 15/100\n","4/4 [==============================] - 0s 51ms/step - loss: 0.0844 - acc: 0.9781 - val_loss: 0.3285 - val_acc: 0.8246\n","Epoch 16/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.0707 - acc: 0.9825 - val_loss: 0.3062 - val_acc: 0.8684\n","Epoch 17/100\n","4/4 [==============================] - 0s 50ms/step - loss: 0.0566 - acc: 0.9890 - val_loss: 0.3423 - val_acc: 0.8421\n","Epoch 18/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.0447 - acc: 0.9890 - val_loss: 0.3091 - val_acc: 0.8684\n","Epoch 19/100\n","4/4 [==============================] - 0s 48ms/step - loss: 0.0352 - acc: 0.9956 - val_loss: 0.3492 - val_acc: 0.8509\n","Epoch 20/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.0266 - acc: 0.9912 - val_loss: 0.3043 - val_acc: 0.8947\n","Epoch 21/100\n","4/4 [==============================] - 0s 48ms/step - loss: 0.0290 - acc: 0.9956 - val_loss: 0.3193 - val_acc: 0.8684\n","Epoch 22/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.0274 - acc: 0.9956 - val_loss: 0.3248 - val_acc: 0.8509\n","Epoch 23/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.0193 - acc: 0.9978 - val_loss: 0.2786 - val_acc: 0.8860\n","Epoch 24/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.0238 - acc: 0.9934 - val_loss: 0.2917 - val_acc: 0.8860\n","Epoch 25/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.0171 - acc: 0.9978 - val_loss: 0.3813 - val_acc: 0.8684\n","Epoch 26/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.0172 - acc: 0.9956 - val_loss: 0.3075 - val_acc: 0.8684\n","Epoch 27/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.0123 - acc: 0.9978 - val_loss: 0.2997 - val_acc: 0.9123\n","Epoch 28/100\n","4/4 [==============================] - 0s 45ms/step - loss: 0.0100 - acc: 0.9978 - val_loss: 0.3285 - val_acc: 0.8684\n"]}]},{"cell_type":"code","metadata":{"id":"l9uQanamTf88","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300302295,"user_tz":-420,"elapsed":66,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d2784e36-d409-4d70-f6a0-636a4d13cb31"},"source":["score,acc_gru = m_gru.evaluate(X_test, Y_test)"],"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 5ms/step - loss: 0.4356 - acc: 0.8754\n"]}]},{"cell_type":"code","metadata":{"id":"cOS5Ff2ZTkEX","executionInfo":{"status":"ok","timestamp":1632300302301,"user_tz":-420,"elapsed":58,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_gru.save('/content/drive/My Drive/Thesis/Code/Model/gru_harga_model.h5')"],"execution_count":44,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hcWT_dKBTmvQ"},"source":["### LSTM"]},{"cell_type":"code","metadata":{"id":"3wX4AVxuTo4H","executionInfo":{"status":"ok","timestamp":1632300302302,"user_tz":-420,"elapsed":58,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_LSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_LSTM = Sequential()\n","  model_LSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_LSTM.add(Dense(32, activation='relu'))\n","  model_LSTM.add(SpatialDropout1D(dropout))\n","  model_LSTM.add(LSTM(unit))\n","  model_LSTM.add(Dense(2, activation='sigmoid'))\n","  model_LSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_LSTM.summary())\n","  \n","  return model_LSTM"],"execution_count":45,"outputs":[]},{"cell_type":"code","metadata":{"id":"GN-idepNTrNu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300310392,"user_tz":-420,"elapsed":8143,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"07a48a4b-b31b-4d44-a64c-4129776f1789"},"source":["m_lstm = get_model_LSTM(X_train, Y_train)\n","history_LSTM = m_lstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_2 (Embedding)      (None, 16, 100)           85900     \n","_________________________________________________________________\n","spatial_dropout1d_2 (Spatial (None, 16, 100)           0         \n","_________________________________________________________________\n","lstm (LSTM)                  (None, 100)               80400     \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 166,502\n","Trainable params: 166,502\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 3s 272ms/step - loss: 0.6925 - acc: 0.5132 - val_loss: 0.6906 - val_acc: 0.5088\n","Epoch 2/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.6876 - acc: 0.5702 - val_loss: 0.6871 - val_acc: 0.5965\n","Epoch 3/100\n","4/4 [==============================] - 0s 50ms/step - loss: 0.6815 - acc: 0.6754 - val_loss: 0.6813 - val_acc: 0.7281\n","Epoch 4/100\n","4/4 [==============================] - 0s 58ms/step - loss: 0.6714 - acc: 0.8268 - val_loss: 0.6720 - val_acc: 0.8246\n","Epoch 5/100\n","4/4 [==============================] - 0s 52ms/step - loss: 0.6537 - acc: 0.8991 - val_loss: 0.6582 - val_acc: 0.8070\n","Epoch 6/100\n","4/4 [==============================] - 0s 52ms/step - loss: 0.6273 - acc: 0.8860 - val_loss: 0.6371 - val_acc: 0.7982\n","Epoch 7/100\n","4/4 [==============================] - 0s 52ms/step - loss: 0.5876 - acc: 0.8399 - val_loss: 0.6105 - val_acc: 0.7719\n","Epoch 8/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.5392 - acc: 0.7873 - val_loss: 0.5764 - val_acc: 0.7368\n","Epoch 9/100\n","4/4 [==============================] - 0s 56ms/step - loss: 0.4920 - acc: 0.8399 - val_loss: 0.5457 - val_acc: 0.8421\n","Epoch 10/100\n","4/4 [==============================] - 0s 55ms/step - loss: 0.4214 - acc: 0.9123 - val_loss: 0.5105 - val_acc: 0.8421\n","Epoch 11/100\n","4/4 [==============================] - 0s 55ms/step - loss: 0.3711 - acc: 0.9101 - val_loss: 0.4685 - val_acc: 0.8158\n","Epoch 12/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.2844 - acc: 0.9518 - val_loss: 0.4378 - val_acc: 0.8333\n","Epoch 13/100\n","4/4 [==============================] - 0s 60ms/step - loss: 0.2129 - acc: 0.9452 - val_loss: 0.4137 - val_acc: 0.8070\n","Epoch 14/100\n","4/4 [==============================] - 0s 55ms/step - loss: 0.1595 - acc: 0.9452 - val_loss: 0.4020 - val_acc: 0.8333\n","Epoch 15/100\n","4/4 [==============================] - 0s 61ms/step - loss: 0.1403 - acc: 0.9539 - val_loss: 0.3809 - val_acc: 0.8509\n","Epoch 16/100\n","4/4 [==============================] - 0s 52ms/step - loss: 0.1076 - acc: 0.9627 - val_loss: 0.3938 - val_acc: 0.8070\n","Epoch 17/100\n","4/4 [==============================] - 0s 55ms/step - loss: 0.0929 - acc: 0.9693 - val_loss: 0.3447 - val_acc: 0.8596\n","Epoch 18/100\n","4/4 [==============================] - 0s 60ms/step - loss: 0.0698 - acc: 0.9868 - val_loss: 0.3319 - val_acc: 0.8596\n","Epoch 19/100\n","4/4 [==============================] - 0s 56ms/step - loss: 0.0576 - acc: 0.9912 - val_loss: 0.3288 - val_acc: 0.8596\n","Epoch 20/100\n","4/4 [==============================] - 0s 52ms/step - loss: 0.0427 - acc: 0.9912 - val_loss: 0.3514 - val_acc: 0.8684\n","Epoch 21/100\n","4/4 [==============================] - 0s 56ms/step - loss: 0.0376 - acc: 0.9912 - val_loss: 0.3670 - val_acc: 0.8772\n","Epoch 22/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.0349 - acc: 0.9890 - val_loss: 0.3507 - val_acc: 0.8684\n","Epoch 23/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.0262 - acc: 0.9956 - val_loss: 0.3398 - val_acc: 0.8860\n","Epoch 24/100\n","4/4 [==============================] - 0s 54ms/step - loss: 0.0217 - acc: 0.9978 - val_loss: 0.3404 - val_acc: 0.8684\n"]}]},{"cell_type":"code","metadata":{"id":"GFNUlAeVTsiT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300314538,"user_tz":-420,"elapsed":4158,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"28f49074-7ed2-4341-a6b7-08a0628bbc76"},"source":["score,acc_lstm = m_lstm.evaluate(X_test, Y_test)"],"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 6ms/step - loss: 0.3277 - acc: 0.8932\n"]}]},{"cell_type":"code","metadata":{"id":"DNaWHiB8Tuva","executionInfo":{"status":"ok","timestamp":1632300314538,"user_tz":-420,"elapsed":18,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_lstm.save('/content/drive/My Drive/Thesis/Code/Model/lstm_sentiment_model.h5')"],"execution_count":48,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xTG40dBOAxrH"},"source":["### CNN"]},{"cell_type":"code","metadata":{"id":"qrk04_vWTwcj","executionInfo":{"status":"ok","timestamp":1632300314539,"user_tz":-420,"elapsed":18,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras import layers\n","from tensorflow.keras.layers import Concatenate, Input, Embedding, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, GlobalAveragePooling1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras.models import Model\n","import matplotlib.pyplot as plt\n","import os"],"execution_count":49,"outputs":[]},{"cell_type":"code","metadata":{"id":"V_JQTnXqT2fA","executionInfo":{"status":"ok","timestamp":1632300314539,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_cnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cnn = Sequential()\n","  model_cnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cnn.add(Conv1D(filters=filter, kernel_size=kernel, padding='same', strides=1, activation='relu'))\n","  model_cnn.add(MaxPool1D(pool_size=2))\n","  # model_cnn.add(Dense(32, activation='relu'))\n","  model_cnn.add(SpatialDropout1D(dropout))\n","  model_cnn.add(Flatten())\n","  model_cnn.add(Dense(2, activation='sigmoid'))\n","  model_cnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cnn.summary())\n","\n","  return model_cnn"],"execution_count":50,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kiHoXRfxT3-t","executionInfo":{"status":"ok","timestamp":1632300326385,"user_tz":-420,"elapsed":11862,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"50b8dd66-2ec1-4154-c874-dd28b1a47375"},"source":["m_cnn = get_model_cnn(X_train, Y_train)\n","history_cnn = m_cnn.fit(X_train, Y_train,\n","                      epochs=epoch,\n","                      batch_size=128,\n","                      validation_split=0.2)"],"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_3\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_3 (Embedding)      (None, 16, 100)           85900     \n","_________________________________________________________________\n","conv1d (Conv1D)              (None, 16, 128)           38528     \n","_________________________________________________________________\n","max_pooling1d (MaxPooling1D) (None, 8, 128)            0         \n","_________________________________________________________________\n","spatial_dropout1d_3 (Spatial (None, 8, 128)            0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 1024)              0         \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 2)                 2050      \n","=================================================================\n","Total params: 126,478\n","Trainable params: 126,478\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 1s 70ms/step - loss: 0.6937 - acc: 0.4956 - val_loss: 0.6928 - val_acc: 0.4825\n","Epoch 2/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.6856 - acc: 0.5263 - val_loss: 0.6894 - val_acc: 0.4912\n","Epoch 3/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.6795 - acc: 0.7039 - val_loss: 0.6846 - val_acc: 0.7632\n","Epoch 4/100\n","4/4 [==============================] - 0s 32ms/step - loss: 0.6690 - acc: 0.9145 - val_loss: 0.6785 - val_acc: 0.7456\n","Epoch 5/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.6565 - acc: 0.9298 - val_loss: 0.6699 - val_acc: 0.7982\n","Epoch 6/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.6383 - acc: 0.9496 - val_loss: 0.6568 - val_acc: 0.8158\n","Epoch 7/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.6124 - acc: 0.9583 - val_loss: 0.6391 - val_acc: 0.8509\n","Epoch 8/100\n","4/4 [==============================] - 0s 28ms/step - loss: 0.5783 - acc: 0.9408 - val_loss: 0.6136 - val_acc: 0.8421\n","Epoch 9/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.5318 - acc: 0.9583 - val_loss: 0.5791 - val_acc: 0.8509\n","Epoch 10/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.4762 - acc: 0.9693 - val_loss: 0.5375 - val_acc: 0.8333\n","Epoch 11/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.4085 - acc: 0.9693 - val_loss: 0.4901 - val_acc: 0.8421\n","Epoch 12/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.3425 - acc: 0.9737 - val_loss: 0.4402 - val_acc: 0.8596\n","Epoch 13/100\n","4/4 [==============================] - 0s 31ms/step - loss: 0.2758 - acc: 0.9737 - val_loss: 0.3918 - val_acc: 0.9035\n","Epoch 14/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.2160 - acc: 0.9803 - val_loss: 0.3505 - val_acc: 0.8772\n","Epoch 15/100\n","4/4 [==============================] - 0s 29ms/step - loss: 0.1681 - acc: 0.9803 - val_loss: 0.3178 - val_acc: 0.8860\n","Epoch 16/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.1320 - acc: 0.9781 - val_loss: 0.2900 - val_acc: 0.9035\n","Epoch 17/100\n","4/4 [==============================] - 0s 29ms/step - loss: 0.1053 - acc: 0.9868 - val_loss: 0.2705 - val_acc: 0.9035\n","Epoch 18/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0851 - acc: 0.9890 - val_loss: 0.2652 - val_acc: 0.9035\n","Epoch 19/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0708 - acc: 0.9912 - val_loss: 0.2554 - val_acc: 0.9035\n","Epoch 20/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0591 - acc: 0.9956 - val_loss: 0.2425 - val_acc: 0.9035\n","Epoch 21/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0490 - acc: 0.9956 - val_loss: 0.2347 - val_acc: 0.9035\n","Epoch 22/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0394 - acc: 0.9956 - val_loss: 0.2376 - val_acc: 0.9035\n","Epoch 23/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0354 - acc: 0.9956 - val_loss: 0.2429 - val_acc: 0.9035\n","Epoch 24/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0294 - acc: 0.9956 - val_loss: 0.2376 - val_acc: 0.9123\n","Epoch 25/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0253 - acc: 0.9956 - val_loss: 0.2348 - val_acc: 0.9123\n","Epoch 26/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0257 - acc: 0.9956 - val_loss: 0.2336 - val_acc: 0.9035\n","Epoch 27/100\n","4/4 [==============================] - 0s 29ms/step - loss: 0.0182 - acc: 0.9978 - val_loss: 0.2352 - val_acc: 0.9035\n","Epoch 28/100\n","4/4 [==============================] - 0s 28ms/step - loss: 0.0175 - acc: 0.9978 - val_loss: 0.2369 - val_acc: 0.9123\n","Epoch 29/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0144 - acc: 1.0000 - val_loss: 0.2374 - val_acc: 0.9123\n","Epoch 30/100\n","4/4 [==============================] - 0s 28ms/step - loss: 0.0141 - acc: 1.0000 - val_loss: 0.2337 - val_acc: 0.9123\n","Epoch 31/100\n","4/4 [==============================] - 0s 28ms/step - loss: 0.0126 - acc: 1.0000 - val_loss: 0.2330 - val_acc: 0.9123\n","Epoch 32/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0115 - acc: 1.0000 - val_loss: 0.2295 - val_acc: 0.9211\n","Epoch 33/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0104 - acc: 1.0000 - val_loss: 0.2287 - val_acc: 0.9211\n","Epoch 34/100\n","4/4 [==============================] - 0s 28ms/step - loss: 0.0086 - acc: 1.0000 - val_loss: 0.2329 - val_acc: 0.9211\n","Epoch 35/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0079 - acc: 1.0000 - val_loss: 0.2368 - val_acc: 0.9211\n","Epoch 36/100\n","4/4 [==============================] - 0s 28ms/step - loss: 0.0081 - acc: 1.0000 - val_loss: 0.2367 - val_acc: 0.9211\n","Epoch 37/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0070 - acc: 1.0000 - val_loss: 0.2369 - val_acc: 0.9211\n","Epoch 38/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0059 - acc: 1.0000 - val_loss: 0.2389 - val_acc: 0.9211\n","Epoch 39/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0064 - acc: 1.0000 - val_loss: 0.2411 - val_acc: 0.9298\n","Epoch 40/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0053 - acc: 1.0000 - val_loss: 0.2447 - val_acc: 0.9298\n","Epoch 41/100\n","4/4 [==============================] - 0s 33ms/step - loss: 0.0056 - acc: 1.0000 - val_loss: 0.2481 - val_acc: 0.9298\n","Epoch 42/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0048 - acc: 1.0000 - val_loss: 0.2500 - val_acc: 0.9298\n","Epoch 43/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0047 - acc: 1.0000 - val_loss: 0.2499 - val_acc: 0.9298\n","Epoch 44/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0049 - acc: 1.0000 - val_loss: 0.2495 - val_acc: 0.9298\n","Epoch 45/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0040 - acc: 1.0000 - val_loss: 0.2478 - val_acc: 0.9298\n","Epoch 46/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0039 - acc: 1.0000 - val_loss: 0.2487 - val_acc: 0.9298\n","Epoch 47/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0030 - acc: 1.0000 - val_loss: 0.2501 - val_acc: 0.9298\n","Epoch 48/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0034 - acc: 1.0000 - val_loss: 0.2530 - val_acc: 0.9298\n","Epoch 49/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0028 - acc: 1.0000 - val_loss: 0.2551 - val_acc: 0.9298\n","Epoch 50/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0027 - acc: 1.0000 - val_loss: 0.2564 - val_acc: 0.9298\n","Epoch 51/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0031 - acc: 1.0000 - val_loss: 0.2574 - val_acc: 0.9298\n","Epoch 52/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0024 - acc: 1.0000 - val_loss: 0.2585 - val_acc: 0.9298\n","Epoch 53/100\n","4/4 [==============================] - 0s 29ms/step - loss: 0.0024 - acc: 1.0000 - val_loss: 0.2588 - val_acc: 0.9298\n","Epoch 54/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0026 - acc: 1.0000 - val_loss: 0.2599 - val_acc: 0.9298\n","Epoch 55/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0029 - acc: 1.0000 - val_loss: 0.2613 - val_acc: 0.9211\n","Epoch 56/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0021 - acc: 1.0000 - val_loss: 0.2632 - val_acc: 0.9123\n","Epoch 57/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0025 - acc: 1.0000 - val_loss: 0.2631 - val_acc: 0.9211\n","Epoch 58/100\n","4/4 [==============================] - 0s 28ms/step - loss: 0.0023 - acc: 1.0000 - val_loss: 0.2638 - val_acc: 0.9211\n","Epoch 59/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0021 - acc: 1.0000 - val_loss: 0.2634 - val_acc: 0.9298\n","Epoch 60/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0018 - acc: 1.0000 - val_loss: 0.2639 - val_acc: 0.9298\n","Epoch 61/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0020 - acc: 1.0000 - val_loss: 0.2665 - val_acc: 0.9211\n","Epoch 62/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0017 - acc: 1.0000 - val_loss: 0.2690 - val_acc: 0.9211\n","Epoch 63/100\n","4/4 [==============================] - 0s 28ms/step - loss: 0.0021 - acc: 1.0000 - val_loss: 0.2716 - val_acc: 0.9123\n","Epoch 64/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0015 - acc: 1.0000 - val_loss: 0.2739 - val_acc: 0.9123\n","Epoch 65/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0016 - acc: 1.0000 - val_loss: 0.2750 - val_acc: 0.9123\n","Epoch 66/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0018 - acc: 1.0000 - val_loss: 0.2743 - val_acc: 0.9123\n","Epoch 67/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0014 - acc: 1.0000 - val_loss: 0.2748 - val_acc: 0.9123\n","Epoch 68/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0016 - acc: 1.0000 - val_loss: 0.2761 - val_acc: 0.9123\n","Epoch 69/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0013 - acc: 1.0000 - val_loss: 0.2761 - val_acc: 0.9123\n","Epoch 70/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0015 - acc: 1.0000 - val_loss: 0.2767 - val_acc: 0.9211\n","Epoch 71/100\n","4/4 [==============================] - 0s 27ms/step - loss: 0.0013 - acc: 1.0000 - val_loss: 0.2787 - val_acc: 0.9123\n","Epoch 72/100\n","4/4 [==============================] - 0s 29ms/step - loss: 0.0013 - acc: 1.0000 - val_loss: 0.2802 - val_acc: 0.9123\n","Epoch 73/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0012 - acc: 1.0000 - val_loss: 0.2802 - val_acc: 0.9123\n","Epoch 74/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0012 - acc: 1.0000 - val_loss: 0.2801 - val_acc: 0.9123\n","Epoch 75/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0011 - acc: 1.0000 - val_loss: 0.2807 - val_acc: 0.9123\n","Epoch 76/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0013 - acc: 1.0000 - val_loss: 0.2818 - val_acc: 0.9123\n","Epoch 77/100\n","4/4 [==============================] - 0s 25ms/step - loss: 0.0011 - acc: 1.0000 - val_loss: 0.2829 - val_acc: 0.9123\n","Epoch 78/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0013 - acc: 1.0000 - val_loss: 0.2848 - val_acc: 0.9123\n","Epoch 79/100\n","4/4 [==============================] - 0s 29ms/step - loss: 0.0011 - acc: 1.0000 - val_loss: 0.2872 - val_acc: 0.9123\n","Epoch 80/100\n","4/4 [==============================] - 0s 26ms/step - loss: 0.0011 - acc: 1.0000 - val_loss: 0.2901 - val_acc: 0.9123\n","Epoch 81/100\n","4/4 [==============================] - 0s 29ms/step - loss: 9.9620e-04 - acc: 1.0000 - val_loss: 0.2921 - val_acc: 0.9123\n","Epoch 82/100\n","4/4 [==============================] - 0s 29ms/step - loss: 0.0011 - acc: 1.0000 - val_loss: 0.2943 - val_acc: 0.9123\n","Epoch 83/100\n","4/4 [==============================] - 0s 26ms/step - loss: 7.8595e-04 - acc: 1.0000 - val_loss: 0.2953 - val_acc: 0.9123\n","Epoch 84/100\n","4/4 [==============================] - 0s 27ms/step - loss: 9.6175e-04 - acc: 1.0000 - val_loss: 0.2950 - val_acc: 0.9123\n","Epoch 85/100\n","4/4 [==============================] - 0s 27ms/step - loss: 9.1184e-04 - acc: 1.0000 - val_loss: 0.2939 - val_acc: 0.9123\n","Epoch 86/100\n","4/4 [==============================] - 0s 30ms/step - loss: 9.2719e-04 - acc: 1.0000 - val_loss: 0.2937 - val_acc: 0.9123\n","Epoch 87/100\n","4/4 [==============================] - 0s 27ms/step - loss: 9.6264e-04 - acc: 1.0000 - val_loss: 0.2942 - val_acc: 0.9123\n","Epoch 88/100\n","4/4 [==============================] - 0s 26ms/step - loss: 8.1255e-04 - acc: 1.0000 - val_loss: 0.2951 - val_acc: 0.9123\n","Epoch 89/100\n","4/4 [==============================] - 0s 28ms/step - loss: 8.4629e-04 - acc: 1.0000 - val_loss: 0.2958 - val_acc: 0.9123\n","Epoch 90/100\n","4/4 [==============================] - 0s 27ms/step - loss: 7.8690e-04 - acc: 1.0000 - val_loss: 0.2971 - val_acc: 0.9123\n","Epoch 91/100\n","4/4 [==============================] - 0s 31ms/step - loss: 8.7938e-04 - acc: 1.0000 - val_loss: 0.2975 - val_acc: 0.9035\n","Epoch 92/100\n","4/4 [==============================] - 0s 29ms/step - loss: 6.4416e-04 - acc: 1.0000 - val_loss: 0.2972 - val_acc: 0.9035\n","Epoch 93/100\n","4/4 [==============================] - 0s 26ms/step - loss: 8.5209e-04 - acc: 1.0000 - val_loss: 0.2969 - val_acc: 0.9035\n","Epoch 94/100\n","4/4 [==============================] - 0s 25ms/step - loss: 6.8545e-04 - acc: 1.0000 - val_loss: 0.2976 - val_acc: 0.9035\n","Epoch 95/100\n","4/4 [==============================] - 0s 27ms/step - loss: 6.9887e-04 - acc: 1.0000 - val_loss: 0.2982 - val_acc: 0.9035\n","Epoch 96/100\n","4/4 [==============================] - 0s 27ms/step - loss: 5.4035e-04 - acc: 1.0000 - val_loss: 0.2988 - val_acc: 0.9035\n","Epoch 97/100\n","4/4 [==============================] - 0s 28ms/step - loss: 7.1088e-04 - acc: 1.0000 - val_loss: 0.3000 - val_acc: 0.9035\n","Epoch 98/100\n","4/4 [==============================] - 0s 25ms/step - loss: 6.6625e-04 - acc: 1.0000 - val_loss: 0.3000 - val_acc: 0.9035\n","Epoch 99/100\n","4/4 [==============================] - 0s 26ms/step - loss: 6.2694e-04 - acc: 1.0000 - val_loss: 0.3005 - val_acc: 0.9035\n","Epoch 100/100\n","4/4 [==============================] - 0s 25ms/step - loss: 4.7621e-04 - acc: 1.0000 - val_loss: 0.3010 - val_acc: 0.9035\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R8lCvNZcT5nt","executionInfo":{"status":"ok","timestamp":1632300326386,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c61fe09b-3f43-4977-f49d-e0ab96573285"},"source":["score,acc_cnn = m_cnn.evaluate(X_test, Y_test)"],"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 3ms/step - loss: 0.4851 - acc: 0.8968\n"]}]},{"cell_type":"code","metadata":{"id":"uISwQfIKT7c-","executionInfo":{"status":"ok","timestamp":1632300326386,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_cnn.save('/content/drive/My Drive/Thesis/Code/Model/cnn_aspect_model.h5')"],"execution_count":53,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DHTDUWbYA2wP"},"source":["### BLSTM"]},{"cell_type":"code","metadata":{"id":"V4juzmHFT9aI","executionInfo":{"status":"ok","timestamp":1632300326387,"user_tz":-420,"elapsed":9,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_BLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_BLSTM = Sequential()\n","  model_BLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_BLSTM.add(Dense(32, activation='relu'))\n","  model_BLSTM.add((SpatialDropout1D(dropout)))\n","  model_BLSTM.add(Bidirectional(LSTM(unit)))\n","  model_BLSTM.add(Dense(2, activation='sigmoid'))\n","  model_BLSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_BLSTM.summary())\n","  return model_BLSTM"],"execution_count":54,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jkcOCbDXUAzq","executionInfo":{"status":"ok","timestamp":1632300335877,"user_tz":-420,"elapsed":9498,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"32205e52-13e5-484f-8b66-a056937c276f"},"source":["m_blstm = get_model_BLSTM(X_train, Y_train)\n","history_BLSTM = m_blstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_4\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_4 (Embedding)      (None, 16, 100)           85900     \n","_________________________________________________________________\n","spatial_dropout1d_4 (Spatial (None, 16, 100)           0         \n","_________________________________________________________________\n","bidirectional (Bidirectional (None, 200)               160800    \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 2)                 402       \n","=================================================================\n","Total params: 247,102\n","Trainable params: 247,102\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 4s 338ms/step - loss: 0.6925 - acc: 0.5241 - val_loss: 0.6914 - val_acc: 0.5000\n","Epoch 2/100\n","4/4 [==============================] - 0s 88ms/step - loss: 0.6889 - acc: 0.5285 - val_loss: 0.6898 - val_acc: 0.4825\n","Epoch 3/100\n","4/4 [==============================] - 0s 93ms/step - loss: 0.6840 - acc: 0.5154 - val_loss: 0.6850 - val_acc: 0.5000\n","Epoch 4/100\n","4/4 [==============================] - 0s 94ms/step - loss: 0.6740 - acc: 0.5965 - val_loss: 0.6760 - val_acc: 0.7281\n","Epoch 5/100\n","4/4 [==============================] - 0s 95ms/step - loss: 0.6573 - acc: 0.8465 - val_loss: 0.6589 - val_acc: 0.7456\n","Epoch 6/100\n","4/4 [==============================] - 0s 94ms/step - loss: 0.6250 - acc: 0.8860 - val_loss: 0.6244 - val_acc: 0.7807\n","Epoch 7/100\n","4/4 [==============================] - 0s 92ms/step - loss: 0.5401 - acc: 0.9342 - val_loss: 0.5339 - val_acc: 0.8158\n","Epoch 8/100\n","4/4 [==============================] - 0s 90ms/step - loss: 0.3660 - acc: 0.9123 - val_loss: 0.4197 - val_acc: 0.8158\n","Epoch 9/100\n","4/4 [==============================] - 0s 92ms/step - loss: 0.1876 - acc: 0.9496 - val_loss: 0.4490 - val_acc: 0.8596\n","Epoch 10/100\n","4/4 [==============================] - 0s 94ms/step - loss: 0.1275 - acc: 0.9605 - val_loss: 0.5002 - val_acc: 0.8509\n","Epoch 11/100\n","4/4 [==============================] - 0s 93ms/step - loss: 0.1032 - acc: 0.9759 - val_loss: 0.5300 - val_acc: 0.8596\n","Epoch 12/100\n","4/4 [==============================] - 0s 92ms/step - loss: 0.0870 - acc: 0.9803 - val_loss: 0.5728 - val_acc: 0.8509\n","Epoch 13/100\n","4/4 [==============================] - 0s 95ms/step - loss: 0.0638 - acc: 0.9868 - val_loss: 0.6357 - val_acc: 0.8421\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fwpOGPOoUCc5","executionInfo":{"status":"ok","timestamp":1632300340200,"user_tz":-420,"elapsed":4338,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"447384f6-3ab1-464a-85b0-5dcec3b1faa8"},"source":["score,acc_blstm = m_blstm.evaluate(X_test, Y_test)"],"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 8ms/step - loss: 0.3652 - acc: 0.8648\n"]}]},{"cell_type":"code","metadata":{"id":"W3fxKXCwUEm6","executionInfo":{"status":"ok","timestamp":1632300340201,"user_tz":-420,"elapsed":11,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_blstm.save('/content/drive/My Drive/Thesis/Code/Model/blstm_aspect_model.h5')"],"execution_count":57,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4cvyCrSDA7al"},"source":["### ABLSTM"]},{"cell_type":"code","metadata":{"id":"rzMIDKo1UGGq","executionInfo":{"status":"ok","timestamp":1632300340201,"user_tz":-420,"elapsed":9,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from keras.models import Sequential\n","from keras.layers import Embedding, LSTM, Dense, Dropout, Bidirectional, Flatten\n","import matplotlib.pyplot as plt\n","from keras_self_attention import SeqSelfAttention, SeqWeightedAttention\n","from keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","def get_model_ABLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_ABLSTM = Sequential()\n","  model_ABLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_ABLSTM.add(Dense(32, activation='tanh'))\n","  model_ABLSTM.add(SpatialDropout1D(dropout))\n","  model_ABLSTM.add(Bidirectional(LSTM(unit, return_sequences=True)))\n","  model_ABLSTM.add(SeqWeightedAttention())\n","  model_ABLSTM.add(Dense(2, activation='sigmoid'))\n","  model_ABLSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_ABLSTM.summary())\n","  \n","  return model_ABLSTM"],"execution_count":58,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kefMlp8EUIPr","executionInfo":{"status":"ok","timestamp":1632300350821,"user_tz":-420,"elapsed":10627,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"43128247-a7c7-4872-b3c0-1b247de28ad2"},"source":["m_ablstm = get_model_ABLSTM(X_train, Y_train)\n","history_ABLSTM = m_ablstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_5 (Embedding)      (None, 16, 100)           85900     \n","_________________________________________________________________\n","spatial_dropout1d_5 (Spatial (None, 16, 100)           0         \n","_________________________________________________________________\n","bidirectional_1 (Bidirection (None, 16, 200)           160800    \n","_________________________________________________________________\n","seq_weighted_attention (SeqW (None, 200)               201       \n","_________________________________________________________________\n","dense_5 (Dense)              (None, 2)                 402       \n","=================================================================\n","Total params: 247,303\n","Trainable params: 247,303\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 5s 364ms/step - loss: 0.6927 - acc: 0.5110 - val_loss: 0.6926 - val_acc: 0.4825\n","Epoch 2/100\n","4/4 [==============================] - 0s 96ms/step - loss: 0.6913 - acc: 0.5175 - val_loss: 0.6921 - val_acc: 0.4825\n","Epoch 3/100\n","4/4 [==============================] - 0s 95ms/step - loss: 0.6891 - acc: 0.5088 - val_loss: 0.6908 - val_acc: 0.4825\n","Epoch 4/100\n","4/4 [==============================] - 0s 97ms/step - loss: 0.6838 - acc: 0.5110 - val_loss: 0.6852 - val_acc: 0.4825\n","Epoch 5/100\n","4/4 [==============================] - 0s 98ms/step - loss: 0.6706 - acc: 0.5811 - val_loss: 0.6674 - val_acc: 0.6754\n","Epoch 6/100\n","4/4 [==============================] - 0s 98ms/step - loss: 0.6277 - acc: 0.8553 - val_loss: 0.6102 - val_acc: 0.8246\n","Epoch 7/100\n","4/4 [==============================] - 0s 96ms/step - loss: 0.5040 - acc: 0.9254 - val_loss: 0.4937 - val_acc: 0.8333\n","Epoch 8/100\n","4/4 [==============================] - 0s 103ms/step - loss: 0.3148 - acc: 0.9583 - val_loss: 0.4432 - val_acc: 0.8158\n","Epoch 9/100\n","4/4 [==============================] - 0s 98ms/step - loss: 0.2106 - acc: 0.9518 - val_loss: 0.4892 - val_acc: 0.8070\n","Epoch 10/100\n","4/4 [==============================] - 0s 103ms/step - loss: 0.1532 - acc: 0.9605 - val_loss: 0.5440 - val_acc: 0.8158\n","Epoch 11/100\n","4/4 [==============================] - 0s 97ms/step - loss: 0.0952 - acc: 0.9781 - val_loss: 0.5771 - val_acc: 0.8333\n","Epoch 12/100\n","4/4 [==============================] - 0s 95ms/step - loss: 0.0892 - acc: 0.9781 - val_loss: 0.5901 - val_acc: 0.8509\n","Epoch 13/100\n","4/4 [==============================] - 0s 99ms/step - loss: 0.0708 - acc: 0.9868 - val_loss: 0.6516 - val_acc: 0.8421\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WbpASkA7UKHi","executionInfo":{"status":"ok","timestamp":1632300355102,"user_tz":-420,"elapsed":4287,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"fc29679e-8275-454a-d196-e88551fe7ef1"},"source":["score,acc_ablstm = m_ablstm.evaluate(X_test, Y_test)"],"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 9ms/step - loss: 0.4362 - acc: 0.8541\n"]}]},{"cell_type":"code","metadata":{"id":"6za6cclSULso","executionInfo":{"status":"ok","timestamp":1632300355103,"user_tz":-420,"elapsed":12,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_ablstm.save('/content/drive/My Drive/Thesis/Code/Model/ablstm_sentiment_model.h5')"],"execution_count":61,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CNQOwZDkBB2R"},"source":["### CNNLSTM"]},{"cell_type":"code","metadata":{"id":"LdijuuFWUO9E","executionInfo":{"status":"ok","timestamp":1632300355104,"user_tz":-420,"elapsed":11,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_clstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_clstm = Sequential()\n","  model_clstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_clstm.add(Conv1D(filters=filter, kernel_size=kernel, padding='same', activation='relu'))\n","  model_clstm.add(MaxPool1D(pool_size=2))\n","  # model_clstm.add(Dense(32, activation='relu'))\n","  model_clstm.add(SpatialDropout1D(dropout))\n","  model_clstm.add(LSTM(unit))\n","  model_clstm.add(Dense(2, activation='sigmoid'))\n","  model_clstm.compile(optimizer='nadam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_clstm.summary())\n","  return model_clstm"],"execution_count":62,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c1zoXGvgUQ3A","executionInfo":{"status":"ok","timestamp":1632300362362,"user_tz":-420,"elapsed":7267,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"157c8061-d0a5-45fa-8116-fc38278dad70"},"source":["m_clstm = get_model_clstm(X_train, Y_train)\n","history_CLSTM = m_clstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_6\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_6 (Embedding)      (None, 16, 100)           85900     \n","_________________________________________________________________\n","conv1d_1 (Conv1D)            (None, 16, 128)           38528     \n","_________________________________________________________________\n","max_pooling1d_1 (MaxPooling1 (None, 8, 128)            0         \n","_________________________________________________________________\n","spatial_dropout1d_6 (Spatial (None, 8, 128)            0         \n","_________________________________________________________________\n","lstm_3 (LSTM)                (None, 100)               91600     \n","_________________________________________________________________\n","dense_6 (Dense)              (None, 2)                 202       \n","=================================================================\n","Total params: 216,230\n","Trainable params: 216,230\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 3s 203ms/step - loss: 0.6930 - acc: 0.5022 - val_loss: 0.6922 - val_acc: 0.4825\n","Epoch 2/100\n","4/4 [==============================] - 0s 54ms/step - loss: 0.6893 - acc: 0.5680 - val_loss: 0.6896 - val_acc: 0.4912\n","Epoch 3/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.6812 - acc: 0.5877 - val_loss: 0.6813 - val_acc: 0.5088\n","Epoch 4/100\n","4/4 [==============================] - 0s 50ms/step - loss: 0.6589 - acc: 0.6513 - val_loss: 0.6509 - val_acc: 0.7281\n","Epoch 5/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.5866 - acc: 0.8860 - val_loss: 0.7321 - val_acc: 0.4825\n","Epoch 6/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.5441 - acc: 0.7961 - val_loss: 0.5231 - val_acc: 0.8509\n","Epoch 7/100\n","4/4 [==============================] - 0s 51ms/step - loss: 0.3912 - acc: 0.9539 - val_loss: 0.4466 - val_acc: 0.8333\n","Epoch 8/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.2800 - acc: 0.9605 - val_loss: 0.3969 - val_acc: 0.8246\n","Epoch 9/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.1904 - acc: 0.9715 - val_loss: 0.3628 - val_acc: 0.8333\n","Epoch 10/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.1369 - acc: 0.9781 - val_loss: 0.3724 - val_acc: 0.8333\n","Epoch 11/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.0940 - acc: 0.9846 - val_loss: 0.3729 - val_acc: 0.8596\n","Epoch 12/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.0694 - acc: 0.9825 - val_loss: 0.3611 - val_acc: 0.8684\n","Epoch 13/100\n","4/4 [==============================] - 0s 51ms/step - loss: 0.0487 - acc: 0.9934 - val_loss: 0.3676 - val_acc: 0.8684\n","Epoch 14/100\n","4/4 [==============================] - 0s 53ms/step - loss: 0.0306 - acc: 0.9956 - val_loss: 0.3998 - val_acc: 0.8684\n","Epoch 15/100\n","4/4 [==============================] - 0s 48ms/step - loss: 0.0224 - acc: 0.9934 - val_loss: 0.3729 - val_acc: 0.8860\n","Epoch 16/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.0135 - acc: 0.9978 - val_loss: 0.5828 - val_acc: 0.8421\n","Epoch 17/100\n","4/4 [==============================] - 0s 46ms/step - loss: 0.0470 - acc: 0.9825 - val_loss: 0.3333 - val_acc: 0.8772\n","Epoch 18/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.0164 - acc: 0.9956 - val_loss: 0.3542 - val_acc: 0.8947\n","Epoch 19/100\n","4/4 [==============================] - 0s 50ms/step - loss: 0.0097 - acc: 1.0000 - val_loss: 0.3677 - val_acc: 0.8860\n","Epoch 20/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.0090 - acc: 1.0000 - val_loss: 0.3844 - val_acc: 0.8772\n","Epoch 21/100\n","4/4 [==============================] - 0s 49ms/step - loss: 0.0064 - acc: 1.0000 - val_loss: 0.3871 - val_acc: 0.8684\n","Epoch 22/100\n","4/4 [==============================] - 0s 47ms/step - loss: 0.0053 - acc: 1.0000 - val_loss: 0.4009 - val_acc: 0.8684\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UbtA4j_rUS5d","executionInfo":{"status":"ok","timestamp":1632300362363,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"915594be-53c7-4b65-b13d-5a7164323d84"},"source":["score,acc_clstm = m_clstm.evaluate(X_test, Y_test)"],"execution_count":64,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 5ms/step - loss: 0.3545 - acc: 0.9039\n"]}]},{"cell_type":"code","metadata":{"id":"58r09paUUUlG","executionInfo":{"status":"ok","timestamp":1632300409339,"user_tz":-420,"elapsed":467,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["m_clstm.save('/content/drive/My Drive/Thesis/Code/FixModel2/clstm_sentiment_restoran_0.904.h5')"],"execution_count":87,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Iy8nWxe6BHYF"},"source":["### CNNBLSTM"]},{"cell_type":"code","metadata":{"id":"TVK0iWSAUXvp","executionInfo":{"status":"ok","timestamp":1632300362364,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_cblstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cblstm = Sequential()\n","  model_cblstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cblstm.add(Conv1D(filters=filter, kernel_size=kernel, padding='same', activation='relu'))\n","  model_cblstm.add(MaxPool1D(pool_size=2))\n","  # model_cblstm.add(Dense(32, activation='relu'))\n","  model_cblstm.add(SpatialDropout1D(dropout))\n","  model_cblstm.add(Bidirectional(LSTM(unit, return_sequences=False)))\n","  model_cblstm.add(Dense(2, activation='sigmoid'))\n","  model_cblstm.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cblstm.summary())\n","\n","  return model_cblstm"],"execution_count":66,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-aEuCTxgUZvm","executionInfo":{"status":"ok","timestamp":1632300371527,"user_tz":-420,"elapsed":9172,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"82b9f73a-5fa0-4ae5-d12f-42dd42274662"},"source":["m_cblstm = get_model_cblstm(X_train, Y_train)\n","history_CBLSTM = m_cblstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":67,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_7 (Embedding)      (None, 16, 100)           85900     \n","_________________________________________________________________\n","conv1d_2 (Conv1D)            (None, 16, 128)           38528     \n","_________________________________________________________________\n","max_pooling1d_2 (MaxPooling1 (None, 8, 128)            0         \n","_________________________________________________________________\n","spatial_dropout1d_7 (Spatial (None, 8, 128)            0         \n","_________________________________________________________________\n","bidirectional_2 (Bidirection (None, 200)               183200    \n","_________________________________________________________________\n","dense_7 (Dense)              (None, 2)                 402       \n","=================================================================\n","Total params: 308,030\n","Trainable params: 308,030\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","4/4 [==============================] - 5s 328ms/step - loss: 0.6924 - acc: 0.5175 - val_loss: 0.6919 - val_acc: 0.4825\n","Epoch 2/100\n","4/4 [==============================] - 0s 71ms/step - loss: 0.6897 - acc: 0.5351 - val_loss: 0.6890 - val_acc: 0.5088\n","Epoch 3/100\n","4/4 [==============================] - 0s 73ms/step - loss: 0.6818 - acc: 0.6360 - val_loss: 0.6828 - val_acc: 0.6140\n","Epoch 4/100\n","4/4 [==============================] - 0s 66ms/step - loss: 0.6665 - acc: 0.7105 - val_loss: 0.6677 - val_acc: 0.6404\n","Epoch 5/100\n","4/4 [==============================] - 0s 78ms/step - loss: 0.6295 - acc: 0.8465 - val_loss: 0.6269 - val_acc: 0.7719\n","Epoch 6/100\n","4/4 [==============================] - 0s 68ms/step - loss: 0.5369 - acc: 0.9167 - val_loss: 0.5375 - val_acc: 0.7719\n","Epoch 7/100\n","4/4 [==============================] - 0s 69ms/step - loss: 0.3712 - acc: 0.9298 - val_loss: 0.4209 - val_acc: 0.8070\n","Epoch 8/100\n","4/4 [==============================] - 0s 75ms/step - loss: 0.1842 - acc: 0.9649 - val_loss: 0.3898 - val_acc: 0.8509\n","Epoch 9/100\n","4/4 [==============================] - 0s 76ms/step - loss: 0.1084 - acc: 0.9737 - val_loss: 0.4058 - val_acc: 0.8684\n","Epoch 10/100\n","4/4 [==============================] - 0s 68ms/step - loss: 0.0789 - acc: 0.9825 - val_loss: 0.4233 - val_acc: 0.8772\n","Epoch 11/100\n","4/4 [==============================] - 0s 71ms/step - loss: 0.0490 - acc: 0.9912 - val_loss: 0.5080 - val_acc: 0.8684\n","Epoch 12/100\n","4/4 [==============================] - 0s 70ms/step - loss: 0.0418 - acc: 0.9912 - val_loss: 0.5249 - val_acc: 0.8772\n","Epoch 13/100\n","4/4 [==============================] - 0s 72ms/step - loss: 0.0423 - acc: 0.9912 - val_loss: 0.5413 - val_acc: 0.8772\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6rA1QjdDUbK3","executionInfo":{"status":"ok","timestamp":1632300371528,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d2b56c41-599c-454f-dbdd-d780b6bd2613"},"source":["score,acc_cblstm = m_cblstm.evaluate(X_test, Y_test)"],"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["9/9 [==============================] - 0s 7ms/step - loss: 0.3888 - acc: 0.8754\n"]}]},{"cell_type":"code","metadata":{"id":"DA-ZEgvEUc1C","executionInfo":{"status":"ok","timestamp":1632300371529,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_cblstm.save('/content/drive/My Drive/Thesis/Code/Model26Aug/cblstm_sentiment_restoran_9121.h5')"],"execution_count":69,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"D55bNANfW9km"},"source":["### Result"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OeUu2x5pUgAf","executionInfo":{"status":"ok","timestamp":1632300371530,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"ad559900-389c-4143-fead-3ed6ea7ca3b5"},"source":["acc = {'Model': ['RNN','GRU','LSTM', 'CNN','BiLSTM', 'CNNLSTM','CNNBLSTM','ABLSTM'],\n","       'Acc': [acc_rnn, acc_gru, acc_lstm, acc_cnn, acc_blstm, acc_clstm, acc_cblstm, acc_ablstm]}   \n","df_acc_nn = pd.DataFrame(acc)  \n","print(df_acc_nn)  "],"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.864769\n","1       GRU  0.875445\n","2      LSTM  0.893238\n","3       CNN  0.896797\n","4    BiLSTM  0.864769\n","5   CNNLSTM  0.903915\n","6  CNNBLSTM  0.875445\n","7    ABLSTM  0.854093\n"]}]},{"cell_type":"markdown","metadata":{"id":"uroMA0JNBNT1"},"source":["## Machhine Learning"]},{"cell_type":"code","metadata":{"id":"nSjX_E4aUiP7","executionInfo":{"status":"ok","timestamp":1632300372188,"user_tz":-420,"elapsed":9,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from sklearn.naive_bayes import MultinomialNB\n","from sklearn.svm import SVC, LinearSVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.feature_extraction.text import TfidfTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.model_selection import train_test_split, cross_val_score\n","from sklearn.metrics import classification_report, confusion_matrix, accuracy_score, f1_score, precision_score, recall_score, plot_confusion_matrix\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","np.random.seed(7)"],"execution_count":71,"outputs":[]},{"cell_type":"code","metadata":{"id":"K5WU1_9EUko6","executionInfo":{"status":"ok","timestamp":1632300372189,"user_tz":-420,"elapsed":9,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["X_train2, X_test2, y_train2, y_test2 = train_test_split(text, label, random_state=1)"],"execution_count":72,"outputs":[]},{"cell_type":"code","metadata":{"id":"aR080ykuUmsP","executionInfo":{"status":"ok","timestamp":1632300372189,"user_tz":-420,"elapsed":9,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["acc_result = []\n","cross_val = 5"],"execution_count":73,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9Q6w3GRuBSBr"},"source":["### MNB"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CufsDryMUoDJ","executionInfo":{"status":"ok","timestamp":1632300372190,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8bef58bd-5585-46ac-d541-48c5dfd8079f"},"source":["#Multinomial Naive Bayes with bigram\n","pipeline_mnb_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_bigram = cross_val_score(pipeline_mnb_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_bigram), 4)\n","std_score = round(np.std(scores_mnb_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d1 = ('MNB+Bigram',mean_score, std_score)\n","acc_result.append(d1)"],"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8949\n","Standard Dev: +/-0.0268\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rmfc04JnUpux","executionInfo":{"status":"ok","timestamp":1632300372190,"user_tz":-420,"elapsed":8,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"f8a97b7d-e254-4883-d022-08788cc4063b"},"source":["#Multinomial Naive Bayes unigram\n","pipeline_mnb_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_unigram = cross_val_score(pipeline_mnb_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_unigram), 4)\n","std_score = round(np.std(scores_mnb_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d2 = ('MNB+Unigram',mean_score, std_score)\n","acc_result.append(d2)"],"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8871\n","Standard Dev: +/-0.0192\n"]}]},{"cell_type":"markdown","metadata":{"id":"USJ83MjBBVZl"},"source":["### SVC"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PGVczeF4Ur1S","executionInfo":{"status":"ok","timestamp":1632300372190,"user_tz":-420,"elapsed":7,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"96d023f7-9ab9-4dfc-fa9c-ada45fed6465"},"source":["#SVC with bigram\n","pipeline_svc_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_bigram = cross_val_score(pipeline_svc_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_bigram), 4)\n","std_score = round(np.std(scores_svc_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d3 = ('SVC+Bigram',mean_score, std_score)\n","acc_result.append(d3)"],"execution_count":76,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8041\n","Standard Dev: +/-0.0509\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2WIjJb5eUtkI","executionInfo":{"status":"ok","timestamp":1632300372190,"user_tz":-420,"elapsed":6,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"9b004581-3c60-441b-b9dd-45e9a55e0dfa"},"source":["#SVC Unigram\n","pipeline_svc_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_unigram = cross_val_score(pipeline_svc_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_unigram), 4)\n","std_score = round(np.std(scores_svc_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d4 = ('SVC+Unigram',mean_score, std_score)\n","acc_result.append(d4)"],"execution_count":77,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8135\n","Standard Dev: +/-0.0451\n"]}]},{"cell_type":"markdown","metadata":{"id":"OkGOlxOABYXi"},"source":["### Logistic Regression"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p5RGympEUvRD","executionInfo":{"status":"ok","timestamp":1632300373127,"user_tz":-420,"elapsed":942,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"a6615f3e-d874-4547-8018-c3c378800653"},"source":["#Logistic Regression with Bigram\n","pipeline_lr_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_bigram = cross_val_score(pipeline_lr_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_bigram), 4)\n","std_score = round(np.std(scores_lr_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d5 = ('LR+Bigram',mean_score, std_score)\n","acc_result.append(d5)"],"execution_count":78,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8902\n","Standard Dev: +/-0.0410\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e5yLB1cnUxNC","executionInfo":{"status":"ok","timestamp":1632300373128,"user_tz":-420,"elapsed":22,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c5ad5c44-b09c-4816-f2c4-18dad42500df"},"source":["#Logistic Regression Unigram\n","pipeline_lr_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_unigram = cross_val_score(pipeline_lr_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_unigram), 4)\n","std_score = round(np.std(scores_lr_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d6 = ('LR+Unigram',mean_score, std_score)\n","acc_result.append(d6)"],"execution_count":79,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8855\n","Standard Dev: +/-0.0337\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7k2aEchDUzKJ","executionInfo":{"status":"ok","timestamp":1632300373129,"user_tz":-420,"elapsed":21,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0e4c8dbb-d94d-44a3-8f76-98c5fd43e8a1"},"source":["# create DataFrame using data \n","df_acc_ml = pd.DataFrame.from_records(acc_result, columns =['Model', 'Accuracy', 'Standard Deviation']) \n","  \n","print(df_acc_ml)  "],"execution_count":80,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.8949              0.0268\n","1  MNB+Unigram    0.8871              0.0192\n","2   SVC+Bigram    0.8041              0.0509\n","3  SVC+Unigram    0.8135              0.0451\n","4    LR+Bigram    0.8902              0.0410\n","5   LR+Unigram    0.8855              0.0337\n"]}]},{"cell_type":"markdown","metadata":{"id":"EJ64PtWnBddd"},"source":["# Overall Result"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cc97CgmZU0xL","executionInfo":{"status":"ok","timestamp":1632300373130,"user_tz":-420,"elapsed":20,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"a9aa47cc-8cc1-4ccd-f01b-6d7df3d841cc"},"source":["print(df_acc_nn)"],"execution_count":81,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.864769\n","1       GRU  0.875445\n","2      LSTM  0.893238\n","3       CNN  0.896797\n","4    BiLSTM  0.864769\n","5   CNNLSTM  0.903915\n","6  CNNBLSTM  0.875445\n","7    ABLSTM  0.854093\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":97},"id":"fXXzuarUU2_a","executionInfo":{"status":"ok","timestamp":1632300373130,"user_tz":-420,"elapsed":18,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"923991b8-dd90-4f83-ae18-36d1806ee798"},"source":["print(\"Best Neural Network Model :\")\n","df_acc_nn[['Model', 'Acc']][df_acc_nn.Acc == df_acc_nn.Acc.max()]"],"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Neural Network Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Acc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>CNNLSTM</td>\n","      <td>0.903915</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     Model       Acc\n","5  CNNLSTM  0.903915"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kM_aJD23U4hC","executionInfo":{"status":"ok","timestamp":1632300373131,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"ba13347b-5426-410f-d645-8f80639c4204"},"source":["print(df_acc_ml)"],"execution_count":83,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.8949              0.0268\n","1  MNB+Unigram    0.8871              0.0192\n","2   SVC+Bigram    0.8041              0.0509\n","3  SVC+Unigram    0.8135              0.0451\n","4    LR+Bigram    0.8902              0.0410\n","5   LR+Unigram    0.8855              0.0337\n"]}]},{"cell_type":"code","metadata":{"id":"2d-0vXj2U8RA","colab":{"base_uri":"https://localhost:8080/","height":97},"executionInfo":{"status":"ok","timestamp":1632300373131,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0bb87f2d-c63e-4acc-d84f-5e88cb5539eb"},"source":["print(\"Best Machine Learning Model :\")\n","df_acc_ml[['Model', 'Accuracy']][df_acc_ml.Accuracy == df_acc_ml.Accuracy.max()]"],"execution_count":84,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Machine Learning Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MNB+Bigram</td>\n","      <td>0.8949</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        Model  Accuracy\n","0  MNB+Bigram    0.8949"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","metadata":{"id":"A87lb7zf3luk","executionInfo":{"status":"ok","timestamp":1632300373132,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["model = m_clstm"],"execution_count":85,"outputs":[]},{"cell_type":"code","metadata":{"id":"At9xy80o3uUs","colab":{"base_uri":"https://localhost:8080/","height":754},"executionInfo":{"status":"ok","timestamp":1632300373717,"user_tz":-420,"elapsed":599,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"4e2bcb33-362c-4991-ab4f-7e4415a73707"},"source":["from keras.utils.vis_utils import plot_model\n","\n","plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)"],"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":86}]},{"cell_type":"markdown","metadata":{"id":"h4bzHfv6aklQ"},"source":["# Analyze Results"]},{"cell_type":"code","metadata":{"id":"ifcHXpIRaoET"},"source":["ev_model = model.predict(X_test)\n","ev_model_list = ev_model.tolist()\n","ev_classes = np.argmax(ev_model,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ihx77pCear3J","executionInfo":{"status":"ok","timestamp":1632237658963,"user_tz":-420,"elapsed":12,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8997070a-3eb5-4985-a9e7-c622e60fe8cd"},"source":["# Creating a reverse dictionary\n","reverse_word_map = dict(map(reversed, tokenizer.word_index.items()))\n","\n","# Function takes a tokenized sentence and returns the words\n","def sequence_to_text(list_of_indices):\n","    # Looking up words in dictionary\n","    words = [reverse_word_map.get(letter) for letter in list_of_indices]\n","    return(words)\n","\n","# Creating texts \n","my_texts = list(map(sequence_to_text, X_test))\n","text_str=[]\n","for x in my_texts:\n","  x_str = ' '.join([str(elem) for elem in x])\n","  text_str.append(x_str)\n","text_str[0]\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'None None None None None None None None None None None None None None daging alot'"]},"metadata":{},"execution_count":67}]},{"cell_type":"markdown","metadata":{"id":"qZyFO6UeazhY"},"source":["## Confusion Matrix"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P2HUtatQauxU","executionInfo":{"status":"ok","timestamp":1632237659408,"user_tz":-420,"elapsed":454,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d79e393d-5b88-4b14-c759-3e5baf7153e9"},"source":["decode_sentiment = np.argmax(Y_test, axis=1)\n","lab_sentiment = [\"positive\",\"negative\"]\n","def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(ev_classes, decode_sentiment,lab_sentiment)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6a1jE6AUa6hu","executionInfo":{"status":"ok","timestamp":1632237659409,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"ceb89755-edad-4641-d727-b9fa7c40f5ca"},"source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import classification_report\n","accuracy_score(ev_classes, decode_sentiment)\n","print(classification_report(ev_classes, decode_sentiment))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.88      0.94      0.91       144\n","           1       0.93      0.87      0.90       137\n","\n","    accuracy                           0.90       281\n","   macro avg       0.91      0.90      0.90       281\n","weighted avg       0.91      0.90      0.90       281\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p4_1UEcQa7GF","executionInfo":{"status":"ok","timestamp":1632237660075,"user_tz":-420,"elapsed":674,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"522b69db-428e-4f81-8ae6-f7bc35065d2e"},"source":["ev_train_model = model.predict(X_train)\n","ev_train_classes = np.argmax(ev_train_model,axis=1)\n","decode_train = np.argmax(Y_train, axis=1)\n","print(classification_report(ev_train_classes, decode_train))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.97      0.96      0.97       272\n","           1       0.97      0.98      0.97       298\n","\n","    accuracy                           0.97       570\n","   macro avg       0.97      0.97      0.97       570\n","weighted avg       0.97      0.97      0.97       570\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NJWdZfsQa-Jd","executionInfo":{"status":"ok","timestamp":1632237660077,"user_tz":-420,"elapsed":11,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"5cf73578-b544-44c4-d1bd-7240e011f08a"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(ev_classes, decode_sentiment))\n","print('F1 score:', f1_score(ev_classes, decode_sentiment, average='macro'))\n","print('Recall:', recall_score(ev_classes, decode_sentiment, average='macro'))\n","print('Precision:', precision_score(ev_classes, decode_sentiment, average='macro'))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9039145907473309\n","F1 score: 0.9036020583190395\n","Recall: 0.9030565693430657\n","Precision: 0.9060202205882353\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zas3zceObBWY","executionInfo":{"status":"ok","timestamp":1632237660705,"user_tz":-420,"elapsed":637,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"758294b2-80b2-414c-d973-89e48b4ee35a"},"source":["plt.title('Loss')\n","plt.plot(history_LSTM.history['loss'], label='train')\n","plt.plot(history_LSTM.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();\n","\n","plt.title('Accuracy')\n","plt.plot(history_LSTM.history['acc'], label='train')\n","plt.plot(history_LSTM.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pEv5PhIkbEVQ","executionInfo":{"status":"ok","timestamp":1632237660706,"user_tz":-420,"elapsed":24,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"7a7e79ea-9204-4a84-9618-0e545ecefad2"},"source":["print(history_BLSTM.history['acc'])\n","print(history_BLSTM.history['val_acc'])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.5504385828971863, 0.5460526347160339, 0.5460526347160339, 0.5460526347160339, 0.5482456088066101, 0.5767543911933899, 0.7236841917037964, 0.9035087823867798, 0.9364035129547119, 0.9627193212509155, 0.9714912176132202, 0.9780701994895935, 0.9780701994895935, 0.9802631735801697]\n","[0.45614033937454224, 0.45614033937454224, 0.45614033937454224, 0.45614033937454224, 0.45614033937454224, 0.5175438523292542, 0.7719298005104065, 0.8421052694320679, 0.8859649300575256, 0.8947368264198303, 0.9035087823867798, 0.9122806787490845, 0.9122806787490845, 0.9035087823867798]\n"]}]},{"cell_type":"markdown","metadata":{"id":"vpV-QZbEbHWW"},"source":["## Evalute Misclassification"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XgN_CRSebLMs","executionInfo":{"status":"ok","timestamp":1632237660708,"user_tz":-420,"elapsed":24,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"dba80a24-222e-49ce-8567-994bf25ab2e9"},"source":["ev_data_test = {'Text':text_str,\n","        'Act':decode_sentiment,\n","        'Pred':ev_classes}\n","df_final_ev = pd.DataFrame(ev_data_test)\n","df_final_ev"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>None None None None None None None None None l...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>None None None None None menu sarapan tidak se...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>276</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>277</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>278</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>279</th>\n","      <td>None None None None None None None None makana...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>280</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>281 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0    None None None None None None None None None N...    0     0\n","1    None None None None None None None None None l...    1     1\n","2    None None None None None menu sarapan tidak se...    0     0\n","3    None None None None None None None None None N...    1     1\n","4    None None None None None None None None None N...    0     0\n","..                                                 ...  ...   ...\n","276  None None None None None None None None None N...    0     1\n","277  None None None None None None None None None N...    0     0\n","278  None None None None None None None None None N...    0     0\n","279  None None None None None None None None makana...    1     1\n","280  None None None None None None None None None N...    0     0\n","\n","[281 rows x 3 columns]"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lT1SRKlRbQfk","executionInfo":{"status":"ok","timestamp":1632237660709,"user_tz":-420,"elapsed":22,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c523e6b8-baff-4925-b7f7-a424d862f393"},"source":["remove_words = ['None']\n","pat = r'\\b(?:{})\\b'.format('|'.join(remove_words))\n","df_final_ev['Text'] = df_final_ev['Text'].str.replace(pat, '')\n","df_final_ev"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>daging alot</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>lauk makan beragam ada dua macam nasi</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>menu sarapan tidak segar harus menunggu b...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ada masakan tradisional</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>makanan standar agak asin</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>276</th>\n","      <td>rasa seperti minuman kemasan instan</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>277</th>\n","      <td>rasa makanan tidak berani hambar</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>278</th>\n","      <td>makanan sarapan dingin hambar</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>279</th>\n","      <td>makanan enak banyak pilihan lengkap ap...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>280</th>\n","      <td>makanan sarapan dingin</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>281 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0                                          daging alot    0     0\n","1                lauk makan beragam ada dua macam nasi    1     1\n","2         menu sarapan tidak segar harus menunggu b...    0     0\n","3                              ada masakan tradisional    1     1\n","4                            makanan standar agak asin    0     0\n","..                                                 ...  ...   ...\n","276                rasa seperti minuman kemasan instan    0     1\n","277                   rasa makanan tidak berani hambar    0     0\n","278                      makanan sarapan dingin hambar    0     0\n","279          makanan enak banyak pilihan lengkap ap...    1     1\n","280                             makanan sarapan dingin    0     0\n","\n","[281 rows x 3 columns]"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m0dnp3_VbTwF","executionInfo":{"status":"ok","timestamp":1632237660709,"user_tz":-420,"elapsed":20,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"5a998de5-2956-4297-8562-6eb60da7ba6c"},"source":["df_final_ev.query('Act != Pred')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>18</th>\n","      <td>menu sarapan nasi kuning porsi kecil</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>tingkat kematangan daging sempurna ...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>banyak sarapan tercecer lantai</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>minuman air mineral ada bekas susu</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>114</th>\n","      <td>buah ada rasa pahit</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>menu sarapan bosan</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>saran tambah menu anak bubur sereal sup</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>menu ada monoton</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>ada anak kecoa prasmanan makanan</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>156</th>\n","      <td>sarapan prasmanan</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>157</th>\n","      <td>makanan porsi besar tidak pelit</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>158</th>\n","      <td>menu makanan bosan</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>174</th>\n","      <td>makanan kemarin ada binatang jorok</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>184</th>\n","      <td>makanan minuman habis</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>192</th>\n","      <td>ada serangga tumpukan piring jorok m...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>makanan ada mentah</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>204</th>\n","      <td>buah dikeliling binatang terbang</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>221</th>\n","      <td>hanya kerupuk enak lainnya zonk</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>makanan puas habis</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>bagus sarapan tidak terjadi penumpuk...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>239</th>\n","      <td>menyajikan bir anggur lokal</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>241</th>\n","      <td>makanan cafe membosankan</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>259</th>\n","      <td>ada rambut makanan</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>262</th>\n","      <td>ada gubug melayani menyajikan mie in...</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>263</th>\n","      <td>properti masakan baik sistem ala carte</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>makanan berlimpah tidak pelit</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>276</th>\n","      <td>rasa seperti minuman kemasan instan</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","18                menu sarapan nasi kuning porsi kecil    0     1\n","25              tingkat kematangan daging sempurna ...    1     0\n","79                      banyak sarapan tercecer lantai    0     1\n","88                  minuman air mineral ada bekas susu    0     1\n","114                                buah ada rasa pahit    0     1\n","146                                 menu sarapan bosan    0     1\n","147            saran tambah menu anak bubur sereal sup    0     1\n","148                                   menu ada monoton    0     1\n","154                   ada anak kecoa prasmanan makanan    0     1\n","156                                  sarapan prasmanan    1     0\n","157                    makanan porsi besar tidak pelit    1     0\n","158                                 menu makanan bosan    0     1\n","174                 makanan kemarin ada binatang jorok    0     1\n","184                              makanan minuman habis    0     1\n","192            ada serangga tumpukan piring jorok m...    0     1\n","197                                 makanan ada mentah    0     1\n","204                   buah dikeliling binatang terbang    0     1\n","221                    hanya kerupuk enak lainnya zonk    0     1\n","230                                 makanan puas habis    1     0\n","237            bagus sarapan tidak terjadi penumpuk...    1     0\n","239                        menyajikan bir anggur lokal    1     0\n","241                           makanan cafe membosankan    0     1\n","259                                 ada rambut makanan    0     1\n","262            ada gubug melayani menyajikan mie in...    1     0\n","263             properti masakan baik sistem ala carte    1     0\n","270                      makanan berlimpah tidak pelit    1     0\n","276                rasa seperti minuman kemasan instan    0     1"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WmHhcJVYbXBV","executionInfo":{"status":"ok","timestamp":1632237660710,"user_tz":-420,"elapsed":19,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"73e7afcb-3e1d-4214-9fa1-e7ea244a0f9e"},"source":["len(df_final_ev.query('Act != Pred'))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["27"]},"metadata":{},"execution_count":77}]},{"cell_type":"markdown","metadata":{"id":"1zAaGMepBh__"},"source":["# Testing"]},{"cell_type":"code","metadata":{"id":"fSIQ_K3rU9yj","executionInfo":{"status":"ok","timestamp":1632300425882,"user_tz":-420,"elapsed":1050,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["model = load_model('/content/drive/My Drive/Thesis/Code/FixModel2/clstm_sentiment_restoran_0.904.h5')\n","labels=[\"negative\",\"positive\"]"],"execution_count":88,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":640},"id":"DP_MLui3VBG8","executionInfo":{"status":"ok","timestamp":1632300426923,"user_tz":-420,"elapsed":480,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0f16830f-d898-42a8-f372-36f402ac8d60"},"source":["df_test = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/result_test.xlsx')\n","df_resto = df_test[df_test[\"used aspect\"]==\"restoran\"]\n","df_resto"],"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>193</th>\n","      <td>2020-11-14</td>\n","      <td>148</td>\n","      <td>sesuai standar prokes</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.6356013417243958, 0.19276168942451477]</td>\n","      <td>hotel</td>\n","      <td>restoran</td>\n","    </tr>\n","    <tr>\n","      <th>959</th>\n","      <td>2021-05-22</td>\n","      <td>80</td>\n","      <td>lumayan enak</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9741263389587402, 0.01995955780148506]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","    </tr>\n","    <tr>\n","      <th>960</th>\n","      <td>2021-06-15</td>\n","      <td>69</td>\n","      <td>makanan variatif</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9856751561164856, 0.010814240202307701]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","    </tr>\n","    <tr>\n","      <th>961</th>\n","      <td>2021-04-09</td>\n","      <td>377</td>\n","      <td>tidak_banyak variasi makanan pandemi jadi maklum</td>\n","      <td>agoda</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9995957016944885, 0.0002173891116399318]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","    </tr>\n","    <tr>\n","      <th>962</th>\n","      <td>2020-08-04</td>\n","      <td>394</td>\n","      <td>pesan kamar malam superior room sarapan lumaya...</td>\n","      <td>agoda</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.9741395711898804, 0.023092618212103844]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1085</th>\n","      <td>2021-03-30</td>\n","      <td>246</td>\n","      <td>sarapan tidak_lengkap</td>\n","      <td>tiket</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.9966868758201599, 0.0027444958686828613]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","    </tr>\n","    <tr>\n","      <th>1086</th>\n","      <td>2021-05-25</td>\n","      <td>8</td>\n","      <td>sarapan tidak_variasi</td>\n","      <td>pegipegi</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.9989019632339478, 0.0009584131767041981]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","    </tr>\n","    <tr>\n","      <th>1087</th>\n","      <td>2020-08-23</td>\n","      <td>333</td>\n","      <td>sarapan tidak_variatif</td>\n","      <td>booking</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.9980944991111755, 0.001605170196853578]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","    </tr>\n","    <tr>\n","      <th>1088</th>\n","      <td>2021-03-22</td>\n","      <td>108</td>\n","      <td>variasi makanan kurang</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9992446899414062, 0.00024914462119340897]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","    </tr>\n","    <tr>\n","      <th>1089</th>\n","      <td>2021-04-18</td>\n","      <td>85</td>\n","      <td>sarapan enak enak</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9999940395355225, 3.151691316816141e-06]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>132 rows Ã— 13 columns</p>\n","</div>"],"text/plain":["        tanggal   id  ... true aspect used aspect\n","193  2020-11-14  148  ...       hotel    restoran\n","959  2021-05-22   80  ...    restoran    restoran\n","960  2021-06-15   69  ...    restoran    restoran\n","961  2021-04-09  377  ...    restoran    restoran\n","962  2020-08-04  394  ...    restoran    restoran\n","...         ...  ...  ...         ...         ...\n","1085 2021-03-30  246  ...    restoran    restoran\n","1086 2021-05-25    8  ...    restoran    restoran\n","1087 2020-08-23  333  ...    restoran    restoran\n","1088 2021-03-22  108  ...    restoran    restoran\n","1089 2021-04-18   85  ...    restoran    restoran\n","\n","[132 rows x 13 columns]"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","metadata":{"id":"LkRA9fxYVEU5","executionInfo":{"status":"ok","timestamp":1632300430383,"user_tz":-420,"elapsed":508,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["data_test = df_resto[\"text\"]\n","list_test = data_test.tolist()\n","\n","seq = tokenizer.texts_to_sequences(list_test)\n","padded = pad_sequences(seq, maxlen=max_seq_len)\n","pred = model.predict(padded)"],"execution_count":90,"outputs":[]},{"cell_type":"code","metadata":{"id":"MlCH6p4eMzKf","executionInfo":{"status":"ok","timestamp":1632300430384,"user_tz":-420,"elapsed":7,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["y_test = []\n","for x in pred :\n","  y = labels[np.argmax(x)]\n","  # print(y)\n","  y_test += [y]"],"execution_count":91,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":742},"id":"Fn-Wn9zzNpZh","executionInfo":{"status":"ok","timestamp":1632300430769,"user_tz":-420,"elapsed":12,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6a3f5220-e18d-4a83-81ec-1f4cf78259e8"},"source":["df_resto[\"sentiment\"]=y_test\n","df_resto"],"execution_count":92,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>193</th>\n","      <td>2020-11-14</td>\n","      <td>148</td>\n","      <td>sesuai standar prokes</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.6356013417243958, 0.19276168942451477]</td>\n","      <td>hotel</td>\n","      <td>restoran</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>959</th>\n","      <td>2021-05-22</td>\n","      <td>80</td>\n","      <td>lumayan enak</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9741263389587402, 0.01995955780148506]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>960</th>\n","      <td>2021-06-15</td>\n","      <td>69</td>\n","      <td>makanan variatif</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9856751561164856, 0.010814240202307701]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>961</th>\n","      <td>2021-04-09</td>\n","      <td>377</td>\n","      <td>tidak_banyak variasi makanan pandemi jadi maklum</td>\n","      <td>agoda</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9995957016944885, 0.0002173891116399318]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>962</th>\n","      <td>2020-08-04</td>\n","      <td>394</td>\n","      <td>pesan kamar malam superior room sarapan lumaya...</td>\n","      <td>agoda</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.9741395711898804, 0.023092618212103844]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1085</th>\n","      <td>2021-03-30</td>\n","      <td>246</td>\n","      <td>sarapan tidak_lengkap</td>\n","      <td>tiket</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.9966868758201599, 0.0027444958686828613]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>1086</th>\n","      <td>2021-05-25</td>\n","      <td>8</td>\n","      <td>sarapan tidak_variasi</td>\n","      <td>pegipegi</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.9989019632339478, 0.0009584131767041981]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>1087</th>\n","      <td>2020-08-23</td>\n","      <td>333</td>\n","      <td>sarapan tidak_variatif</td>\n","      <td>booking</td>\n","      <td>restoran</td>\n","      <td>restoran, pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>restoran</td>\n","      <td>pelayanan</td>\n","      <td>[0.9980944991111755, 0.001605170196853578]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>1088</th>\n","      <td>2021-03-22</td>\n","      <td>108</td>\n","      <td>variasi makanan kurang</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9992446899414062, 0.00024914462119340897]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>1089</th>\n","      <td>2021-04-18</td>\n","      <td>85</td>\n","      <td>sarapan enak enak</td>\n","      <td>traveloka</td>\n","      <td>restoran</td>\n","      <td>restoran, lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>[0.9999940395355225, 3.151691316816141e-06]</td>\n","      <td>restoran</td>\n","      <td>restoran</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>132 rows Ã— 14 columns</p>\n","</div>"],"text/plain":["        tanggal   id  ... used aspect sentiment\n","193  2020-11-14  148  ...    restoran  negative\n","959  2021-05-22   80  ...    restoran  positive\n","960  2021-06-15   69  ...    restoran  positive\n","961  2021-04-09  377  ...    restoran  negative\n","962  2020-08-04  394  ...    restoran  positive\n","...         ...  ...  ...         ...       ...\n","1085 2021-03-30  246  ...    restoran  negative\n","1086 2021-05-25    8  ...    restoran  negative\n","1087 2020-08-23  333  ...    restoran  negative\n","1088 2021-03-22  108  ...    restoran  negative\n","1089 2021-04-18   85  ...    restoran  positive\n","\n","[132 rows x 14 columns]"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","metadata":{"id":"AFpPG1c0Nugu","executionInfo":{"status":"ok","timestamp":1632300989531,"user_tz":-420,"elapsed":620,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_result = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/all_result_test.xlsx')\n","df_append = df_result.append(df_resto)\n","df_append.to_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/all_result_test.xlsx')"],"execution_count":93,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6hT6gKM48NOn"},"source":["## Evaluate Sentiment"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GZzPTe_oVF_p","executionInfo":{"elapsed":998,"status":"ok","timestamp":1620034488061,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"},"user_tz":-420},"outputId":"dfc61514-cf67-499f-fa66-9167a70b1f91"},"source":["ev_sent = model.predict_classes(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/sequential.py:450: UserWarning: `model.predict_classes()` is deprecated and will be removed after 2021-01-01. Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","  warnings.warn('`model.predict_classes()` is deprecated and '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"JI9ZyHH-8cYY"},"source":["decode_sent = np.argmax(Y_test, axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JSlN5TIH8pCG"},"source":["lab_sent = [\"negatif\",\"positif\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MehYEqFrAUpc"},"source":["def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"ZTR8GOUa9TJb","executionInfo":{"elapsed":1631,"status":"ok","timestamp":1620034488725,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"},"user_tz":-420},"outputId":"a52d932e-cda6-4aac-e91e-86b43cd6e20d"},"source":["conf_matrix(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x576 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"id":"kLeStDruKN9l","executionInfo":{"elapsed":1626,"status":"ok","timestamp":1620034488726,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"},"user_tz":-420},"outputId":"3abc600f-04ea-48f2-faf8-2311f4927614"},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XgjzN7Zi9ZCI","executionInfo":{"elapsed":1621,"status":"ok","timestamp":1620034488726,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"},"user_tz":-420},"outputId":"fda5dc94-4919-4676-c1c9-0bae53019dc2"},"source":["from sklearn.metrics import accuracy_score\n","accuracy_score(ev_sent, decode_sent)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8971631205673759"]},"metadata":{"tags":[]},"execution_count":92}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oKEJidKP9kSa","executionInfo":{"elapsed":1616,"status":"ok","timestamp":1620034488727,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"},"user_tz":-420},"outputId":"44ee637e-33ae-4c24-bd31-dfcd06ff6c19"},"source":["from sklearn.metrics import classification_report\n","print(classification_report(ev_sent, decode_sent))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.92      0.88      0.90       152\n","           1       0.87      0.92      0.89       130\n","\n","    accuracy                           0.90       282\n","   macro avg       0.90      0.90      0.90       282\n","weighted avg       0.90      0.90      0.90       282\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V_4mHIBD9sM1","executionInfo":{"elapsed":1611,"status":"ok","timestamp":1620034488728,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"},"user_tz":-420},"outputId":"df6b719a-3942-4ea6-dcaf-e8ad4fb24ee3"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(ev_sent, decode_sent))\n","print('F1 score:', f1_score(ev_sent, decode_sent, average='macro'))\n","print('Recall:', recall_score(ev_sent, decode_sent, average='macro'))\n","print('Precision:', precision_score(ev_sent, decode_sent, average='macro'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy: 0.8971631205673759\n","F1 score: 0.8968713350735823\n","Recall: 0.8984817813765182\n","Precision: 0.8963755348603071\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"8jzXTeea90VA","executionInfo":{"elapsed":2327,"status":"ok","timestamp":1620034489451,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"},"user_tz":-420},"outputId":"7277c914-6abc-46fb-ab4c-5f98d38a3254"},"source":["plt.title('Loss')\n","plt.plot(history_BLSTM.history['loss'], label='train')\n","plt.plot(history_BLSTM.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"YbTEzFpR9_pG","executionInfo":{"elapsed":2323,"status":"ok","timestamp":1620034489452,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"},"user_tz":-420},"outputId":"576f6840-fe7a-4755-c7e9-4a9e28ac25ab"},"source":["plt.title('Accuracy')\n","plt.plot(history_BLSTM.history['acc'], label='train')\n","plt.plot(history_BLSTM.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"_2M0YBAp-fYL"},"source":[""],"execution_count":null,"outputs":[]}]}