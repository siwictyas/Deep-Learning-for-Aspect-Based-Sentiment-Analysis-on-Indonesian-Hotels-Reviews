{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Sentiment - Lokasi","provenance":[],"collapsed_sections":["cBwwrNpv-0_2","uroMA0JNBNT1","EJ64PtWnBddd","3VsC34x934NJ","6hT6gKM48NOn"],"mount_file_id":"1CQ-UYm9upfah7CrebVJsqeTOG13M3Jd-","authorship_tag":"ABX9TyOZuAVvMnyZXEt+XnDn6y0w"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"2-qyyxYZSMyF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300608550,"user_tz":-420,"elapsed":3260,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"7824a8bd-0748-432c-d0cb-ce06195fadb5"},"source":["import keras\n","import numpy as np\n","import pandas as pd\n","import openpyxl\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","from keras.models import load_model\n","from nltk.corpus import stopwords\n","from nltk.tokenize import word_tokenize\n","import unicodedata\n","from collections import Counter\n","from imblearn.under_sampling import RandomUnderSampler\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","import warnings\n","import tensorflow as tf\n","warnings.simplefilter(action='ignore', category=FutureWarning)\n","np.random.seed(0)"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/externals/six.py:31: FutureWarning: The module is deprecated in version 0.21 and will be removed in version 0.23 since we've dropped support for Python 2.7. Please rely on the official version of six (https://pypi.org/project/six/).\n","  \"(https://pypi.org/project/six/).\", FutureWarning)\n","/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.neighbors.base module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.neighbors. Anything that cannot be imported from sklearn.neighbors is now part of the private API.\n","  warnings.warn(message, FutureWarning)\n"]}]},{"cell_type":"markdown","metadata":{"id":"jCh20tTkBoF-"},"source":["# Data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"N7fAJvKISNR2","executionInfo":{"status":"ok","timestamp":1632300611004,"user_tz":-420,"elapsed":2462,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"f60891ce-b1fb-491d-d0a3-e910058230c3"},"source":["df = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/data_training.xlsx', usecols=[\"clean text\",\"aspect\",\"sentiment\"])\n","df.head()"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 clean text aspect sentiment\n","0  shuttle gratis malioboro  harga  positive\n","1  dapat gratis course golf  harga  positive\n","2    gratis andong keliling  harga  positive\n","3              sesuai harga  harga  positive\n","4          harga terjangkau  harga  positive"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"wLSH6SnfSUsk","executionInfo":{"status":"ok","timestamp":1632300611006,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df = df.drop_duplicates()"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"KQ-Ft7mQSXwt","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1632300611008,"user_tz":-420,"elapsed":31,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"cf0e1e62-5d57-498e-8068-7fb8284f5a1c"},"source":["df = df.dropna()\n","df.reset_index(drop=True)"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>clean text</th>\n","      <th>aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>shuttle gratis malioboro</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>dapat gratis course golf</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>gratis andong keliling</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sesuai harga</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>harga terjangkau</td>\n","      <td>harga</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5653</th>\n","      <td>staff jutek bentak_bentak marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5654</th>\n","      <td>staff mengatur parkir marah_marah</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5655</th>\n","      <td>sajian sarapan lambat refill</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5656</th>\n","      <td>tidak_ada prokes terjaga tidak_ada social_dist...</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>5657</th>\n","      <td>staff tidak_ramah tidak_paham sop</td>\n","      <td>pelayanan</td>\n","      <td>negative</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5658 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                             clean text     aspect sentiment\n","0                              shuttle gratis malioboro      harga  positive\n","1                              dapat gratis course golf      harga  positive\n","2                                gratis andong keliling      harga  positive\n","3                                          sesuai harga      harga  positive\n","4                                      harga terjangkau      harga  positive\n","...                                                 ...        ...       ...\n","5653                    staff jutek bentak_bentak marah  pelayanan  negative\n","5654                  staff mengatur parkir marah_marah  pelayanan  negative\n","5655                       sajian sarapan lambat refill  pelayanan  negative\n","5656  tidak_ada prokes terjaga tidak_ada social_dist...  pelayanan  negative\n","5657                  staff tidak_ramah tidak_paham sop  pelayanan  negative\n","\n","[5658 rows x 3 columns]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"6DUF0jjkSZa4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300611009,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0c06ee1c-c244-471b-a275-70c07112f674"},"source":["df.sentiment.value_counts()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["positive    2905\n","negative    2753\n","Name: sentiment, dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"SmH2XLrJSa6a","executionInfo":{"status":"ok","timestamp":1632300611010,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_train = df.sample(frac = 1) #shuffle"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"Hk9ggR7JScx9","executionInfo":{"status":"ok","timestamp":1632300611011,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# clean_text = df_train[[\"clean text\",\"aspect\",\"sentiment\"]]\n","# wo_punc_text = df_train[\"text_wo_punc\"]\n","# wo_neg_text = df_train[\"text_wo_neg\"]\n","# stemming = df_train[\"stemming\"]\n","# label = df_train[\"sentiment\"]"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"I2cy3RgtKHi4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300611012,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"842a65a9-fe4b-490b-b798-9f87143b1f91"},"source":["t = df_train[df_train[\"aspect\"]==\"lokasi\"]\n","text = t[\"clean text\"] \n","label = t[\"sentiment\"]\n","print(t)"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["                                           clean text  aspect sentiment\n","1684              lokasi mudah stasiun bisa naik ojol  lokasi  positive\n","1845  lokasi oke cocok istirahat berkegiatan seharian  lokasi  positive\n","2015                dekat pantai kuta legian seminyak  lokasi  positive\n","4715         masuk gang sempit akses mobil taxi sulit  lokasi  negative\n","1836                                dekat kemana_mana  lokasi  positive\n","...                                               ...     ...       ...\n","2028     lokasi dekat kantor cabang perjalanan bisnis  lokasi  positive\n","1891                 hotel letak strategis pusat_kota  lokasi  positive\n","2066                   hotel tengah_kota suasana desa  lokasi  positive\n","1719                             lokasi dekat bandara  lokasi  positive\n","1671                         lokasi dekat jalan_utama  lokasi  positive\n","\n","[906 rows x 3 columns]\n"]}]},{"cell_type":"code","metadata":{"id":"ms6Yx9c32gh3","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1632300611013,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"91cf6a88-8ad8-4f23-8f9d-ef28f93227f9"},"source":["t.sentiment.value_counts().plot(kind='bar', title='Count (target)');\n","print(t.sentiment.value_counts())"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["positive    491\n","negative    415\n","Name: sentiment, dtype: int64\n"]},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXcAAAEqCAYAAADu0BDXAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAU2ElEQVR4nO3dfbBlVX3m8e8TGkEEeW0Ru8FGIRJ84SUdhIqxVCozojFNKkjwtbWY6ioGZ5LBaEhiGWIwg1ZGhUSdMINFKxghKIFRxgxBHEIUsUFeVFAbIkO3IC3QLUpAkN/8cVbD6fbevre77+0N634/VafO3muvc/bvwuVh3XXW2TtVhSSpL780dAGSpJlnuEtShwx3SeqQ4S5JHTLcJalDhrskdchwlyaRZH6SW5M8fehaJpJkh1bf/KFr0ZOP4a5BJXljkhVJfpLkriT/O8nLtsF5K8kBU3Q7FTi3qv6tvebLSf7DbNc2mY3PX1UPA59gVKe0AcNdg0lyCvAR4C+BvYH9gI8BS4asC0ajYmApcN4Mvue8mXqvMZ8GlrZ6pccZ7hpEkl2B9wEnV9XnquqnVfVIVf2vqnpX67NDko8k+UF7fGR9iCV5W5KrN3rPx0fjSc5N8tEkX0jyQJKvJXl+O3ZVe8mN7S+G35ugxJcCa6tqVXvN+4HfAP6mveZvWvuZSe5M8uMk1yX5jbF6TktyUZLzkvwYeFuS/ZNc1Wr6p1bjeWOvOTLJV5KsTXJjklds6vytvvuBI7fiX4c6ZLhrKEcBOwIXb6LPnzIKrUOBQ4AjgPdsxjlOAP4c2B1YCbwfoKpe3o4fUlU7V9UFE7z2xcB31u9U1Z8C/wy8o73mHe3Q11t9ezAaRf99kh3H3mcJcBGwG3B+63MtsCdwGvCW9R2TLAC+AJze3u8Pgc8mmb+J8wPcwuifj/Q4w11D2RP4UVU9uok+bwLeV1X3VNUaRkH9lk3039jFVXVtO8f5jEJ4unYDHpiqU1WdV1X3VtWjVfXfgB2AF4x1+WpV/UNVPQbMB34NeG9V/ayqrgYuHev7ZuCyqrqsqh6rqsuBFcBrpijjgVav9DjDXUO5F9hrinno5wB3jO3f0dqm6+6x7QeBnTfjtfcDu0zVKckfJrklyboka4Fdgb3Gutw5tv0c4L6qenCS488FXt+mZNa293sZsM8UZewCrJ2qVs0thruG8lXgYeDYTfT5AaPAW2+/1gbwU2Cn9QeSPHuG67sJ+OWN2ja4hGqbX383cDywe1XtBqwDMslr7gL2SLLTWNu+Y9t3Ap+qqt3GHs+oqjMmOv+YXwFunM4PpbnDcNcgqmod8F7go0mOTbJTku2THJPkg63b3wHvaevN92r913/4eCPwwiSHtjnu0zazhB8Cz9vE8WuB3do8+GSv2QV4FFgDzEvyXuCZk71hVd3BaJrltCRPS3IU8LqxLucBr0vy75Nsl2THJK9IsnCymlt9ewDXbOJn0RxkuGswbY76FEYfkq5hNHJ9B/APrcvpjMLwJuBm4PrWRlV9l9Fqm38CvgdssHJmGk4Dlrfpj+MnqO1nwLmM5sHXOxM4Lsn9Sc4C/hH4IvBdRlNGD7HhNMtE3sTow+R7289yAaO/YKiqOxl9APsnPPHP41088d/pxucHeCOwvK15lx4Xb9YhTax98/OfgcPWf5FpFs5xAXBrVf3ZFrx2B0Z/wby8qu6Z8eL0lGa4S9tQkl8D7gP+Ffh3jP5KOaqqvjFoYerObHxjTtLkng18jtFS0FXASQa7ZoMjd0nqkB+oSlKHDHdJ6tCTYs59r732qkWLFg1dhiQ9pVx33XU/qqoJr+f/pAj3RYsWsWLFiqHLkKSnlCR3THbMaRlJ6tC0wj3J95PcnOSGJCta2x5JLk/yvfa8e2tPkrOSrExyU5LDZ/MHkCT9os0Zub+yqg6tqsVt/1Tgiqo6ELiCJ271dQxwYHssAz4+U8VKkqZna6ZllgDL2/Zynri63xLgkzVyDaOLL011yVJJ0gyabrgX8H/abcSWtba9q+qutn03o3tgAixgw4snrWptG0iyrN0YecWaNWu2oHRJ0mSmu1rmZVW1OsmzgMuT3Dp+sKoqyWZ91bWqzgbOBli8eLFfk5WkGTStkXtVrW7P9zC65+URwA/XT7e05/VXpVvNhjcgWNjaJEnbyJThnuQZSXZZv83oSnbfZHTvx6Wt21LgkrZ9KfDWtmrmSGDd2PSNJGkbmM60zN7AxUnW9/90VX0xydeBC5OcyOhGBetveHAZoxv6rmR038q3z3jVA1l06heGLqEr3z/jtUOXIHVrynCvqtuBQyZovxc4eoL2Ak6ekeokSVvEb6hKUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDs0bugBJW2/RqV8YuoSufP+M1w5dwlZz5C5JHTLcJalD0w73JNsl+UaSz7f9/ZN8LcnKJBckeVpr36Htr2zHF81O6ZKkyWzOyP33gVvG9j8AfLiqDgDuB05s7ScC97f2D7d+kqRtaFrhnmQh8Frgf7b9AK8CLmpdlgPHtu0lbZ92/OjWX5K0jUx35P4R4N3AY21/T2BtVT3a9lcBC9r2AuBOgHZ8Xeu/gSTLkqxIsmLNmjVbWL4kaSJThnuS3wLuqarrZvLEVXV2VS2uqsXz58+fybeWpDlvOuvcfx347SSvAXYEngmcCeyWZF4bnS8EVrf+q4F9gVVJ5gG7AvfOeOWSpElNOXKvqj+uqoVVtQg4AfhSVb0JuBI4rnVbClzSti9t+7TjX6qqmtGqJUmbtDXr3P8IOCXJSkZz6ue09nOAPVv7KcCpW1eiJGlzbdblB6rqy8CX2/btwBET9HkIeP0M1CZJ2kJ+Q1WSOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjo0Zbgn2THJtUluTPKtJH/e2vdP8rUkK5NckORprX2Htr+yHV80uz+CJGlj0xm5Pwy8qqoOAQ4FXp3kSOADwIer6gDgfuDE1v9E4P7W/uHWT5K0DU0Z7jXyk7a7fXsU8Crgota+HDi2bS9p+7TjRyfJjFUsSZrStObck2yX5AbgHuBy4DZgbVU92rqsAha07QXAnQDt+Dpgz5ksWpK0adMK96r6eVUdCiwEjgAO2toTJ1mWZEWSFWvWrNnat5Mkjdms1TJVtRa4EjgK2C3JvHZoIbC6ba8G9gVox3cF7p3gvc6uqsVVtXj+/PlbWL4kaSLTWS0zP8lubfvpwG8CtzAK+eNat6XAJW370rZPO/6lqqqZLFqStGnzpu7CPsDyJNsx+p/BhVX1+STfBj6T5HTgG8A5rf85wKeSrATuA06YhbolSZswZbhX1U3AYRO0385o/n3j9oeA189IdZKkLeI3VCWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUNThnuSfZNcmeTbSb6V5Pdb+x5JLk/yvfa8e2tPkrOSrExyU5LDZ/uHkCRtaDoj90eBd1bVwcCRwMlJDgZOBa6oqgOBK9o+wDHAge2xDPj4jFctSdqkKcO9qu6qquvb9gPALcACYAmwvHVbDhzbtpcAn6yRa4Ddkuwz45VLkia1WXPuSRYBhwFfA/auqrvaobuBvdv2AuDOsZetam2SpG1k2uGeZGfgs8AfVNWPx49VVQG1OSdOsizJiiQr1qxZszkvlSRNYVrhnmR7RsF+flV9rjX/cP10S3u+p7WvBvYde/nC1raBqjq7qhZX1eL58+dvaf2SpAlMZ7VMgHOAW6rqQ2OHLgWWtu2lwCVj7W9tq2aOBNaNTd9IkraBedPo8+vAW4Cbk9zQ2v4EOAO4MMmJwB3A8e3YZcBrgJXAg8DbZ7RiSdKUpgz3qroayCSHj56gfwEnb2VdkqSt4DdUJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ1OGe5JPJLknyTfH2vZIcnmS77Xn3Vt7kpyVZGWSm5IcPpvFS5ImNp2R+7nAqzdqOxW4oqoOBK5o+wDHAAe2xzLg4zNTpiRpc0wZ7lV1FXDfRs1LgOVtezlw7Fj7J2vkGmC3JPvMVLGSpOnZ0jn3vavqrrZ9N7B3214A3DnWb1VrkyRtQ1v9gWpVFVCb+7oky5KsSLJizZo1W1uGJGnMlob7D9dPt7Tne1r7amDfsX4LW9svqKqzq2pxVS2eP3/+FpYhSZrIlob7pcDStr0UuGSs/a1t1cyRwLqx6RtJ0jYyb6oOSf4OeAWwV5JVwJ8BZwAXJjkRuAM4vnW/DHgNsBJ4EHj7LNQsSZrClOFeVW+Y5NDRE/Qt4OStLUqStHX8hqokdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDhnuktQhw12SOmS4S1KHDHdJ6pDhLkkdMtwlqUOGuyR1yHCXpA4Z7pLUIcNdkjpkuEtShwx3SeqQ4S5JHTLcJalDhrskdchwl6QOGe6S1CHDXZI6ZLhLUocMd0nqkOEuSR0y3CWpQ4a7JHXIcJekDs1KuCd5dZLvJFmZ5NTZOIckaXIzHu5JtgM+ChwDHAy8IcnBM30eSdLkZmPkfgSwsqpur6qfAZ8BlszCeSRJk5g3C++5ALhzbH8V8NKNOyVZBixruz9J8p1ZqGWu2gv40dBFTCUfGLoCDcDfzZn13MkOzEa4T0tVnQ2cPdT5e5ZkRVUtHroOaWP+bm47szEtsxrYd2x/YWuTJG0jsxHuXwcOTLJ/kqcBJwCXzsJ5JEmTmPFpmap6NMk7gH8EtgM+UVXfmunzaJOc7tKTlb+b20iqaugaJEkzzG+oSlKHDHdJ6pDhLkkdMtwlzbokT0/ygqHrmEsM905k5M1J3tv290tyxNB1SUleB9wAfLHtH5rE5dGzzHDvx8eAo4A3tP0HGF3ATRraaYyuObUWoKpuAPYfsqC5YLDLD2jGvbSqDk/yDYCqur99iUwa2iNVtS7JeJtrsGeZ4d6PR9rllgsgyXzgsWFLkgD4VpI3AtslORD4z8BXBq6pe07L9OMs4GLgWUneD1wN/OWwJUkA/CfghcDDwKeBdcAfDFrRHOA3VDuS5CDgaCDAFVV1y8AlSSQ5vKquH7qOucZw70SSs4DPVJV/7upJJcmVwLOBi4ALquqbA5c0Jzgt04/rgPckuS3JXyXxmtl6UqiqVwKvBNYAf5vk5iTvGbis7jly70ySPYDfZXSp5f2q6sCBS5Iel+TFwLuB36sqV3PNIkfu/TkAOIjR7bduHbgWiSS/kuS0JDcDf81opczCgcvqniP3TiT5IPA7wG3ABcDFVbV22KokSPJVRr+TF1bVD4auZ65wnXs/bgOOqqon/c2HNbdU1VFD1zAXOXJ/iktyUFXdmuTwiY67BE1DSXJhVR3fpmPGgyZAVdVLBiptTjDcn+KSnF1Vy9pys41VVb1qmxclAUn2qaq7kjx3ouNVdce2rmkuMdw7kWTHqnpoqjZpW0vygar6o6naNLNcLdOPib685Bea9GTwmxO0HbPNq5hj/ED1KS7Js4EFwNOTHMZoPhPgmcBOgxWmOS/JScB/BJ6X5KaxQ7sA/zJMVXOH0zJPcUmWAm8DFgMrxg49AJxbVZ8boi4pya7A7sB/BU4dO/RAVd03TFVzh+HeiSS/W1WfHboOaTJJngXsuH6/qv7fgOV0z3B/ikvy5qo6L8k7meAGCFX1oQHKkh7XbrP3IeA5wD2Mvj19S1W9cNDCOucHqk99z2jPOzOay9z4IQ3tdOBI4LtVtT+jy1JfM2xJ/XPkLmlWJVlRVYuT3AgcVlWPJbmxqg4ZuraeOXLvRJIPJnlmku2TXJFkTZI3D12XBKxNsjNwFXB+kjOBnw5cU/ccuXciyQ1VdWiS3wF+CzgFuMrRkYaW5BnAQ4yW6b4J2BU4v6ruHbSwzrnOvR/r/12+Fvj7Ce42Lw2iqsZH6csHK2SOMdz78fkktwL/BpyUZD6j0ZI0qCQP8IsrudYx+l7GO6vq9m1fVf+clulIuwvTuqr6eZKdgGdW1d1D16W5LclfAKuATzOamjkBeD5wPXBSVb1iuOr6Zbh3Isn2wEnAy1vT/wX+e1U9MlxVEky0MmbsMyJXzcwSV8v04+PArwIfa4/DW5s0tAeTHJ/kl9rjeJ6YMnR0OUscuXdiktGRoyINLsnzgDOBoxiF+TXAfwFWA79aVVcPWF63/EC1Hz9P8vyqug0e/w/q5wPXJNE+MH3dJIcN9lliuPfjXcCVSdavPFgEvH24cqSRJL/MaIpw76p6UZKXAL9dVacPXFrXnHPvx78Afws8BtzXtr86aEXSyP8A/hh4BKCqbmK0YkazyHDvxyeB/YG/AP4aeB7wqUErkkZ2qqprN2p7dJBK5hCnZfrxoqo6eGz/yiTfHqwa6Qk/SvJ82sqYJMcBdw1bUv8M935cn+TIqroGIMlL2fDOTNJQTgbOBg5Kshr4V0bXmNEscilkJ5LcArwAWH93m/2A7zD687eq6iVD1aa5LckOwHGMPuTfA/gxo9/J9w1ZV+8cuffj1UMXIE3iEmAto8sN/GDgWuYMR+6SZlWSb1bVi4auY65xtYyk2faVJC8euoi5xpG7pFnVVm0dwOiD1IcZXRnSz4FmmeEuaVYlee5E7VV1x7auZS4x3CWpQ865S1KHDHdJ6pDhLkkdMtwlqUOGuyR16P8DlvWqOm00mnUAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"Wq6wLNiOSfP3"},"source":["# Modelling"]},{"cell_type":"markdown","metadata":{"id":"Jkk7TrKBAous"},"source":["## Neural Network"]},{"cell_type":"markdown","metadata":{"id":"cBwwrNpv-0_2"},"source":["### Var"]},{"cell_type":"code","metadata":{"id":"7Iqx73ywSepp","executionInfo":{"status":"ok","timestamp":1632300611014,"user_tz":-420,"elapsed":27,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from tensorflow.keras.models import Sequential, Model\n","from tensorflow.keras.layers import Activation, GlobalAveragePooling1D, GlobalMaxPooling1D, BatchNormalization, Concatenate, Input, Embedding\n","from tensorflow.keras.layers import SimpleRNN, GRU, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, SpatialDropout1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras import initializers, regularizers, constraints, optimizers, layers\n","from tensorflow.keras.regularizers import l2\n","import keras.backend as K\n","import os\n","from keras import callbacks"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"8rgWhWpitjwH","executionInfo":{"status":"ok","timestamp":1632300611016,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["earlystopping = callbacks.EarlyStopping(monitor =\"val_loss\", \n","                                        mode =\"min\", patience = 5, \n","                                        restore_best_weights = True)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_BOmSXv1TEG2","executionInfo":{"status":"ok","timestamp":1632300614684,"user_tz":-420,"elapsed":3695,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6075db25-54e3-4746-a56a-8124b8890bcf"},"source":["pip install keras_self_attention"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: keras_self_attention in /usr/local/lib/python3.7/dist-packages (0.50.0)\n","Requirement already satisfied: Keras in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (2.6.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from keras_self_attention) (1.19.5)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1A0quJ_fTGeY","executionInfo":{"status":"ok","timestamp":1632300614685,"user_tz":-420,"elapsed":18,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c8dc1b09-fc50-4db3-b45e-7462243ff64b"},"source":["max_features =20000\n","tokenizer = Tokenizer() \n","tokenizer.fit_on_texts(text.values) \n","max_seq_len = max([len(i.split()) for i in text])\n","\n","X = tokenizer.texts_to_sequences(text.values)\n","X = pad_sequences(X, maxlen=max_seq_len)\n","Y = pd.get_dummies(label).values\n","print(\"Shape of data tensor:\", X.shape)\n","print(\"Shape of label tensor:\",Y.shape)"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of data tensor: (906, 15)\n","Shape of label tensor: (906, 2)\n"]}]},{"cell_type":"code","metadata":{"id":"Q6s50objTIlr","executionInfo":{"status":"ok","timestamp":1632300614686,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.33, random_state = 0)"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"q9WgthpgNToG","executionInfo":{"status":"ok","timestamp":1632300614686,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["unit = 300\n","dropout = 0.3\n","batch = 64\n","epoch = 100\n","output = 100"],"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DcM4p2ImTLdL"},"source":["### RNN"]},{"cell_type":"code","metadata":{"id":"oBV6f8FETKtp","executionInfo":{"status":"ok","timestamp":1632300614687,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_rnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_rnn = Sequential()\n","  model_rnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_rnn.add(Dense(32, activation='relu'))\n","  model_rnn.add(SpatialDropout1D(dropout))\n","  model_rnn.add(SimpleRNN(unit))\n","  model_rnn.add(Dense(2, activation='sigmoid'))\n","  model_rnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_rnn.summary())\n","\n","  return model_rnn"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fiBDUCglTQJn","executionInfo":{"status":"ok","timestamp":1632300622306,"user_tz":-420,"elapsed":7631,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c04e33f1-4df8-4713-b0e9-277c3997031c"},"source":["m_rnn = get_model_rnn(X_train, Y_train)\n","history_RNN = m_rnn.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 15, 100)           77900     \n","_________________________________________________________________\n","spatial_dropout1d (SpatialDr (None, 15, 100)           0         \n","_________________________________________________________________\n","simple_rnn (SimpleRNN)       (None, 300)               120300    \n","_________________________________________________________________\n","dense (Dense)                (None, 2)                 602       \n","=================================================================\n","Total params: 198,802\n","Trainable params: 198,802\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","8/8 [==============================] - 2s 85ms/step - loss: 0.6884 - acc: 0.5443 - val_loss: 0.6692 - val_acc: 0.5574\n","Epoch 2/100\n","8/8 [==============================] - 0s 39ms/step - loss: 0.6324 - acc: 0.6639 - val_loss: 0.6330 - val_acc: 0.7295\n","Epoch 3/100\n","8/8 [==============================] - 0s 40ms/step - loss: 0.5225 - acc: 0.8186 - val_loss: 0.4782 - val_acc: 0.8279\n","Epoch 4/100\n","8/8 [==============================] - 0s 43ms/step - loss: 0.3760 - acc: 0.8660 - val_loss: 0.5460 - val_acc: 0.7295\n","Epoch 5/100\n","8/8 [==============================] - 0s 41ms/step - loss: 0.3050 - acc: 0.8907 - val_loss: 0.3845 - val_acc: 0.8607\n","Epoch 6/100\n","8/8 [==============================] - 0s 39ms/step - loss: 0.1792 - acc: 0.9505 - val_loss: 0.3202 - val_acc: 0.8443\n","Epoch 7/100\n","8/8 [==============================] - 0s 40ms/step - loss: 0.1223 - acc: 0.9649 - val_loss: 0.2765 - val_acc: 0.8852\n","Epoch 8/100\n","8/8 [==============================] - 0s 38ms/step - loss: 0.0935 - acc: 0.9649 - val_loss: 0.2998 - val_acc: 0.8689\n","Epoch 9/100\n","8/8 [==============================] - 0s 43ms/step - loss: 0.0826 - acc: 0.9649 - val_loss: 0.3271 - val_acc: 0.8607\n","Epoch 10/100\n","8/8 [==============================] - 0s 40ms/step - loss: 0.0713 - acc: 0.9814 - val_loss: 0.2757 - val_acc: 0.9016\n","Epoch 11/100\n","8/8 [==============================] - 0s 41ms/step - loss: 0.0711 - acc: 0.9814 - val_loss: 0.4136 - val_acc: 0.8361\n","Epoch 12/100\n","8/8 [==============================] - 0s 42ms/step - loss: 0.0656 - acc: 0.9794 - val_loss: 0.2934 - val_acc: 0.8852\n","Epoch 13/100\n","8/8 [==============================] - 0s 42ms/step - loss: 0.0584 - acc: 0.9835 - val_loss: 0.4966 - val_acc: 0.8033\n","Epoch 14/100\n","8/8 [==============================] - 0s 40ms/step - loss: 0.0483 - acc: 0.9897 - val_loss: 0.2570 - val_acc: 0.9180\n","Epoch 15/100\n","8/8 [==============================] - 0s 39ms/step - loss: 0.0369 - acc: 0.9918 - val_loss: 0.2599 - val_acc: 0.8934\n","Epoch 16/100\n","8/8 [==============================] - 0s 42ms/step - loss: 0.0297 - acc: 0.9979 - val_loss: 0.3049 - val_acc: 0.8770\n","Epoch 17/100\n","8/8 [==============================] - 0s 40ms/step - loss: 0.0247 - acc: 0.9959 - val_loss: 0.2810 - val_acc: 0.8934\n","Epoch 18/100\n","8/8 [==============================] - 0s 39ms/step - loss: 0.0241 - acc: 0.9959 - val_loss: 0.2713 - val_acc: 0.8852\n","Epoch 19/100\n","8/8 [==============================] - 0s 38ms/step - loss: 0.0175 - acc: 0.9979 - val_loss: 0.2915 - val_acc: 0.8852\n"]}]},{"cell_type":"code","metadata":{"id":"Rc0j9TxoTR-A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300622973,"user_tz":-420,"elapsed":698,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"86154364-e6ef-40c5-8a76-231bdef3599f"},"source":["score,acc_rnn = m_rnn.evaluate(X_test, Y_test)"],"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 8ms/step - loss: 0.3958 - acc: 0.8528\n"]}]},{"cell_type":"code","metadata":{"id":"jWN9Q8QuTVXR","executionInfo":{"status":"ok","timestamp":1632300622973,"user_tz":-420,"elapsed":6,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_rnn.save('/content/drive/My Drive/Thesis/Code/Model/rnn_sentiment_model.h5')"],"execution_count":19,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"f_XeLWSjTX9o"},"source":["### GRU"]},{"cell_type":"code","metadata":{"id":"2zuM2gB8TXN8","executionInfo":{"status":"ok","timestamp":1632300622974,"user_tz":-420,"elapsed":6,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_gru(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_gru = Sequential()\n","  model_gru.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_gru.add(Dense(32, activation='relu'))\n","  model_gru.add(SpatialDropout1D(dropout))\n","  model_gru.add(GRU(unit))\n","  model_gru.add(Dense(2, activation='sigmoid'))\n","  model_gru.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_gru.summary())\n","\n","  return model_gru"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"iYLfLwNYTehH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300636577,"user_tz":-420,"elapsed":13609,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"37d8c78c-6951-4e21-e1db-ed089b184e4d"},"source":["m_gru = get_model_gru(X_train, Y_train)\n","history_GRU = m_gru.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_1 (Embedding)      (None, 15, 100)           77900     \n","_________________________________________________________________\n","spatial_dropout1d_1 (Spatial (None, 15, 100)           0         \n","_________________________________________________________________\n","gru (GRU)                    (None, 300)               361800    \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 2)                 602       \n","=================================================================\n","Total params: 440,302\n","Trainable params: 440,302\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","8/8 [==============================] - 4s 170ms/step - loss: 0.6851 - acc: 0.5505 - val_loss: 0.6709 - val_acc: 0.5410\n","Epoch 2/100\n","8/8 [==============================] - 1s 99ms/step - loss: 0.6542 - acc: 0.5732 - val_loss: 0.6273 - val_acc: 0.7541\n","Epoch 3/100\n","8/8 [==============================] - 1s 98ms/step - loss: 0.5730 - acc: 0.8495 - val_loss: 0.4653 - val_acc: 0.8033\n","Epoch 4/100\n","8/8 [==============================] - 1s 99ms/step - loss: 0.3498 - acc: 0.8969 - val_loss: 0.2367 - val_acc: 0.9344\n","Epoch 5/100\n","8/8 [==============================] - 1s 101ms/step - loss: 0.2164 - acc: 0.9278 - val_loss: 0.2705 - val_acc: 0.9098\n","Epoch 6/100\n","8/8 [==============================] - 1s 99ms/step - loss: 0.1736 - acc: 0.9423 - val_loss: 0.2223 - val_acc: 0.9426\n","Epoch 7/100\n","8/8 [==============================] - 1s 96ms/step - loss: 0.1190 - acc: 0.9629 - val_loss: 0.1913 - val_acc: 0.9508\n","Epoch 8/100\n","8/8 [==============================] - 1s 99ms/step - loss: 0.0900 - acc: 0.9691 - val_loss: 0.1877 - val_acc: 0.9590\n","Epoch 9/100\n","8/8 [==============================] - 1s 98ms/step - loss: 0.0724 - acc: 0.9814 - val_loss: 0.1940 - val_acc: 0.9590\n","Epoch 10/100\n","8/8 [==============================] - 1s 95ms/step - loss: 0.0613 - acc: 0.9856 - val_loss: 0.2037 - val_acc: 0.9590\n","Epoch 11/100\n","8/8 [==============================] - 1s 98ms/step - loss: 0.0498 - acc: 0.9876 - val_loss: 0.2130 - val_acc: 0.9590\n","Epoch 12/100\n","8/8 [==============================] - 1s 95ms/step - loss: 0.0374 - acc: 0.9938 - val_loss: 0.2220 - val_acc: 0.9590\n","Epoch 13/100\n","8/8 [==============================] - 1s 100ms/step - loss: 0.0342 - acc: 0.9938 - val_loss: 0.2324 - val_acc: 0.9590\n"]}]},{"cell_type":"code","metadata":{"id":"l9uQanamTf88","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300636579,"user_tz":-420,"elapsed":41,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"2bf3cbe9-671b-4398-c616-ccd627cbd76d"},"source":["score,acc_gru = m_gru.evaluate(X_test, Y_test)"],"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 21ms/step - loss: 0.2379 - acc: 0.9231\n"]}]},{"cell_type":"code","metadata":{"id":"cOS5Ff2ZTkEX","executionInfo":{"status":"ok","timestamp":1632300636580,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_gru.save('/content/drive/My Drive/Thesis/Code/Model/gru_harga_model.h5')"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"id":"qpIRKfw4TmBz","executionInfo":{"status":"ok","timestamp":1632300636581,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":[""],"execution_count":23,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hcWT_dKBTmvQ"},"source":["### LSTM"]},{"cell_type":"code","metadata":{"id":"3wX4AVxuTo4H","executionInfo":{"status":"ok","timestamp":1632300636582,"user_tz":-420,"elapsed":33,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_LSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_LSTM = Sequential()\n","  model_LSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_LSTM.add(Dense(32, activation='relu'))\n","  model_LSTM.add(SpatialDropout1D(dropout))\n","  model_LSTM.add(LSTM(unit))\n","  model_LSTM.add(Dense(2, activation='sigmoid'))\n","  model_LSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_LSTM.summary())\n","  \n","  return model_LSTM"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"GN-idepNTrNu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300654795,"user_tz":-420,"elapsed":18244,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8374ec23-438b-44d8-ab20-62bf9258dfcb"},"source":["m_lstm = get_model_LSTM(X_train, Y_train)\n","history_LSTM = m_lstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_2 (Embedding)      (None, 15, 100)           77900     \n","_________________________________________________________________\n","spatial_dropout1d_2 (Spatial (None, 15, 100)           0         \n","_________________________________________________________________\n","lstm (LSTM)                  (None, 300)               481200    \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 2)                 602       \n","=================================================================\n","Total params: 559,702\n","Trainable params: 559,702\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","8/8 [==============================] - 4s 197ms/step - loss: 0.6899 - acc: 0.5237 - val_loss: 0.6784 - val_acc: 0.5410\n","Epoch 2/100\n","8/8 [==============================] - 1s 123ms/step - loss: 0.6761 - acc: 0.6598 - val_loss: 0.6591 - val_acc: 0.6230\n","Epoch 3/100\n","8/8 [==============================] - 1s 129ms/step - loss: 0.6330 - acc: 0.6021 - val_loss: 0.5858 - val_acc: 0.7131\n","Epoch 4/100\n","8/8 [==============================] - 1s 126ms/step - loss: 0.5262 - acc: 0.7938 - val_loss: 0.4057 - val_acc: 0.7951\n","Epoch 5/100\n","8/8 [==============================] - 1s 125ms/step - loss: 0.3448 - acc: 0.8742 - val_loss: 0.2679 - val_acc: 0.9426\n","Epoch 6/100\n","8/8 [==============================] - 1s 125ms/step - loss: 0.2504 - acc: 0.9464 - val_loss: 0.2200 - val_acc: 0.9590\n","Epoch 7/100\n","8/8 [==============================] - 1s 123ms/step - loss: 0.1645 - acc: 0.9588 - val_loss: 0.3088 - val_acc: 0.8770\n","Epoch 8/100\n","8/8 [==============================] - 1s 127ms/step - loss: 0.1652 - acc: 0.9443 - val_loss: 0.2501 - val_acc: 0.9344\n","Epoch 9/100\n","8/8 [==============================] - 1s 126ms/step - loss: 0.1423 - acc: 0.9773 - val_loss: 0.1926 - val_acc: 0.9590\n","Epoch 10/100\n","8/8 [==============================] - 1s 123ms/step - loss: 0.1071 - acc: 0.9753 - val_loss: 0.1866 - val_acc: 0.9590\n","Epoch 11/100\n","8/8 [==============================] - 1s 130ms/step - loss: 0.0807 - acc: 0.9753 - val_loss: 0.1896 - val_acc: 0.9590\n","Epoch 12/100\n","8/8 [==============================] - 1s 126ms/step - loss: 0.0695 - acc: 0.9835 - val_loss: 0.1978 - val_acc: 0.9590\n","Epoch 13/100\n","8/8 [==============================] - 1s 125ms/step - loss: 0.0574 - acc: 0.9835 - val_loss: 0.2018 - val_acc: 0.9508\n","Epoch 14/100\n","8/8 [==============================] - 1s 123ms/step - loss: 0.0566 - acc: 0.9856 - val_loss: 0.2121 - val_acc: 0.9508\n","Epoch 15/100\n","8/8 [==============================] - 1s 125ms/step - loss: 0.0417 - acc: 0.9918 - val_loss: 0.2360 - val_acc: 0.9344\n"]}]},{"cell_type":"code","metadata":{"id":"GFNUlAeVTsiT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300655466,"user_tz":-420,"elapsed":696,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"67da2565-e215-4efd-a3db-ae34bcd23a48"},"source":["score,acc_lstm = m_lstm.evaluate(X_test, Y_test)"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 21ms/step - loss: 0.2213 - acc: 0.9197\n"]}]},{"cell_type":"code","metadata":{"id":"DNaWHiB8Tuva","executionInfo":{"status":"ok","timestamp":1632300655468,"user_tz":-420,"elapsed":51,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_lstm.save('/content/drive/My Drive/Thesis/Code/Model/lstm_sentiment_model.h5')"],"execution_count":27,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xTG40dBOAxrH"},"source":["### CNN"]},{"cell_type":"code","metadata":{"id":"qrk04_vWTwcj","executionInfo":{"status":"ok","timestamp":1632300655473,"user_tz":-420,"elapsed":55,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras import layers\n","from tensorflow.keras.layers import Concatenate, Input, Embedding, LSTM, Attention, Dense, Dropout, Bidirectional, Flatten, Conv1D, MaxPool1D, Reshape, GlobalAveragePooling1D, UpSampling1D, Layer\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras.models import Model\n","import matplotlib.pyplot as plt\n","import os"],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"id":"V_JQTnXqT2fA","executionInfo":{"status":"ok","timestamp":1632300655475,"user_tz":-420,"elapsed":56,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_cnn(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cnn = Sequential()\n","  model_cnn.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cnn.add(Conv1D(filters=unit, kernel_size=3, padding='same', strides=1, activation='relu'))\n","  model_cnn.add(MaxPool1D(pool_size=2))\n","  # model_cnn.add(Dense(32, activation='relu'))\n","  model_cnn.add(SpatialDropout1D(dropout))\n","  model_cnn.add(Flatten())\n","  model_cnn.add(Dense(2, activation='sigmoid'))\n","  model_cnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cnn.summary())\n","\n","  return model_cnn"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"id":"kiHoXRfxT3-t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300658910,"user_tz":-420,"elapsed":3488,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"435995fe-e1f3-45b9-c56b-29343be48301"},"source":["m_cnn = get_model_cnn(X_train, Y_train)\n","history_cnn = m_cnn.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_3\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_3 (Embedding)      (None, 15, 100)           77900     \n","_________________________________________________________________\n","conv1d (Conv1D)              (None, 15, 300)           90300     \n","_________________________________________________________________\n","max_pooling1d (MaxPooling1D) (None, 7, 300)            0         \n","_________________________________________________________________\n","spatial_dropout1d_3 (Spatial (None, 7, 300)            0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 2100)              0         \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 2)                 4202      \n","=================================================================\n","Total params: 172,402\n","Trainable params: 172,402\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","8/8 [==============================] - 1s 46ms/step - loss: 0.6874 - acc: 0.5340 - val_loss: 0.6816 - val_acc: 0.5410\n","Epoch 2/100\n","8/8 [==============================] - 0s 24ms/step - loss: 0.6695 - acc: 0.5608 - val_loss: 0.6660 - val_acc: 0.5410\n","Epoch 3/100\n","8/8 [==============================] - 0s 25ms/step - loss: 0.6386 - acc: 0.5732 - val_loss: 0.6219 - val_acc: 0.6557\n","Epoch 4/100\n","8/8 [==============================] - 0s 29ms/step - loss: 0.5712 - acc: 0.8000 - val_loss: 0.5286 - val_acc: 0.8852\n","Epoch 5/100\n","8/8 [==============================] - 0s 24ms/step - loss: 0.4455 - acc: 0.9423 - val_loss: 0.3864 - val_acc: 0.9508\n","Epoch 6/100\n","8/8 [==============================] - 0s 26ms/step - loss: 0.2907 - acc: 0.9546 - val_loss: 0.2603 - val_acc: 0.9590\n","Epoch 7/100\n","8/8 [==============================] - 0s 24ms/step - loss: 0.1715 - acc: 0.9649 - val_loss: 0.2006 - val_acc: 0.9590\n","Epoch 8/100\n","8/8 [==============================] - 0s 26ms/step - loss: 0.1149 - acc: 0.9773 - val_loss: 0.1792 - val_acc: 0.9590\n","Epoch 9/100\n","8/8 [==============================] - 0s 25ms/step - loss: 0.0825 - acc: 0.9814 - val_loss: 0.1807 - val_acc: 0.9672\n","Epoch 10/100\n","8/8 [==============================] - 0s 26ms/step - loss: 0.0618 - acc: 0.9794 - val_loss: 0.1904 - val_acc: 0.9590\n","Epoch 11/100\n","8/8 [==============================] - 0s 26ms/step - loss: 0.0489 - acc: 0.9918 - val_loss: 0.1929 - val_acc: 0.9590\n","Epoch 12/100\n","8/8 [==============================] - 0s 25ms/step - loss: 0.0436 - acc: 0.9897 - val_loss: 0.1977 - val_acc: 0.9590\n","Epoch 13/100\n","8/8 [==============================] - 0s 26ms/step - loss: 0.0338 - acc: 0.9938 - val_loss: 0.2195 - val_acc: 0.9426\n"]}]},{"cell_type":"code","metadata":{"id":"R8lCvNZcT5nt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300659650,"user_tz":-420,"elapsed":766,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"e54b1669-17ad-4b4c-f1ee-cf7447384bfa"},"source":["score,acc_cnn = m_cnn.evaluate(X_test, Y_test)"],"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 5ms/step - loss: 0.2185 - acc: 0.9197\n"]}]},{"cell_type":"code","metadata":{"id":"uISwQfIKT7c-","executionInfo":{"status":"ok","timestamp":1632300659651,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["m_cnn.save('/content/drive/My Drive/Thesis/Code/FixModel/cnn_sentiment_lokasi_9565.h5')"],"execution_count":32,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DHTDUWbYA2wP"},"source":["### BLSTM"]},{"cell_type":"code","metadata":{"id":"V4juzmHFT9aI","executionInfo":{"status":"ok","timestamp":1632300659652,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_BLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_BLSTM = Sequential()\n","  model_BLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_BLSTM.add(Dense(32, activation='relu'))\n","  model_BLSTM.add((SpatialDropout1D(dropout)))\n","  model_BLSTM.add(Bidirectional(LSTM(unit)))\n","  model_BLSTM.add(Dense(2, activation='sigmoid'))\n","  model_BLSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_BLSTM.summary())\n","  return model_BLSTM"],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"id":"jkcOCbDXUAzq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300683236,"user_tz":-420,"elapsed":23595,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0119ec2c-3458-47a7-8ea1-8799b3141e97"},"source":["m_blstm = get_model_BLSTM(X_train, Y_train)\n","history_BLSTM = m_blstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_4\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_4 (Embedding)      (None, 15, 100)           77900     \n","_________________________________________________________________\n","spatial_dropout1d_4 (Spatial (None, 15, 100)           0         \n","_________________________________________________________________\n","bidirectional (Bidirectional (None, 600)               962400    \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 2)                 1202      \n","=================================================================\n","Total params: 1,041,502\n","Trainable params: 1,041,502\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","8/8 [==============================] - 7s 355ms/step - loss: 0.6861 - acc: 0.5608 - val_loss: 0.6836 - val_acc: 0.5410\n","Epoch 2/100\n","8/8 [==============================] - 2s 224ms/step - loss: 0.6747 - acc: 0.5608 - val_loss: 0.6545 - val_acc: 0.5492\n","Epoch 3/100\n","8/8 [==============================] - 2s 225ms/step - loss: 0.5357 - acc: 0.7278 - val_loss: 0.2147 - val_acc: 0.9262\n","Epoch 4/100\n","8/8 [==============================] - 2s 226ms/step - loss: 0.2636 - acc: 0.9113 - val_loss: 0.2287 - val_acc: 0.9344\n","Epoch 5/100\n","8/8 [==============================] - 2s 227ms/step - loss: 0.1584 - acc: 0.9546 - val_loss: 0.1945 - val_acc: 0.9426\n","Epoch 6/100\n","8/8 [==============================] - 2s 219ms/step - loss: 0.1034 - acc: 0.9670 - val_loss: 0.2447 - val_acc: 0.9180\n","Epoch 7/100\n","8/8 [==============================] - 2s 223ms/step - loss: 0.0971 - acc: 0.9753 - val_loss: 0.2245 - val_acc: 0.9508\n","Epoch 8/100\n","8/8 [==============================] - 2s 223ms/step - loss: 0.0615 - acc: 0.9794 - val_loss: 0.2146 - val_acc: 0.9508\n","Epoch 9/100\n","8/8 [==============================] - 2s 217ms/step - loss: 0.0398 - acc: 0.9918 - val_loss: 0.2562 - val_acc: 0.9344\n","Epoch 10/100\n","8/8 [==============================] - 2s 222ms/step - loss: 0.0323 - acc: 0.9918 - val_loss: 0.3550 - val_acc: 0.9098\n"]}]},{"cell_type":"code","metadata":{"id":"fwpOGPOoUCc5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300685311,"user_tz":-420,"elapsed":1507,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"16dbc414-5e38-4dce-f5e0-180b213dbe76"},"source":["score,acc_blstm = m_blstm.evaluate(X_test, Y_test)"],"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 36ms/step - loss: 0.2778 - acc: 0.8896\n"]}]},{"cell_type":"code","metadata":{"id":"W3fxKXCwUEm6","executionInfo":{"status":"ok","timestamp":1632300685312,"user_tz":-420,"elapsed":13,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_blstm.save('/content/drive/My Drive/Thesis/Code/Model/blstm_aspect_model.h5')"],"execution_count":36,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4cvyCrSDA7al"},"source":["### ABLSTM"]},{"cell_type":"code","metadata":{"id":"rzMIDKo1UGGq","executionInfo":{"status":"ok","timestamp":1632300685313,"user_tz":-420,"elapsed":12,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from keras.models import Sequential\n","from keras.layers import Embedding, LSTM, Dense, Dropout, Bidirectional, Flatten\n","import matplotlib.pyplot as plt\n","from keras_self_attention import SeqSelfAttention, SeqWeightedAttention\n","from keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","def get_model_ABLSTM(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_ABLSTM = Sequential()\n","  model_ABLSTM.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  # model_ABLSTM.add(Dense(32, activation='tanh'))\n","  model_ABLSTM.add(SpatialDropout1D(dropout))\n","  model_ABLSTM.add(Bidirectional(LSTM(unit, return_sequences=True)))\n","  model_ABLSTM.add(SeqWeightedAttention())\n","  model_ABLSTM.add(Dense(2, activation='sigmoid'))\n","  model_ABLSTM.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_ABLSTM.summary())\n","  \n","  return model_ABLSTM"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"id":"kefMlp8EUIPr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300710589,"user_tz":-420,"elapsed":25286,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"ea6feb70-f2d2-4d97-d7c8-034565e4acca"},"source":["m_ablstm = get_model_ABLSTM(X_train, Y_train)\n","history_ABLSTM = m_ablstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_5 (Embedding)      (None, 15, 100)           77900     \n","_________________________________________________________________\n","spatial_dropout1d_5 (Spatial (None, 15, 100)           0         \n","_________________________________________________________________\n","bidirectional_1 (Bidirection (None, 15, 600)           962400    \n","_________________________________________________________________\n","seq_weighted_attention (SeqW (None, 600)               601       \n","_________________________________________________________________\n","dense_5 (Dense)              (None, 2)                 1202      \n","=================================================================\n","Total params: 1,042,103\n","Trainable params: 1,042,103\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","8/8 [==============================] - 7s 410ms/step - loss: 0.6874 - acc: 0.5629 - val_loss: 0.6814 - val_acc: 0.5410\n","Epoch 2/100\n","8/8 [==============================] - 2s 226ms/step - loss: 0.6500 - acc: 0.5711 - val_loss: 0.4961 - val_acc: 0.8033\n","Epoch 3/100\n","8/8 [==============================] - 2s 229ms/step - loss: 0.3337 - acc: 0.8701 - val_loss: 0.2956 - val_acc: 0.8770\n","Epoch 4/100\n","8/8 [==============================] - 2s 233ms/step - loss: 0.1787 - acc: 0.9340 - val_loss: 0.2573 - val_acc: 0.8852\n","Epoch 5/100\n","8/8 [==============================] - 2s 234ms/step - loss: 0.1410 - acc: 0.9526 - val_loss: 0.1925 - val_acc: 0.9262\n","Epoch 6/100\n","8/8 [==============================] - 2s 229ms/step - loss: 0.1009 - acc: 0.9691 - val_loss: 0.2171 - val_acc: 0.9344\n","Epoch 7/100\n","8/8 [==============================] - 2s 237ms/step - loss: 0.0829 - acc: 0.9773 - val_loss: 0.2247 - val_acc: 0.9262\n","Epoch 8/100\n","8/8 [==============================] - 2s 230ms/step - loss: 0.0637 - acc: 0.9794 - val_loss: 0.2646 - val_acc: 0.9344\n","Epoch 9/100\n","8/8 [==============================] - 2s 235ms/step - loss: 0.0436 - acc: 0.9918 - val_loss: 0.3456 - val_acc: 0.9180\n","Epoch 10/100\n","8/8 [==============================] - 2s 229ms/step - loss: 0.0480 - acc: 0.9876 - val_loss: 0.3559 - val_acc: 0.9262\n"]}]},{"cell_type":"code","metadata":{"id":"WbpASkA7UKHi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300710591,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6f171bdb-1aa4-41f7-f9ce-0c6dc0de3a45"},"source":["score,acc_ablstm = m_ablstm.evaluate(X_test, Y_test)"],"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 37ms/step - loss: 0.2790 - acc: 0.8896\n"]}]},{"cell_type":"code","metadata":{"id":"6za6cclSULso","executionInfo":{"status":"ok","timestamp":1632300710592,"user_tz":-420,"elapsed":11,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_ablstm.save('/content/drive/My Drive/Thesis/Code/Model/ablstm_sentiment_model.h5')"],"execution_count":40,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CNQOwZDkBB2R"},"source":["### CNNLSTM"]},{"cell_type":"code","metadata":{"id":"LdijuuFWUO9E","executionInfo":{"status":"ok","timestamp":1632300710592,"user_tz":-420,"elapsed":10,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_clstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_clstm = Sequential()\n","  model_clstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_clstm.add(Conv1D(filters=unit, kernel_size=3, padding='same', activation='relu'))\n","  model_clstm.add(MaxPool1D(pool_size=2))\n","  # model_clstm.add(Dense(32, activation='relu'))\n","  model_clstm.add(SpatialDropout1D(dropout))\n","  model_clstm.add(LSTM(unit))\n","  model_clstm.add(Dense(2, activation='sigmoid'))\n","  model_clstm.compile(optimizer='nadam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_clstm.summary())\n","  return model_clstm"],"execution_count":41,"outputs":[]},{"cell_type":"code","metadata":{"id":"c1zoXGvgUQ3A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300722548,"user_tz":-420,"elapsed":11964,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"7574de44-660d-4e2d-95f7-f8de2068b38b"},"source":["m_clstm = get_model_clstm(X_train, Y_train)\n","history_CLSTM = m_clstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_6\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_6 (Embedding)      (None, 15, 100)           77900     \n","_________________________________________________________________\n","conv1d_1 (Conv1D)            (None, 15, 300)           90300     \n","_________________________________________________________________\n","max_pooling1d_1 (MaxPooling1 (None, 7, 300)            0         \n","_________________________________________________________________\n","spatial_dropout1d_6 (Spatial (None, 7, 300)            0         \n","_________________________________________________________________\n","lstm_3 (LSTM)                (None, 300)               721200    \n","_________________________________________________________________\n","dense_6 (Dense)              (None, 2)                 602       \n","=================================================================\n","Total params: 890,002\n","Trainable params: 890,002\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","8/8 [==============================] - 4s 176ms/step - loss: 0.6852 - acc: 0.5567 - val_loss: 0.6728 - val_acc: 0.5410\n","Epoch 2/100\n","8/8 [==============================] - 1s 104ms/step - loss: 0.6388 - acc: 0.6186 - val_loss: 0.5339 - val_acc: 0.8443\n","Epoch 3/100\n","8/8 [==============================] - 1s 107ms/step - loss: 0.4021 - acc: 0.8845 - val_loss: 0.2738 - val_acc: 0.9262\n","Epoch 4/100\n","8/8 [==============================] - 1s 105ms/step - loss: 0.1993 - acc: 0.9464 - val_loss: 0.2028 - val_acc: 0.9344\n","Epoch 5/100\n","8/8 [==============================] - 1s 104ms/step - loss: 0.1146 - acc: 0.9732 - val_loss: 0.1781 - val_acc: 0.9672\n","Epoch 6/100\n","8/8 [==============================] - 1s 102ms/step - loss: 0.0757 - acc: 0.9773 - val_loss: 0.1932 - val_acc: 0.9672\n","Epoch 7/100\n","8/8 [==============================] - 1s 104ms/step - loss: 0.0462 - acc: 0.9856 - val_loss: 0.2246 - val_acc: 0.9590\n","Epoch 8/100\n","8/8 [==============================] - 1s 103ms/step - loss: 0.0334 - acc: 0.9897 - val_loss: 0.2489 - val_acc: 0.9426\n","Epoch 9/100\n","8/8 [==============================] - 1s 102ms/step - loss: 0.0307 - acc: 0.9918 - val_loss: 0.2422 - val_acc: 0.9672\n","Epoch 10/100\n","8/8 [==============================] - 1s 103ms/step - loss: 0.0194 - acc: 0.9938 - val_loss: 0.2616 - val_acc: 0.9590\n"]}]},{"cell_type":"code","metadata":{"id":"UbtA4j_rUS5d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300724124,"user_tz":-420,"elapsed":1599,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"7b6ea039-49d5-4ea9-841a-4105cee45293"},"source":["score,acc_clstm = m_clstm.evaluate(X_test, Y_test)"],"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 18ms/step - loss: 0.2044 - acc: 0.9331\n"]}]},{"cell_type":"code","metadata":{"id":"58r09paUUUlG","executionInfo":{"status":"ok","timestamp":1632300926613,"user_tz":-420,"elapsed":661,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["m_clstm.save('/content/drive/My Drive/Thesis/Code/FixModel2/clstm_sentiment_lokasi_0.933.h5')"],"execution_count":66,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Iy8nWxe6BHYF"},"source":["### CNNBLSTM"]},{"cell_type":"code","metadata":{"id":"TVK0iWSAUXvp","executionInfo":{"status":"ok","timestamp":1632300724126,"user_tz":-420,"elapsed":9,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["def get_model_cblstm(X,Y):\n","  vocab = max([len(tokenizer.word_index)])+1\n","  model_cblstm = Sequential()\n","  model_cblstm.add(Embedding(input_dim=vocab, output_dim=output, input_length=max_seq_len))\n","  model_cblstm.add(Conv1D(filters=32, kernel_size=3, padding='same', activation='relu'))\n","  model_cblstm.add(MaxPool1D(pool_size=2))\n","  model_cblstm.add(Dense(unit, activation='relu'))\n","  model_cblstm.add(SpatialDropout1D(dropout))\n","  model_cblstm.add(Bidirectional(LSTM(unit, return_sequences=False)))\n","  model_cblstm.add(Dense(2, activation='sigmoid'))\n","  model_cblstm.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","  print(model_cblstm.summary())\n","\n","  return model_cblstm"],"execution_count":45,"outputs":[]},{"cell_type":"code","metadata":{"id":"-aEuCTxgUZvm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300743264,"user_tz":-420,"elapsed":19145,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c449617f-57d8-4367-db60-d2c690dba7a7"},"source":["m_cblstm = get_model_cblstm(X_train, Y_train)\n","history_CBLSTM = m_cblstm.fit(X_train, Y_train,\n","                      epochs=epoch,batch_size=batch,\n","                      validation_split=0.2, callbacks =[earlystopping])"],"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_7 (Embedding)      (None, 15, 100)           77900     \n","_________________________________________________________________\n","conv1d_2 (Conv1D)            (None, 15, 32)            9632      \n","_________________________________________________________________\n","max_pooling1d_2 (MaxPooling1 (None, 7, 32)             0         \n","_________________________________________________________________\n","dense_7 (Dense)              (None, 7, 300)            9900      \n","_________________________________________________________________\n","spatial_dropout1d_7 (Spatial (None, 7, 300)            0         \n","_________________________________________________________________\n","bidirectional_2 (Bidirection (None, 600)               1442400   \n","_________________________________________________________________\n","dense_8 (Dense)              (None, 2)                 1202      \n","=================================================================\n","Total params: 1,541,034\n","Trainable params: 1,541,034\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n","Epoch 1/100\n","8/8 [==============================] - 6s 288ms/step - loss: 0.6875 - acc: 0.5464 - val_loss: 0.6882 - val_acc: 0.5410\n","Epoch 2/100\n","8/8 [==============================] - 1s 152ms/step - loss: 0.6740 - acc: 0.5608 - val_loss: 0.6584 - val_acc: 0.5410\n","Epoch 3/100\n","8/8 [==============================] - 1s 148ms/step - loss: 0.5645 - acc: 0.5979 - val_loss: 0.4132 - val_acc: 0.8279\n","Epoch 4/100\n","8/8 [==============================] - 1s 150ms/step - loss: 0.2498 - acc: 0.9320 - val_loss: 0.4185 - val_acc: 0.8689\n","Epoch 5/100\n","8/8 [==============================] - 1s 154ms/step - loss: 0.1073 - acc: 0.9691 - val_loss: 0.2869 - val_acc: 0.9180\n","Epoch 6/100\n","8/8 [==============================] - 1s 154ms/step - loss: 0.0504 - acc: 0.9876 - val_loss: 0.2578 - val_acc: 0.9098\n","Epoch 7/100\n","8/8 [==============================] - 1s 150ms/step - loss: 0.0403 - acc: 0.9876 - val_loss: 0.2869 - val_acc: 0.9180\n","Epoch 8/100\n","8/8 [==============================] - 1s 152ms/step - loss: 0.0357 - acc: 0.9897 - val_loss: 0.3954 - val_acc: 0.8852\n","Epoch 9/100\n","8/8 [==============================] - 1s 154ms/step - loss: 0.0320 - acc: 0.9918 - val_loss: 0.3300 - val_acc: 0.9180\n","Epoch 10/100\n","8/8 [==============================] - 1s 151ms/step - loss: 0.0195 - acc: 0.9959 - val_loss: 0.3704 - val_acc: 0.9180\n","Epoch 11/100\n","8/8 [==============================] - 1s 151ms/step - loss: 0.0118 - acc: 0.9979 - val_loss: 0.3950 - val_acc: 0.9098\n"]}]},{"cell_type":"code","metadata":{"id":"6rA1QjdDUbK3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300743953,"user_tz":-420,"elapsed":714,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"1fd27570-c0ce-406a-8219-0b23f4e03383"},"source":["score,acc_cblstm = m_cblstm.evaluate(X_test, Y_test)"],"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["10/10 [==============================] - 0s 28ms/step - loss: 0.2405 - acc: 0.9231\n"]}]},{"cell_type":"code","metadata":{"id":"DA-ZEgvEUc1C","executionInfo":{"status":"ok","timestamp":1632300743954,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["# m_cblstm.save('/content/drive/My Drive/Thesis/Code/Model/cblstm_sentiment_model.h5')"],"execution_count":48,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"D3SAYrOuT0Y5"},"source":["### Result"]},{"cell_type":"code","metadata":{"id":"OeUu2x5pUgAf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300743955,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"54de4d52-13e4-49bd-e73c-fe0e7d86c432"},"source":["acc = {'Model': ['RNN','GRU','LSTM', 'CNN','BiLSTM', 'CNNLSTM','CNNBLSTM','ABLSTM'],\n","       'Acc': [acc_rnn, acc_gru, acc_lstm, acc_cnn, acc_blstm, acc_clstm, acc_cblstm, acc_ablstm]}   \n","df_acc_nn = pd.DataFrame(acc)  \n","print(df_acc_nn)  "],"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.852843\n","1       GRU  0.923077\n","2      LSTM  0.919732\n","3       CNN  0.919732\n","4    BiLSTM  0.889632\n","5   CNNLSTM  0.933110\n","6  CNNBLSTM  0.923077\n","7    ABLSTM  0.889632\n"]}]},{"cell_type":"markdown","metadata":{"id":"uroMA0JNBNT1"},"source":["## Machhine Learning"]},{"cell_type":"code","metadata":{"id":"nSjX_E4aUiP7","executionInfo":{"status":"ok","timestamp":1632300743956,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["from sklearn.naive_bayes import MultinomialNB\n","from sklearn.svm import SVC, LinearSVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.feature_extraction.text import TfidfTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.model_selection import train_test_split, cross_val_score\n","from sklearn.metrics import classification_report, confusion_matrix, accuracy_score, f1_score, precision_score, recall_score, plot_confusion_matrix\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","np.random.seed(7)"],"execution_count":50,"outputs":[]},{"cell_type":"code","metadata":{"id":"K5WU1_9EUko6","executionInfo":{"status":"ok","timestamp":1632300743957,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["X_train2, X_test2, y_train2, y_test2 = train_test_split(text, label, random_state=1)"],"execution_count":51,"outputs":[]},{"cell_type":"code","metadata":{"id":"aR080ykuUmsP","executionInfo":{"status":"ok","timestamp":1632300743957,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["acc_result = []\n","cross_val = 5"],"execution_count":52,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9Q6w3GRuBSBr"},"source":["### MNB"]},{"cell_type":"code","metadata":{"id":"CufsDryMUoDJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300743958,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"58ddfa15-b9bb-4bbd-ee33-2ceced341e69"},"source":["#Multinomial Naive Bayes with bigram\n","pipeline_mnb_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_bigram = cross_val_score(pipeline_mnb_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_bigram), 4)\n","std_score = round(np.std(scores_mnb_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d1 = ('MNB+Bigram',mean_score, std_score)\n","acc_result.append(d1)"],"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9204\n","Standard Dev: +/-0.0235\n"]}]},{"cell_type":"code","metadata":{"id":"rmfc04JnUpux","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300743958,"user_tz":-420,"elapsed":14,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"5a6abb6d-2af8-44fb-d896-c5e7fc6d508f"},"source":["#Multinomial Naive Bayes unigram\n","pipeline_mnb_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', MultinomialNB(alpha=1))\n","])\n","\n","scores_mnb_unigram = cross_val_score(pipeline_mnb_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_mnb_unigram), 4)\n","std_score = round(np.std(scores_mnb_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d2 = ('MNB+Unigram',mean_score, std_score)\n","acc_result.append(d2)"],"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9102\n","Standard Dev: +/-0.0269\n"]}]},{"cell_type":"markdown","metadata":{"id":"USJ83MjBBVZl"},"source":["### SVC"]},{"cell_type":"code","metadata":{"id":"PGVczeF4Ur1S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300743958,"user_tz":-420,"elapsed":12,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"bc1e11dc-fea6-47f4-970f-f36647e741e2"},"source":["#SVC with bigram\n","pipeline_svc_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_bigram = cross_val_score(pipeline_svc_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_bigram), 4)\n","std_score = round(np.std(scores_svc_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d3 = ('SVC+Bigram',mean_score, std_score)\n","acc_result.append(d3)"],"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9058\n","Standard Dev: +/-0.0260\n"]}]},{"cell_type":"code","metadata":{"id":"2WIjJb5eUtkI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300744721,"user_tz":-420,"elapsed":774,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6a528179-fb67-44ce-f35c-233f86037a57"},"source":["#SVC Unigram\n","pipeline_svc_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', SVC(kernel='linear',C=0.1, decision_function_shape='ovr'))\n","])\n","\n","scores_svc_unigram = cross_val_score(pipeline_svc_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_svc_unigram), 4)\n","std_score = round(np.std(scores_svc_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d4 = ('SVC+Unigram',mean_score, std_score)\n","acc_result.append(d4)"],"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9072\n","Standard Dev: +/-0.0240\n"]}]},{"cell_type":"markdown","metadata":{"id":"OkGOlxOABYXi"},"source":["### Logistic Regression"]},{"cell_type":"code","metadata":{"id":"p5RGympEUvRD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300744723,"user_tz":-420,"elapsed":31,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"006e4061-b2ad-4880-fb95-ff704d2fb0a1"},"source":["#Logistic Regression with Bigram\n","pipeline_lr_bigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,2))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_bigram = cross_val_score(pipeline_lr_bigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_bigram), 4)\n","std_score = round(np.std(scores_lr_bigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d5 = ('LR+Bigram',mean_score, std_score)\n","acc_result.append(d5)"],"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9352\n","Standard Dev: +/-0.0200\n"]}]},{"cell_type":"code","metadata":{"id":"e5yLB1cnUxNC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300744724,"user_tz":-420,"elapsed":30,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"736fec15-5b8a-47e7-c92e-c5e8df325be2"},"source":["#Logistic Regression Unigram\n","pipeline_lr_unigram = Pipeline([\n","    ('vect', CountVectorizer(min_df=3, ngram_range=(1,1))),\n","    ('tfidf', TfidfTransformer(use_idf=True, smooth_idf=True)),\n","    ('clf', LogisticRegression())\n","])\n","\n","scores_lr_unigram = cross_val_score(pipeline_lr_unigram,X_train2,y_train2,cv=cross_val, scoring='accuracy')\n","mean_score = round(np.mean(scores_lr_unigram), 4)\n","std_score = round(np.std(scores_lr_unigram), 4)\n","print(\"Accuracy: {0:.4f}\".format(mean_score))\n","print(\"Standard Dev: +/-{0:.4f}\".format(std_score))\n","d6 = ('LR+Unigram',mean_score, std_score)\n","acc_result.append(d6)"],"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9366\n","Standard Dev: +/-0.0222\n"]}]},{"cell_type":"code","metadata":{"id":"7k2aEchDUzKJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300744725,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6ddc4c3e-1544-461b-a00f-3061bb69544d"},"source":["# create DataFrame using data \n","df_acc_ml = pd.DataFrame.from_records(acc_result, columns =['Model', 'Accuracy', 'Standard Deviation']) \n","  \n","print(df_acc_ml)  "],"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.9204              0.0235\n","1  MNB+Unigram    0.9102              0.0269\n","2   SVC+Bigram    0.9058              0.0260\n","3  SVC+Unigram    0.9072              0.0240\n","4    LR+Bigram    0.9352              0.0200\n","5   LR+Unigram    0.9366              0.0222\n"]}]},{"cell_type":"markdown","metadata":{"id":"EJ64PtWnBddd"},"source":["# Overall Result"]},{"cell_type":"code","metadata":{"id":"Cc97CgmZU0xL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300744726,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"78557a59-d41e-45f1-b636-cc64e246434e"},"source":["print(df_acc_nn)"],"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["      Model       Acc\n","0       RNN  0.852843\n","1       GRU  0.923077\n","2      LSTM  0.919732\n","3       CNN  0.919732\n","4    BiLSTM  0.889632\n","5   CNNLSTM  0.933110\n","6  CNNBLSTM  0.923077\n","7    ABLSTM  0.889632\n"]}]},{"cell_type":"code","metadata":{"id":"fXXzuarUU2_a","colab":{"base_uri":"https://localhost:8080/","height":97},"executionInfo":{"status":"ok","timestamp":1632300744727,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6940a568-bacd-4be9-94b9-246c463ec51d"},"source":["print(\"Best Neural Network Model :\")\n","df_acc_nn[['Model', 'Acc']][df_acc_nn.Acc == df_acc_nn.Acc.max()]"],"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Neural Network Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Acc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>CNNLSTM</td>\n","      <td>0.93311</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     Model      Acc\n","5  CNNLSTM  0.93311"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","metadata":{"id":"kM_aJD23U4hC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632300744728,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"e12ccd47-c1aa-4726-80ca-5010ba5d1c56"},"source":["print(df_acc_ml)"],"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["         Model  Accuracy  Standard Deviation\n","0   MNB+Bigram    0.9204              0.0235\n","1  MNB+Unigram    0.9102              0.0269\n","2   SVC+Bigram    0.9058              0.0260\n","3  SVC+Unigram    0.9072              0.0240\n","4    LR+Bigram    0.9352              0.0200\n","5   LR+Unigram    0.9366              0.0222\n"]}]},{"cell_type":"code","metadata":{"id":"2d-0vXj2U8RA","colab":{"base_uri":"https://localhost:8080/","height":97},"executionInfo":{"status":"ok","timestamp":1632300744729,"user_tz":-420,"elapsed":28,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"c5a6fb92-6703-42f0-f249-2f30f889ce49"},"source":["print(\"Best Machine Learning Model :\")\n","df_acc_ml[['Model', 'Accuracy']][df_acc_ml.Accuracy == df_acc_ml.Accuracy.max()]"],"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Machine Learning Model :\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>LR+Unigram</td>\n","      <td>0.9366</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        Model  Accuracy\n","5  LR+Unigram    0.9366"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","metadata":{"id":"A87lb7zf3luk","executionInfo":{"status":"ok","timestamp":1632300744732,"user_tz":-420,"elapsed":29,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["model = m_clstm"],"execution_count":64,"outputs":[]},{"cell_type":"code","metadata":{"id":"At9xy80o3uUs","colab":{"base_uri":"https://localhost:8080/","height":754},"executionInfo":{"status":"ok","timestamp":1632300745723,"user_tz":-420,"elapsed":1019,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"327aac9c-07ee-40ef-c4fc-a84bfb860e1d"},"source":["from keras.utils.vis_utils import plot_model\n","\n","plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)"],"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","metadata":{"id":"3VsC34x934NJ"},"source":["# Analyze Results"]},{"cell_type":"code","metadata":{"id":"IH725MWs37Rr"},"source":["ev_model = model.predict(X_test)\n","ev_model_list = ev_model.tolist()\n","ev_classes = np.argmax(ev_model,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b8HSbwSA38zi","executionInfo":{"status":"ok","timestamp":1632233932911,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"3821cdd6-3d86-4a0c-e581-cdc6e72fb010"},"source":["# Creating a reverse dictionary\n","reverse_word_map = dict(map(reversed, tokenizer.word_index.items()))\n","\n","# Function takes a tokenized sentence and returns the words\n","def sequence_to_text(list_of_indices):\n","    # Looking up words in dictionary\n","    words = [reverse_word_map.get(letter) for letter in list_of_indices]\n","    return(words)\n","\n","# Creating texts \n","my_texts = list(map(sequence_to_text, X_test))\n","text_str=[]\n","for x in my_texts:\n","  x_str = ' '.join([str(elem) for elem in x])\n","  text_str.append(x_str)\n","text_str[0]\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'None None None None None None None None None None None lokasi mudah akses tol'"]},"metadata":{},"execution_count":68}]},{"cell_type":"markdown","metadata":{"id":"JFW7aOO64Ctb"},"source":["## Confusion Matrix"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q52Z5fLS4AVE","executionInfo":{"status":"ok","timestamp":1632233933535,"user_tz":-420,"elapsed":636,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6b27e1fe-123a-40c8-98c6-710dfc1015f2"},"source":["decode_sentiment = np.argmax(Y_test, axis=1)\n","lab_sentiment = [\"positive\",\"negative\"]\n","def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(ev_classes, decode_sentiment,lab_sentiment)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ya8KefAp4HCd","executionInfo":{"status":"ok","timestamp":1632233933538,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"32558484-2e5d-4ca3-c170-55e8444fe663"},"source":["from sklearn.metrics import accuracy_score\n","from sklearn.metrics import classification_report\n","accuracy_score(ev_classes, decode_sentiment)\n","print(classification_report(ev_classes, decode_sentiment))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.94      0.95      0.95       139\n","           1       0.96      0.95      0.95       161\n","\n","    accuracy                           0.95       300\n","   macro avg       0.95      0.95      0.95       300\n","weighted avg       0.95      0.95      0.95       300\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zmJgTM4n4RDj","executionInfo":{"status":"ok","timestamp":1632233933540,"user_tz":-420,"elapsed":17,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"8bb9c1e3-9d06-46f8-9945-79dd5c219939"},"source":["ev_train_model = model.predict(X_train)\n","ev_train_classes = np.argmax(ev_train_model,axis=1)\n","decode_train = np.argmax(Y_train, axis=1)\n","print(classification_report(ev_train_classes, decode_train))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.97      0.97      0.97       274\n","           1       0.98      0.97      0.97       333\n","\n","    accuracy                           0.97       607\n","   macro avg       0.97      0.97      0.97       607\n","weighted avg       0.97      0.97      0.97       607\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YEp3_iuB4U4Y","executionInfo":{"status":"ok","timestamp":1632233934380,"user_tz":-420,"elapsed":855,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"d708ed00-228f-497e-e1f0-775aba1b8d38"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(ev_classes, decode_sentiment))\n","print('F1 score:', f1_score(ev_classes, decode_sentiment, average='macro'))\n","print('Recall:', recall_score(ev_classes, decode_sentiment, average='macro'))\n","print('Precision:', precision_score(ev_classes, decode_sentiment, average='macro'))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.95\n","F1 score: 0.949753793588584\n","Recall: 0.9499754233879977\n","Precision: 0.9495535714285714\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_GR_epF_4VZm","executionInfo":{"status":"ok","timestamp":1632233934382,"user_tz":-420,"elapsed":158,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"4cfd4fbc-fb2c-46bb-f465-63043bb269ec"},"source":["plt.title('Loss')\n","plt.plot(history_LSTM.history['loss'], label='train')\n","plt.plot(history_LSTM.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();\n","\n","plt.title('Accuracy')\n","plt.plot(history_LSTM.history['acc'], label='train')\n","plt.plot(history_LSTM.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lK_wAPVg4Y3R","executionInfo":{"status":"ok","timestamp":1632233934509,"user_tz":-420,"elapsed":273,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"7867762b-3d2f-4417-9975-f6774e64ef7e"},"source":["print(history_BLSTM.history['acc'])\n","print(history_BLSTM.history['val_acc'])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.5051546096801758, 0.5525773167610168, 0.8061855435371399, 0.8989690542221069, 0.946391761302948, 0.9814432859420776, 0.9793814420700073, 0.9896907210350037, 0.9958763122558594, 0.9958763122558594, 0.9958763122558594]\n","[0.5245901346206665, 0.5245901346206665, 0.811475396156311, 0.9016393423080444, 0.8934426307678223, 0.9098360538482666, 0.9262295365333557, 0.9262295365333557, 0.9262295365333557, 0.9180327653884888, 0.9262295365333557]\n"]}]},{"cell_type":"markdown","metadata":{"id":"xlJ85nXN4Zff"},"source":["## Evaluate Misclassification"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6ngzfia_4cMl","executionInfo":{"status":"ok","timestamp":1632233934511,"user_tz":-420,"elapsed":267,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"1faf5273-6ac0-4ad8-97c6-f2ed5f62e5e3"},"source":["ev_data_test = {'Text':text_str,\n","        'Act':decode_sentiment,\n","        'Pred':ev_classes}\n","df_final_ev = pd.DataFrame(ev_data_test)\n","df_final_ev"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>None None None None None None None lokasi stra...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>None None None None None None None None cari p...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>None None None None None None None None None h...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>299</th>\n","      <td>None None None None None None None None None N...</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>300 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0    None None None None None None None None None N...    1     1\n","1    None None None None None None None lokasi stra...    1     1\n","2    None None None None None None None None None N...    1     1\n","3    None None None None None None None None None N...    0     0\n","4    None None None None None None None None None N...    1     1\n","..                                                 ...  ...   ...\n","295  None None None None None None None None None N...    1     1\n","296  None None None None None None None None None N...    0     0\n","297  None None None None None None None None cari p...    0     1\n","298  None None None None None None None None None h...    0     0\n","299  None None None None None None None None None N...    0     0\n","\n","[300 rows x 3 columns]"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1KJDj4Aj7YXH","executionInfo":{"status":"ok","timestamp":1632233934512,"user_tz":-420,"elapsed":253,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"2b3a86ec-723d-4062-c3ee-e00634831f13"},"source":["remove_words = ['None']\n","pat = r'\\b(?:{})\\b'.format('|'.join(remove_words))\n","df_final_ev['Text'] = df_final_ev['Text'].str.replace(pat, '')\n","df_final_ev"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>lokasi mudah akses tol</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>lokasi strategis dekat jalan besar band...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>dekat tugu jogja</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>hotel lama akses jalan dibiarkan</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>akses tempat wisata dekat</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>tempat nyaman nyaman</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>suasana sepi terkesan horor</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>cari pemandangan indah sejuk tempat ti...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>harus pakai kendaraan jalan kaki jauh</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>299</th>\n","      <td>jalan masuk kecil</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>300 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0                               lokasi mudah akses tol    1     1\n","1           lokasi strategis dekat jalan besar band...    1     1\n","2                                     dekat tugu jogja    1     1\n","3                     hotel lama akses jalan dibiarkan    0     0\n","4                            akses tempat wisata dekat    1     1\n","..                                                 ...  ...   ...\n","295                               tempat nyaman nyaman    1     1\n","296                        suasana sepi terkesan horor    0     0\n","297          cari pemandangan indah sejuk tempat ti...    0     1\n","298              harus pakai kendaraan jalan kaki jauh    0     0\n","299                                  jalan masuk kecil    0     0\n","\n","[300 rows x 3 columns]"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"id":"Qc6MdMy_Slmg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632233934519,"user_tz":-420,"elapsed":249,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"36b7912b-98b3-46f3-d0d4-dcf2590dee52"},"source":["df_final_ev.query('Act == Pred')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>lokasi mudah akses tol</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>lokasi strategis dekat jalan besar band...</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>dekat tugu jogja</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>hotel lama akses jalan dibiarkan</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>akses tempat wisata dekat</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>294</th>\n","      <td>lokasi masuk gang kecil sulit dicari</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>295</th>\n","      <td>tempat nyaman nyaman</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>suasana sepi terkesan horor</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>298</th>\n","      <td>harus pakai kendaraan jalan kaki jauh</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>299</th>\n","      <td>jalan masuk kecil</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>285 rows Ã— 3 columns</p>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","0                               lokasi mudah akses tol    1     1\n","1           lokasi strategis dekat jalan besar band...    1     1\n","2                                     dekat tugu jogja    1     1\n","3                     hotel lama akses jalan dibiarkan    0     0\n","4                            akses tempat wisata dekat    1     1\n","..                                                 ...  ...   ...\n","294               lokasi masuk gang kecil sulit dicari    0     0\n","295                               tempat nyaman nyaman    1     1\n","296                        suasana sepi terkesan horor    0     0\n","298              harus pakai kendaraan jalan kaki jauh    0     0\n","299                                  jalan masuk kecil    0     0\n","\n","[285 rows x 3 columns]"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dIgsOGfP8AKJ","executionInfo":{"status":"ok","timestamp":1632233934521,"user_tz":-420,"elapsed":241,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"0064da90-f012-48e1-d259-54d2e3698683"},"source":["df_final_ev.query('Act != Pred')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text</th>\n","      <th>Act</th>\n","      <th>Pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>23</th>\n","      <td>tidak ketakutan cari tempat makan kopi</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>ada akses resort pantai</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>sebelah hotel tempat dugem suara berisik</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>131</th>\n","      <td>akses cepat menuju lokasi wisata</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>142</th>\n","      <td>lokasi persimpangan jalan cukup ramai b...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>lingkungan hotel gersang</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>lokasi pusat keramaian macet padat</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>208</th>\n","      <td>dekat stasiun terganggu bunyi kereta m...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>221</th>\n","      <td>area luar resto kemangi</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>225</th>\n","      <td>lokasi perumahan elite sejuk</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>243</th>\n","      <td>lokasi jauh jalan raya tidak bising</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>268</th>\n","      <td>pemandangan buruk</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>bukan daerah macet</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>291</th>\n","      <td>lokasi pertokoan tidak nyaman</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>297</th>\n","      <td>cari pemandangan indah sejuk tempat ti...</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                  Text  Act  Pred\n","23              tidak ketakutan cari tempat makan kopi    1     0\n","66                             ada akses resort pantai    1     0\n","98            sebelah hotel tempat dugem suara berisik    0     1\n","131                   akses cepat menuju lokasi wisata    1     0\n","142         lokasi persimpangan jalan cukup ramai b...    0     1\n","143                           lingkungan hotel gersang    0     1\n","149                 lokasi pusat keramaian macet padat    0     1\n","208          dekat stasiun terganggu bunyi kereta m...    0     1\n","221                            area luar resto kemangi    1     0\n","225                       lokasi perumahan elite sejuk    1     0\n","243                lokasi jauh jalan raya tidak bising    1     0\n","268                                  pemandangan buruk    0     1\n","270                                 bukan daerah macet    1     0\n","291                      lokasi pertokoan tidak nyaman    0     1\n","297          cari pemandangan indah sejuk tempat ti...    0     1"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jjTxzkuSOlIs","executionInfo":{"status":"ok","timestamp":1632233934530,"user_tz":-420,"elapsed":247,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6ea7fdb7-3cd9-43c8-a6a3-a47dbc2e7ecc"},"source":["len(df_final_ev.query('Act != Pred'))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["15"]},"metadata":{},"execution_count":79}]},{"cell_type":"markdown","metadata":{"id":"1zAaGMepBh__"},"source":["# Testing"]},{"cell_type":"code","metadata":{"id":"fSIQ_K3rU9yj","executionInfo":{"status":"ok","timestamp":1632300953076,"user_tz":-420,"elapsed":5991,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["model = load_model('/content/drive/My Drive/Thesis/Code/FixModel2/clstm_sentiment_lokasi_0.933.h5')\n","labels=[\"negative\",\"positive\"]"],"execution_count":67,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":606},"id":"DP_MLui3VBG8","executionInfo":{"status":"ok","timestamp":1632300956524,"user_tz":-420,"elapsed":1417,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"a6eb3655-f627-45bb-f4c4-eb8f25a39f41"},"source":["df_test = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/result_test.xlsx')\n","df_lokasi = df_test[df_test[\"used aspect\"]==\"lokasi\"]\n","df_lokasi"],"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>470</th>\n","      <td>2021-06-29</td>\n","      <td>437</td>\n","      <td>lokasi oke tengah kota</td>\n","      <td>tiket</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.999729573726654, 0.00017246237257495522]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","    </tr>\n","    <tr>\n","      <th>471</th>\n","      <td>2020-01-02</td>\n","      <td>291</td>\n","      <td>menang lokasi dekat malioboro ada pasar bringh...</td>\n","      <td>tiket</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.999924898147583, 6.806348392274231e-05]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","    </tr>\n","    <tr>\n","      <th>472</th>\n","      <td>2021-04-17</td>\n","      <td>241</td>\n","      <td>seneng dekat malioboro jalan_kaki dikit sampai</td>\n","      <td>tiket</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.999985933303833, 1.2941487511852756e-05]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","    </tr>\n","    <tr>\n","      <th>473</th>\n","      <td>2020-08-21</td>\n","      <td>10</td>\n","      <td>sekitar lokasi hotel banyak jual makanan</td>\n","      <td>pegipegi</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.999855637550354, 0.0001367023796774447]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","    </tr>\n","    <tr>\n","      <th>474</th>\n","      <td>2021-05-26</td>\n","      <td>323</td>\n","      <td>strategis lokasi</td>\n","      <td>booking</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.9980916380882263, 0.0015138615854084492]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>677</th>\n","      <td>2020-09-05</td>\n","      <td>329</td>\n","      <td>suasana nyaman tengah_kota</td>\n","      <td>booking</td>\n","      <td>lokasi</td>\n","      <td>lokasi, harga</td>\n","      <td>lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>harga</td>\n","      <td>[0.9949601888656616, 0.003088946221396327]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","    </tr>\n","    <tr>\n","      <th>678</th>\n","      <td>2021-02-14</td>\n","      <td>120</td>\n","      <td>suasana tenang aman</td>\n","      <td>traveloka</td>\n","      <td>lokasi</td>\n","      <td>lokasi, restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>[0.9960072636604309, 0.0018438290571793914]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","    </tr>\n","    <tr>\n","      <th>679</th>\n","      <td>2020-06-08</td>\n","      <td>12</td>\n","      <td>tidak_bising lokasi tenang tidak_pinggir_jalan</td>\n","      <td>pegipegi</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.9999741315841675, 2.2864880520501174e-05]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","    </tr>\n","    <tr>\n","      <th>680</th>\n","      <td>2020-08-21</td>\n","      <td>10</td>\n","      <td>utama lokasi strategis</td>\n","      <td>pegipegi</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.9974790215492249, 0.002353660762310028]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","    </tr>\n","    <tr>\n","      <th>956</th>\n","      <td>2020-03-07</td>\n","      <td>398</td>\n","      <td>mengatasi masalah tanpa masalah</td>\n","      <td>agoda</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.551490306854248, 0.17218346893787384]</td>\n","      <td>pelayanan</td>\n","      <td>lokasi</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>212 rows Ã— 13 columns</p>\n","</div>"],"text/plain":["       tanggal   id  ... true aspect used aspect\n","470 2021-06-29  437  ...      lokasi      lokasi\n","471 2020-01-02  291  ...      lokasi      lokasi\n","472 2021-04-17  241  ...      lokasi      lokasi\n","473 2020-08-21   10  ...      lokasi      lokasi\n","474 2021-05-26  323  ...      lokasi      lokasi\n","..         ...  ...  ...         ...         ...\n","677 2020-09-05  329  ...      lokasi      lokasi\n","678 2021-02-14  120  ...      lokasi      lokasi\n","679 2020-06-08   12  ...      lokasi      lokasi\n","680 2020-08-21   10  ...      lokasi      lokasi\n","956 2020-03-07  398  ...   pelayanan      lokasi\n","\n","[212 rows x 13 columns]"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","metadata":{"id":"LkRA9fxYVEU5","executionInfo":{"status":"ok","timestamp":1632300962690,"user_tz":-420,"elapsed":1456,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["data_test = df_lokasi[\"text\"]\n","list_test = data_test.tolist()\n","\n","seq = tokenizer.texts_to_sequences(list_test)\n","padded = pad_sequences(seq, maxlen=max_seq_len)\n","pred = model.predict(padded)"],"execution_count":69,"outputs":[]},{"cell_type":"code","metadata":{"id":"kRd9jZ2jSsIe","executionInfo":{"status":"ok","timestamp":1632300962692,"user_tz":-420,"elapsed":15,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["y_test = []\n","for x in pred :\n","  y = labels[np.argmax(x)]\n","  # print(y)\n","  y_test += [y]"],"execution_count":70,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":742},"id":"F-DErqeJWvRF","executionInfo":{"status":"ok","timestamp":1632300962693,"user_tz":-420,"elapsed":16,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}},"outputId":"6b6a5b6b-69a5-4d07-f19b-48d8bb03469c"},"source":["df_lokasi[\"sentiment\"]=y_test\n","df_lokasi"],"execution_count":71,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tanggal</th>\n","      <th>id</th>\n","      <th>text</th>\n","      <th>source</th>\n","      <th>aspect</th>\n","      <th>Top kamar Aspects</th>\n","      <th>Unnamed: 6</th>\n","      <th>Unnamed: 7</th>\n","      <th>aspect 1</th>\n","      <th>aspect 2</th>\n","      <th>Scores</th>\n","      <th>true aspect</th>\n","      <th>used aspect</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>470</th>\n","      <td>2021-06-29</td>\n","      <td>437</td>\n","      <td>lokasi oke tengah kota</td>\n","      <td>tiket</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.999729573726654, 0.00017246237257495522]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>471</th>\n","      <td>2020-01-02</td>\n","      <td>291</td>\n","      <td>menang lokasi dekat malioboro ada pasar bringh...</td>\n","      <td>tiket</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.999924898147583, 6.806348392274231e-05]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>472</th>\n","      <td>2021-04-17</td>\n","      <td>241</td>\n","      <td>seneng dekat malioboro jalan_kaki dikit sampai</td>\n","      <td>tiket</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.999985933303833, 1.2941487511852756e-05]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>473</th>\n","      <td>2020-08-21</td>\n","      <td>10</td>\n","      <td>sekitar lokasi hotel banyak jual makanan</td>\n","      <td>pegipegi</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.999855637550354, 0.0001367023796774447]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>474</th>\n","      <td>2021-05-26</td>\n","      <td>323</td>\n","      <td>strategis lokasi</td>\n","      <td>booking</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.9980916380882263, 0.0015138615854084492]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>677</th>\n","      <td>2020-09-05</td>\n","      <td>329</td>\n","      <td>suasana nyaman tengah_kota</td>\n","      <td>booking</td>\n","      <td>lokasi</td>\n","      <td>lokasi, harga</td>\n","      <td>lokasi</td>\n","      <td>harga</td>\n","      <td>lokasi</td>\n","      <td>harga</td>\n","      <td>[0.9949601888656616, 0.003088946221396327]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>678</th>\n","      <td>2021-02-14</td>\n","      <td>120</td>\n","      <td>suasana tenang aman</td>\n","      <td>traveloka</td>\n","      <td>lokasi</td>\n","      <td>lokasi, restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>lokasi</td>\n","      <td>restoran</td>\n","      <td>[0.9960072636604309, 0.0018438290571793914]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>679</th>\n","      <td>2020-06-08</td>\n","      <td>12</td>\n","      <td>tidak_bising lokasi tenang tidak_pinggir_jalan</td>\n","      <td>pegipegi</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.9999741315841675, 2.2864880520501174e-05]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>680</th>\n","      <td>2020-08-21</td>\n","      <td>10</td>\n","      <td>utama lokasi strategis</td>\n","      <td>pegipegi</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.9974790215492249, 0.002353660762310028]</td>\n","      <td>lokasi</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>956</th>\n","      <td>2020-03-07</td>\n","      <td>398</td>\n","      <td>mengatasi masalah tanpa masalah</td>\n","      <td>agoda</td>\n","      <td>lokasi</td>\n","      <td>lokasi, hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>lokasi</td>\n","      <td>hotel</td>\n","      <td>[0.551490306854248, 0.17218346893787384]</td>\n","      <td>pelayanan</td>\n","      <td>lokasi</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>212 rows Ã— 14 columns</p>\n","</div>"],"text/plain":["       tanggal   id  ... used aspect sentiment\n","470 2021-06-29  437  ...      lokasi  positive\n","471 2020-01-02  291  ...      lokasi  positive\n","472 2021-04-17  241  ...      lokasi  positive\n","473 2020-08-21   10  ...      lokasi  positive\n","474 2021-05-26  323  ...      lokasi  positive\n","..         ...  ...  ...         ...       ...\n","677 2020-09-05  329  ...      lokasi  positive\n","678 2021-02-14  120  ...      lokasi  positive\n","679 2020-06-08   12  ...      lokasi  positive\n","680 2020-08-21   10  ...      lokasi  positive\n","956 2020-03-07  398  ...      lokasi  positive\n","\n","[212 rows x 14 columns]"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","metadata":{"id":"spEpUv61W0vR","executionInfo":{"status":"ok","timestamp":1632301157307,"user_tz":-420,"elapsed":1503,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"17820712209128539889"}}},"source":["df_result = pd.read_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/all_result_test.xlsx')\n","df_append = df_result.append(df_lokasi)\n","df_append.to_excel('/content/drive/My Drive/Thesis/Code/Dataset/Used/all_result_test.xlsx')"],"execution_count":74,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6hT6gKM48NOn"},"source":["# Evaluate Sentiment"]},{"cell_type":"code","metadata":{"id":"GZzPTe_oVF_p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619968647267,"user_tz":-420,"elapsed":1710,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"d72e0b25-c950-42d3-c9aa-71e7db10b56a"},"source":["ev_sent = model.predict_classes(X_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/sequential.py:450: UserWarning: `model.predict_classes()` is deprecated and will be removed after 2021-01-01. Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","  warnings.warn('`model.predict_classes()` is deprecated and '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"JI9ZyHH-8cYY"},"source":["decode_sent = np.argmax(Y_test, axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JSlN5TIH8pCG"},"source":["lab_sent = [\"negatif\",\"positif\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MehYEqFrAUpc"},"source":["def conf_matrix(Y_act, Y_pred, lab):\n","    confusion_mtx = confusion_matrix(Y_act, Y_pred)\n","    plt.figure(figsize=(10,8))\n","    sns.heatmap(confusion_mtx, annot=True, fmt=\"d\", xticklabels=lab, yticklabels=lab)\n","    plt.ylabel(\"Actual\")\n","    plt.xlabel(\"Predicted\")\n","    plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"ZTR8GOUa9TJb","executionInfo":{"status":"ok","timestamp":1619968647274,"user_tz":-420,"elapsed":1692,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"d49483d4-ee3a-4aad-8dbc-c91582a935b8"},"source":["conf_matrix(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x576 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"kLeStDruKN9l","colab":{"base_uri":"https://localhost:8080/","height":606},"executionInfo":{"status":"ok","timestamp":1619968648099,"user_tz":-420,"elapsed":2503,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"e0048e81-638b-4ee7-a1ad-dfebd9cca202"},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","from sklearn.metrics import confusion_matrix\n","\n","def plot_cm(Y_act, y_pred, lab, figsize=(10,10)):\n","    cm = confusion_matrix(Y_act, y_pred, labels=np.unique(Y_act))\n","    cm_sum = np.sum(cm, axis=1, keepdims=True)\n","    cm_perc = cm / cm_sum.astype(float) * 100\n","    annot = np.empty_like(cm).astype(str)\n","    nrows, ncols = cm.shape\n","    for i in range(nrows):\n","        for j in range(ncols):\n","            c = cm[i, j]\n","            p = cm_perc[i, j]\n","            if i == j:\n","                s = cm_sum[i]\n","                annot[i, j] = '%.1f%%\\n%d/%d' % (p, c, s)\n","                # annot[i,j] = '%.1f%%' % (p)\n","            # elif c == 0:\n","            #     annot[i, j] = ''\n","            else:\n","                annot[i, j] = '%.1f%%\\n%d' % (p, c)\n","                # annot[i, j] = '%.1f%%' % (p)\n","    cm = pd.DataFrame(cm_perc, index=np.unique(Y_act), columns=np.unique(Y_act))\n","    cm.index.name = 'Actual'\n","    cm.columns.name = 'Predicted'\n","    fig, ax = plt.subplots(figsize=figsize)\n","    sns.heatmap(cm, cmap= \"YlGnBu\", annot=annot, fmt='', ax=ax, xticklabels=lab, yticklabels=lab)\n","    # sns.heatmap(uniform_data,\n","    #         cbar_kws={'format': '%.0f%%', 'ticks': [0, 100]},\n","    #         vmax=100,\n","    #         vmin=0)\n","plot_cm(ev_sent, decode_sent, lab_sent)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XgjzN7Zi9ZCI","executionInfo":{"status":"ok","timestamp":1619968648101,"user_tz":-420,"elapsed":2496,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"6280c12e-ed15-49c6-80e0-d2b994abc7b5"},"source":["from sklearn.metrics import accuracy_score\n","accuracy_score(ev_sent, decode_sent)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9111842105263158"]},"metadata":{"tags":[]},"execution_count":72}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oKEJidKP9kSa","executionInfo":{"status":"ok","timestamp":1619968648102,"user_tz":-420,"elapsed":2491,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"15f25539-7389-458a-db8d-d7e70ecaa68f"},"source":["from sklearn.metrics import classification_report\n","print(classification_report(ev_sent, decode_sent))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.93      0.87      0.90       140\n","           1       0.90      0.95      0.92       164\n","\n","    accuracy                           0.91       304\n","   macro avg       0.91      0.91      0.91       304\n","weighted avg       0.91      0.91      0.91       304\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V_4mHIBD9sM1","executionInfo":{"status":"ok","timestamp":1619968648103,"user_tz":-420,"elapsed":2484,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"e0cb3360-6e83-4059-df9c-ae414ae95fdb"},"source":["from sklearn.metrics import precision_score, \\\n","    recall_score, confusion_matrix, classification_report, \\\n","    accuracy_score, f1_score\n","\n","print('Accuracy:', accuracy_score(ev_sent, decode_sent))\n","print('F1 score:', f1_score(ev_sent, decode_sent, average='macro'))\n","print('Recall:', recall_score(ev_sent, decode_sent, average='macro'))\n","print('Precision:', precision_score(ev_sent, decode_sent, average='macro'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy: 0.9111842105263158\n","F1 score: 0.9101251546640096\n","Recall: 0.9082752613240418\n","Precision: 0.9136257335745488\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"8jzXTeea90VA","executionInfo":{"status":"ok","timestamp":1619968648104,"user_tz":-420,"elapsed":2476,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"a1731d8f-e89a-43ac-ab76-a3e612cc0ebf"},"source":["plt.title('Loss')\n","plt.plot(history_LSTM.history['loss'], label='train')\n","plt.plot(history_LSTM.history['val_loss'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"YbTEzFpR9_pG","executionInfo":{"status":"ok","timestamp":1619968648484,"user_tz":-420,"elapsed":2849,"user":{"displayName":"SIWI CAHYANINGTYAS","photoUrl":"","userId":"17820712209128539889"}},"outputId":"51c34720-5477-4f2c-8411-b721fb873f28"},"source":["plt.title('Accuracy')\n","plt.plot(history_LSTM.history['acc'], label='train')\n","plt.plot(history_LSTM.history['val_acc'], label='test')\n","plt.legend()\n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXQAAAEICAYAAABPgw/pAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3deXxU9b3/8dcnk0kmgUCAsIclyqLUDUXcLdaigK3Lr4vYerX30Up/V70/773qr3rb2tq7edt7bWvrUvsrtZtai9XSFhUXrLfuAVFZQ0CFsIQQCEnIMpnk+/vjnMCQBRKYZJhz3s/HYx45c86ZOZ8vh7zzne85c4455xARkcyXle4CREQkNRToIiIBoUAXEQkIBbqISEAo0EVEAkKBLiISEAp0EZGAUKBLxjGzl81sj5nlprsWkWOJAl0yiplNBC4AHHB5P243u7+2JXKkFOiSaa4D3gAeAa5vn2lm48zs92ZWZWbVZvbjpGU3mNlaM6szszVmdro/35nZpKT1HjGzf/WnZ5lZhZl9zcx2AD83syFm9id/G3v86eKk1w81s5+b2TZ/+dP+/FVm9umk9aJmtsvMpvfZv5KEkgJdMs11wG/8x6VmNtLMIsCfgI+AicBY4HEAM/sc8G3/dYPwevXVPdzWKGAoMAFYgPf78nP/+XigEfhx0vq/AvKBjwEjgO/7838JXJu03jxgu3PunR7WIdIjpmu5SKYws/OBZcBo59wuM1sH/ASvx77Yn5/o8JrngCXOuR928X4OmOycK/efPwJUOOe+YWazgKXAIOdcUzf1nAYsc84NMbPRwFZgmHNuT4f1xgDrgbHOuVozWwS85Zz77hH/Y4h0QT10ySTXA0udc7v854/688YBH3UMc984YOMRbq8qOczNLN/MfmJmH5lZLfAKUOh/QhgH7O4Y5gDOuW3Aq8BnzKwQmIv3CUMkpXSgRzKCmeUBnwci/pg2QC5QCFQC480su4tQ3wIc383bNuANkbQbBVQkPe/48fVWYCpwlnNuh99DfwcwfztDzazQOVfTxbZ+AXwF73fudefc1u5bK3Jk1EOXTHEl0ApMA07zHycC/+Mv2w7cY2YDzCxmZuf5r/t/wG1mdoZ5JpnZBH/ZSuALZhYxsznAxw9TQwHeuHmNmQ0FvtW+wDm3HXgGeMA/eBo1swuTXvs0cDpwC96YukjKKdAlU1wP/Nw5t9k5t6P9gXdQ8hrg08AkYDNeL/tqAOfc74B/wxueqcML1qH+e97iv64G+KK/7FB+AOQBu/DG7Z/tsPxvgBZgHbAT+If2Bc65RuBJoAT4fS/bLtIjOigq0k/M7C5ginPu2sOuLHIENIYu0g/8IZov4/XiRfqEhlxE+piZ3YB30PQZ59wr6a5HgktDLiIiAaEeuohIQKRtDL2oqMhNnDgxXZsXEclIy5cv3+WcG97VsrQF+sSJEyktLU3X5kVEMpKZfdTdMg25iIgEhAJdRCQgFOgiIgGhQBcRCQgFuohIQBw20M1soZntNLNV3Sw3M7vPzMrN7L3223uJiEj/6kkP/RFgziGWzwUm+48FwINHX5aIiPTWYc9Dd8694t9pvTtXAL903jUE3jCzQjMb7V8fWlKksraJJ97eQl5OhGvPnkAsGtm/rLaphUff3Eybc1w1fSx/enc7dU0taaxWRA7l4hNHcuq4wpS/byq+WDQW78JD7Sr8eZ0C3cwW4PXiGT9+fAo2fWz7/YoK6psTDMnP4aV1O4/qvV7fWM2OWu9uaIuWV3Di6EH7l727pYZNu/YB8N9Ly2htc5gd1eZEpA+NGBQ7ZgO9x5xzDwMPA8yYMSMQVwVrTrTy3WfXMyQ/ylc/fjzff76Mtz7YTby1jfcq9u5fb3hBLnlJvereGjk4xsIvncnm3fv476VlLP/owK0r83Mi/OYrZ5GTncU9z6zjxlnHc/GJI4+qXSKSeVIR6FvxbpDbrtifFwgVexq49Yl3mVkylJs/MYk9+1q4fdG7lFXWAdCcaKOmwRve+MlfNlHXnGDGhCEUxLL5PxdPpiA3mz0Ncf5x9hSikaM/qWjamEHMOWl0t8uf/Ltzj3obIpKZUhHoi4Gbzexx4Cxgb1DGz1duqeErvyiltrGFNz/YzY9eKgcgLxrhU6eMJpLljWtcdMIIahrivLO5hnMnFXH5qWPSWbaIhNRhA93MHgNmAUVmVoF3Y9wogHPuIWAJMA8ox7uL+t/2VbH9ZVNVPcMLcrnuZ28yKC/KYzecT1llPR9We+PUnzxxJFNHFXR63dVnBv+4gIgcu3pylss1h1nugJtSVlEaOed44OWNfO+59ZxSPJjapgQ/+sLpTB5ZwOSRnQNcRORYonuKJvnnp1bx2FubKcjN5r2KveRFI5xVMvTwLxQROQboq/++ytomHntrM188azw/mH8aAOdNKjrofG8RkWOZeui+ij2NgDc+fsHkIi47eTRXnznuMK8SETl2KNB922q8QB9TmEd2JIv7v6hL0ohIZtGQC7B7Xzwp0GNprkZE5MiEvoe+q76ZGf/6AgAFsWwKYtE0VyQicmRC30Pf6o+dA4wtzEtjJSIiRyf0gd5+wSuA0YM13CIimSuUgd4Yb+XrT73P1ppGKpMCfYx66CKSwUI5hr743a385s3NDB2QQ2vbgYs+KtBFJJOFMtAff9u7fPtL63YydWQBowbF+NyMYj59ii6qJSKZK3SBXlZZxzubaxg3NI/V22ppamllTGGMWy+Zmu7SRESOSujG0H/79haiEeM/P3MKABur9jFKB0NFJABCFejNiVZ+v6KC2dNGcs5xw/bfxm3kIAW6iGS+UAX6+xV72dPQwuWnjsXMuOzkUYB31ouISKYLVaC330j5BP/mFNeePYEZE4ZwzUzdmEJEMl+oDop+uGsf2VlG8RDv9MTC/BwW6R6cIhIQoeqhf7BrH+OH5pOdgps1i4gca0KVbB/s2sfEogHpLkNEpE+EJtDb2hwfVu9j4jAFuogEU2gCvbKuiaaWNkqGK9BFJJhCE+jbaryLcLUfEBURCZrQBHptUwsAg3QDCxEJqNAEel1TAoBBsVCdqSkiIRKiQPd66LrFnIgEVYgC3euhF6iHLiIBFaJAbyGSZeTnRNJdiohInwhRoCcYmJuNmaW7FBGRPhH4QG+IJ/iXP61h3+7tPM0/wa7ydJckItInAh/oyz/aw8/++gHbyt+jxG2BraXpLklEpE8EPtBrG72DoTHX6M2o257GakRE+k7wA90/XXEA3jdFqatMYzUiIn0n8IHefv75APMDvX5HGqsREek7gQ/09iEX9dBFJOh6FOhmNsfM1ptZuZnd0cXyCWb2opm9Z2Yvm1lx6ks9MgeGXPwx9K566K0t0NLUj1WJiKTeYQPdzCLA/cBcYBpwjZlN67DafwG/dM6dAnwH+I9UF3qkahs7DLnUVYJz0LAb/msKbHgevjcJ/m0krP1j5zdwDh48H976adcbeOwaWPpNb/rJr8DTN3rTT98Iv702xa0REeleT3roM4Fy59wm51wceBy4osM604CX/OllXSxPm/av/O8fcmnZB811UL0R6iuh/EVoqvGWbXmz8xs0VEPl+/DBK52XOQebXj6w7INXYNXvoXGP93PdEm9aRKQf9CTQxwJbkp5X+POSvQv8L3/6KqDAzIZ1fCMzW2BmpWZWWlVVdST19lptx4Oi4AV5+9DL3qSmVW/s/AbV/heRdm/qvKxuO7Q0eMuaar33TTTCsv/wfrpW2PhS59eJiPSBVF2p6jbgx2b2JeAVYCvQ2nEl59zDwMMAM2bMcCna9iHVNiYoGpjLgOakQK/b4T0A9lZ4P/OHdRPoGw/8bGuDd34F21fCKfOhNe4ta649uHf/1k8gmg/ZuVC2FE76DHz4KqxalPoGdiWSCx//v5A/FNpa4bUfwSlXe7Xvq4Kzb4ShJd4w0nEXQfkLsKsMzrgeRp8KK34J297x3uvkz8GEc2HtnyA2yPvDtfFFmHwpTJ3TP+2RYGtrhVd/CNP/BgYO7//tb38XKlfDaV9IzfvFG+Dlf/fadeHt3u9hP+lJoG8FxiU9L/bn7eec24bfQzezgcBnnHM1qSryaNQ2tTBr6nDO3JWDayrG9lZ4O7B9KKQ90Mec7g2ftLVCVtIFvNp76IlGqFoHf/4naEvArg1eULcre9b7efwnYMf7XhDu2wUblnrv+fxd3vzYoD5vM/uqYHAxnHszbH4dXvgWbFrmtQ8Ag7O+Cktug+NmHZhfXwlXPgh/+kfIjnl/sCpXw5eWwB9ugoLR3r9b/Q7Y8AJMuRR0bRw5Wh+8Ai/e7f1/m9XpnIu+9+K/eJ+kp8xJTfiu+7PXiQIonABn/++jf88e6kmgvw1MNrMSvCCfDxz0p8zMioDdzrk24E5gYaoLPVJ1TQkG50UZmt0MRVMhpwA2PAeF470VGnZ5P8eeDuXPQ81mr/farjrp2i9v/9QL8/HnwkevwZCJB5aVLQUM5j8KUf82d+8vgvef8MJ+63K46Ovw8dv7srmeB871tnnuzQf+0Gx6GSwLis/05rW3sT3Mx58LG5dB2XNeG7/4O9j0F/jLf0LZM95xhvZjDRPOg49ehZ1rYWTH4+MivVT2nP/z2f4P9Pg+7w9K+/DoyZ89+vcsexbyiyCv0Js+lgLdOZcws5uB54AIsNA5t9rMvgOUOucWA7OA/zAzhzfkclMf1txjidY26psT3m3n4vtg0FivV/n6jyERP3jlMad7Pze/fvD8qvUw8mTvwGjpQogVwie+AY/M84YwiqbA7g9g72YYPO5AmANMuhgsAs/eCTiYckmftne/KZd4PYTKNf4vi3nbL54Jp17t9cDfePDA/MHj4bxb4LGr4aXveG0snukNGf3lHnjunw+si8Hc78JD58H7v4Podf3TpnQqGAVZ2Qc+zUlqlT0LmDfMt+0d7/9ff/noVWht9ra/5g8w9oyjfEPnDWFOnef19t96GHau836XkuUP65NP6z0aQ3fOLQGWdJh3V9L0IqCfBoh7rr7Zv+1cXjY010NugRfor/4Atrxx8MpjpgMGT/9d5zc69+9hz4cQr4PJs2H82d4OaaiGEdO8X/ada7xwT5Y3BMafAx/9FQrGwKhT+qSdnUyZC3/9Pjx4jvd8xpeh9GfemPfkSwGDmo/g9Otg5aPe/JILvXH/ms1w0mchkg2jp8PAUd68kguhdpvX7lEnwejT4K/3eo+gm3AeDBrj/QGTvtH+f/ThWf2/7dxBXi68/ztYuzg17zl1jve78vqP4YGzOi+/7F4488up2VaSQN++p/1bogWxKMTrIWeA1/OMFR4YPgBvGKZgJFz3NNR2uHiXZXkhPu1Kb/jl+E94Y+x/85TXAy65wDsNcttKmHBO5yKufMAbnhl1cv+NN4+bCdc8Do01EInCCZd5Y/pjpkM0Btcv9g4KT74EzvhbGHoc5OTD9X/02njcRd77ZGXBtYtgxyqYeJ73BayIfwu/zy6ELW/1T3vSaeNL/ieRPJg0++DjJpIa2Tlwwqdg6lzvuFN/Gz7F+5Q66ZPeqchHK5rntceyvCHYptrO6xTPOPrtdCHYge6fsjgoN+IH+kCv5znpkwefcdL+0ee4Wd2/Wf7Qg3fC6FO9R7sRJ3b9uiETvEd/MvN+OZIl/7EpufDA9NjTD0wXz+j8H23Uyd6jo2HHe4+gGznNOw7S0gBnfkVn9vSlybPTu/1T56f+PU+4LPXveQiBvpZLbVML+TRxyrt3ewf6cgZ4C6Zc6v3M9se7c/vhzBPJTKNO8c7uyY4d/IdQ5BgU6B56Q3Mrs7NKGbXhMW9GboH3c8oc76BFNN/rqffHqYSSmczgglu9oYCc/HRXI3JIge6h74sncCSNW7f30GOD4JrHDgw3xAb3f3GSOWbeABfdme4qRA4r0IHeGG9liNUfmGEdmts+1KIhFxEJgEAH+r54K0Os7sCMvA7fAmsfatGQi4gEQKDH0BvjCQqpx8UGY19+vvN54uqhi0iABL6HPiyrHssbCsOndj4PXD10EQmQ4PbQ66uYt/7ruKwq7xubXcn1D4aqhy4iARDcQP/wfzh5zwvedP4nu15nyEQ48wbvG5MiIhkuuIFen3Qz6I4HQ9tFsuGy/+qfekRE+lhwx9Drkm4G3Y8XmBcRSZfgBnpPeugiIgES3EBXD11EQia4gX5QD72bs1xERAIkuIFet53d+KclqocuIiEQzLNcEs3QuIenuIIpIwdzwfgubjwhIhIwgeyhN+7ZBkBZywheK7np4Pt8iogEVCADfclrKwGodIUMyImkuRoRkf4RyEAvaNsLQLUbTF5OMEeVREQ6CmSg52fFAWgkRz10EQmNQAZ6a3MTAM1EyVOgi0hIBDLQ2+INADS7HPI15CIiIRHMQE94PfQmotQ3t6S5GhGR/hHIQHct7UMuOUwfp2+Jikg4BHM8wg/09f9+BWQF8m+WiEgnwUy7RBNxogpzEQmVYCZeook4OemuQkSkXwUy0LNam2nJUqCLSLgEMtCttZkWU6CLSLgEMtAjrc20ZuWmuwwRkX4VzEBvayahQBeRkAlkoGe3NdMWUaCLSLj0KNDNbI6ZrTezcjO7o4vl481smZm9Y2bvmdm81Jfac9kuTpsOiopIyBw20M0sAtwPzAWmAdeY2bQOq30DeMI5Nx2YDzyQ6kJ7I9oWpy07ls4SRET6XU966DOBcufcJudcHHgcuKLDOg4Y5E8PBralrsTeiSfayCUO2RpyEZFw6UmgjwW2JD2v8Ocl+zZwrZlVAEuAv+/qjcxsgZmVmllpVVXVEZR7eI0treTSgouohy4i4ZKqg6LXAI8454qBecCvzKzTezvnHnbOzXDOzRg+fHiKNn2wxngrMYvrPqIiEjo9CfStwLik58X+vGRfBp4AcM69DsSAolQU2FsN8QS5tJAVVQ9dRMKlJ4H+NjDZzErMLAfvoOfiDutsBi4GMLMT8QK9b8ZUDqMh7g25mAJdRELmsIHunEsANwPPAWvxzmZZbWbfMbPL/dVuBW4ws3eBx4AvOedcXxV9KE3xBDHiZGnIRURCpkfXQ3fOLcE72Jk8766k6TXAeakt7cg0NjWRZY7sHPXQRSRcAvdN0Xizdz/RrJz8NFciItK/AhfoLU1eoGfnqocuIuESvEBvbgQgO1dj6CISLoEL9IQ/5BLNHZDmSkRE+lfwAj3u3SA6qiEXEQmZwAV6W9zvoeugqIiETOACvb2HnpWjMXQRCZfABbpr8QIdXT5XREImcIFu8TpvIkcHRUUkXAIX6IMb/Sv9Fo5PbyEiIv0scIE+rGkzVTYMcgemuxQRkX4VuEAfHq9ge3bH+2+IiARf4AJ9RMtWdkYV6CISPsEK9IbdDHK1VOWMO/y6IiIBE6xAr94IwO6YDoiKSPgEK9D3eme41MfGpLkQEZH+F6xATzQD+paoiIRTsAK91Qv0iO5WJCIhFKxAT8QBdPs5EQmlQAV6mz/kokAXkTAKVKC3X2kxR4EuIiEUyEDXzS1EJIyCFegtTcRdhLycaLpLERHpd4EK9LaWZuJEyY0GqlkiIj2Sne4CUqm1pRlHNrFoJN2liIj0u0AFeltLEwmyyVOgi0gIBWpswiXixF1UPXQRCaVABXpbopk42cQ0hi4iIRSs5EvEiaMeuoiEU7ACvbWZZrLJiQSrWSIiPRGo5LNWr4cezQ5Us0REeiRQyWetceIum2jE0l2KiEi/C1agt8Vp0ZCLiIRUoJIvq33IRYEuIiHUo+Qzszlmtt7Mys3sji6Wf9/MVvqPMjOrSX2ph5fVFidONjkaQxeREDrsN0XNLALcD8wGKoC3zWyxc25N+zrOuX9MWv/vgel9UOthZbW1ECdKdpbG0EUkfHrSlZ0JlDvnNjnn4sDjwBWHWP8a4LFUFNdbkbY4CYtipkAXkfDpSaCPBbYkPa/w53ViZhOAEuClbpYvMLNSMyutqqrqba2H1R7oIiJhlOrB5vnAIudca1cLnXMPO+dmOOdmDB8+PMWbhohrIWE5KX9fEZFM0JNA3wqMS3pe7M/rynzSNNwCEGlroTVLPXQRCaeeBPrbwGQzKzGzHLzQXtxxJTM7ARgCvJ7aEnuorY0IrbRlqYcuIuF02EB3ziWAm4HngLXAE8651Wb2HTO7PGnV+cDjzjnXN6UeRmszAG0aQxeRkOrRDS6cc0uAJR3m3dXh+bdTV9YRSHiB3qoeuoiEVHC+gdMaB8BFFOgiEk7BCXS/h64xdBEJq+AEunroIhJygQv0NgW6iIRUcALdH3JBgS4iIRWcQNeQi4iEXHACfX8PPTe9dYiIpElwAr1VQy4iEm7BCfSEN+RCtnroIhJOwQl0fwzdFOgiElLBCfSWBu9nNC+9dYiIpElwAr1uBwDxWFGaCxERSY/gBHp9JXUuD3Ly012JiEhaBCbQXd0OdrpCopHANElEpFcCk35eoA9RoItIaAUn/eoq2UkhOQp0EQmpYKSfc9i+Sn/IxdJdjYhIWgQj0JvrsJYGKt0QcrIj6a5GRCQtghHo/imL6qGLSJgFI9DrvUCvopCc7GA0SUSkt4KRfvU7AXTaooiEWjDSr3EPADVuoAJdREIrGOnXtBeAOvI1hi4ioRWMQG+upS0rhzhRnYcuIqEVjPRrqiWRUwBAVAdFRSSkgpF+zbUkon6gq4cuIiEVjPRrqqUleyCAhlxEJLSCkX7NtcTbAz1bB0VFJJyCEehNtTRHvEDP1Vf/RSSkghHozbU0Zg0AYEBudpqLERFJj2AEelMtDX6g5+eohy4i4ZT5gd7WCvE66sknkmXk6rRFEQmpzE+/5loA6hjAgJwIZjooKiLh1KNAN7M5ZrbezMrN7I5u1vm8ma0xs9Vm9mhqyzyEJi/Q97blafxcRELtsAloZhHgfmA2UAG8bWaLnXNrktaZDNwJnOec22NmI/qq4E78Hvpep0AXkXDrSQLOBMqdc5sAzOxx4ApgTdI6NwD3O+f2ADjndqa60G75PfQ9rTEG6ICoSOC1tLRQUVFBU1NTukvpU7FYjOLiYqLRaI9f05NAHwtsSXpeAZzVYZ0pAGb2KhABvu2ce7bHVRwNv4e+uzXGgJh66CJBV1FRQUFBARMnTgzsMTPnHNXV1VRUVFBSUtLj16XqoGg2MBmYBVwD/NTMCjuuZGYLzKzUzEqrqqqOfqs7VsFj8wHY1RIjP0eBLhJ0TU1NDBs2LLBhDmBmDBs2rNefQnoS6FuBcUnPi/15ySqAxc65FufcB0AZXsAfxDn3sHNuhnNuxvDhw3tVaJeW/xwiufCxq/ggMYwBuRpyEQmDIId5uyNpY08C/W1gspmVmFkOMB9Y3GGdp/F655hZEd4QzKZeV9MbzkHZczB5NnzuEWrj+paoiITbYQPdOZcAbgaeA9YCTzjnVpvZd8zscn+154BqM1sDLANud85V90nFuzd5Qf7Or2HvFph8CQD7mlt1UFRE+lxNTQ0PPPBAr183b948ampq+qCiA3rUpXXOLQGWdJh3V9K0A/7Jf/SttX+E5/1NZ0Vh8iW0tjkaW1rVQxeRPtce6DfeeONB8xOJBNnZ3WfQkiVLul2WKpmXgKdcDRPP96bzh8Gg0TQ0tQAwQAdFRULl7j+uZs222pS+57Qxg/jWpz/W7fI77riDjRs3ctpppxGNRonFYgwZMoR169ZRVlbGlVdeyZYtW2hqauKWW25hwYIFAEycOJHS0lLq6+uZO3cu559/Pq+99hpjx47lD3/4A3l5eUdde+Z99b9gFIw9w3sMmQh4wy2gMXQR6Xv33HMPxx9/PCtXruR73/seK1as4Ic//CFlZWUALFy4kOXLl1NaWsp9991HdXXn0ecNGzZw0003sXr1agoLC3nyySdTUlsgEnBfPAGgs1xEQuZQPen+MnPmzIPOFb/vvvt46qmnANiyZQsbNmxg2LBhB72mpKSE0047DYAzzjiDDz/8MCW1BCPQm71A13noItLfBgwYsH/65Zdf5oUXXuD1118nPz+fWbNmdXkueW5u7v7pSCRCY2NjSmrJvCGXLhwYclEPXUT6VkFBAXV1dV0u27t3L0OGDCE/P59169bxxhtv9GttgejStvfQdVBURPrasGHDOO+88zjppJPIy8tj5MiR+5fNmTOHhx56iBNPPJGpU6dy9tln92ttgUjAA2PogWiOiBzjHn206yuE5+bm8swzz3S5rH2cvKioiFWrVu2ff9ttt6WsrkAMudQ2eYE+SBfnEpEQC0Sg1+yLAzA4v+eXmRQRCZpABPqehhbycyLkZuugqIiEVyACvaYxzpD8nHSXISKSVsEI9IYWCjXcIiIhF4hA39OgHrqISEYGelubO+j53oYWHRAVkX5xpJfPBfjBD35AQ0NDiis6IOMC/eevfsApdy8lnmjbP8/roSvQRaTvHcuBnnEnbg/Jz6G+OcGH1fuYMrKAtjbH3sYWDbmIhNEzd8CO91P7nqNOhrn3dLs4+fK5s2fPZsSIETzxxBM0Nzdz1VVXcffdd7Nv3z4+//nPU1FRQWtrK9/85jeprKxk27ZtXHTRRRQVFbFs2bLU1k0GBvqkEQMB2FBZz5SRBdQ1JWhzMDhPPXQR6Xv33HMPq1atYuXKlSxdupRFixbx1ltv4Zzj8ssv55VXXqGqqooxY8bw5z//GfCu8TJ48GDuvfdeli1bRlFRUZ/UlpGBnmVQVlnHZYxmT4P3pSL10EVC6BA96f6wdOlSli5dyvTp0wGor69nw4YNXHDBBdx666187Wtf41Of+hQXXHBBv9STcYEei0YYPzSfDTu9q53tD/QB6qGLSP9yznHnnXfy1a9+tdOyFStWsGTJEr7xjW9w8cUXc9ddd3XxDqmVcQdFASaNKGBDZT0ANY3e7ecK1UMXkX6QfPncSy+9lIULF1Jf7+XR1q1b2blzJ9u2bSM/P59rr72W22+/nRUrVnR6bV/IuB46wJSRA3lpXSWz7/0Ldf6FuQo1hi4i/SD58rlz587lC1/4Aueccw4AAwcO5Ne//jXl5eXcfvvtZGVlEY1GefDBBwFYsGABc+bMYcyYMX1yUNScc4dfqw/MmDHDlZaWHtFry3fW8cMXy2lt805dLBqYy7c+/TEiWZbKEkXkGLR27VpOPPHEdJfRL7pqq1nSWukAAATrSURBVJktd87N6Gr9jOyhTxpRwI+umZ7uMkREjikZOYYuIiKdKdBFJOOka6i4Px1JGxXoIpJRYrEY1dXVgQ515xzV1dXEYrFevS4jx9BFJLyKi4upqKigqqoq3aX0qVgsRnFxca9eo0AXkYwSjUYpKSlJdxnHJA25iIgEhAJdRCQgFOgiIgGRtm+KmlkV8NERvrwI2JXCctJJbTk2qS3HJrUFJjjnhne1IG2BfjTMrLS7r75mGrXl2KS2HJvUlkPTkIuISEAo0EVEAiJTA/3hdBeQQmrLsUltOTapLYeQkWPoIiLSWab20EVEpAMFuohIQGRcoJvZHDNbb2blZnZHuuvpLTP70MzeN7OVZlbqzxtqZs+b2Qb/55B019kVM1toZjvNbFXSvC5rN899/n56z8xOT1/lnXXTlm+b2VZ/36w0s3lJy+7027LezC5NT9Wdmdk4M1tmZmvMbLWZ3eLPz7j9coi2ZOJ+iZnZW2b2rt+Wu/35JWb2pl/zb80sx5+f6z8v95dPPKINO+cy5gFEgI3AcUAO8C4wLd119bINHwJFHeZ9F7jDn74D+M9019lN7RcCpwOrDlc7MA94BjDgbODNdNffg7Z8G7iti3Wn+f/XcoES//9gJN1t8GsbDZzuTxcAZX69GbdfDtGWTNwvBgz0p6PAm/6/9xPAfH/+Q8Df+dM3Ag/50/OB3x7JdjOthz4TKHfObXLOxYHHgSvSXFMqXAH8wp/+BXBlGmvplnPuFWB3h9nd1X4F8EvneQMoNLPR/VPp4XXTlu5cATzunGt2zn0AlOP9X0w759x259wKf7oOWAuMJQP3yyHa0p1jeb8451y9/zTqPxzwCWCRP7/jfmnfX4uAi82s1zdJzrRAHwtsSXpewaF3+LHIAUvNbLmZLfDnjXTObfendwAj01PaEemu9kzdVzf7QxELk4a+MqIt/sf06Xi9wYzeLx3aAhm4X8wsYmYrgZ3A83ifIGqccwl/leR697fFX74XGNbbbWZaoAfB+c6504G5wE1mdmHyQud95srIc0kzuXbfg8DxwGnAduC/01tOz5nZQOBJ4B+cc7XJyzJtv3TRlozcL865VufcaUAx3ieHE/p6m5kW6FuBcUnPi/15GcM5t9X/uRN4Cm9HV7Z/7PV/7kxfhb3WXe0Zt6+cc5X+L2Eb8FMOfHw/pttiZlG8APyNc+73/uyM3C9dtSVT90s751wNsAw4B2+Iq/3GQsn17m+Lv3wwUN3bbWVaoL8NTPaPFOfgHTxYnOaaeszMBphZQfs0cAmwCq8N1/urXQ/8IT0VHpHual8MXOefVXE2sDdpCOCY1GEs+Sq8fQNeW+b7ZyKUAJOBt/q7vq7446w/A9Y65+5NWpRx+6W7tmTofhluZoX+dB4wG++YwDLgs/5qHfdL+/76LPCS/8mqd9J9NPgIjh7Pwzv6vRH4errr6WXtx+EdlX8XWN1eP95Y2YvABuAFYGi6a+2m/sfwPvK24I3/fbm72vGO8t/v76f3gRnprr8HbfmVX+t7/i/Y6KT1v+63ZT0wN931J9V1Pt5wynvASv8xLxP3yyHakon75RTgHb/mVcBd/vzj8P7olAO/A3L9+TH/ebm//Lgj2a6++i8iEhCZNuQiIiLdUKCLiASEAl1EJCAU6CIiAaFAFxEJCAW6iEhAKNBFRALi/wMjOoZEu7QG/AAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"_2M0YBAp-fYL"},"source":[""],"execution_count":null,"outputs":[]}]}